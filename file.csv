Issue ID,Issue Title,GitHub Link,Issue Details
17,ui portal on 8080 only white screen,https://github.com/openfaas/faas/issues/17,"{'description': ""This way cool, and thanks for posting this project!\r\n\r\nI ran the quickstart, and again on my local machine, however I wasn't able to successfully bring the UI portal up.  \r\n1) Cloned mater branch\r\n2 ) `docker swarm init --advertise-addr=$(ifconfig eth0| grep 'inet addr:'| cut -d: -f2 | awk '{ print $1}') &&   git clone https://github.com/alexellis/faas &&   cd faas &&   ./deploy_stack.sh &&   docker service ls`\r\n3) used curl to verify the stack was consumer web events\r\n4) checked prom to which came up without issues\r\n5) checked  AlertManager also no issues.\r\n6) tried http://localhost:8080 and I can only see a white screen, even though I can post events.\r\n\r\nCurious if you have any tips to get to the UX screen.\r\nTIA!"", 'comments': ['Thanks for the feedback on this - please see note on: https://github.com/alexellis/faas/pull/18\r\n\r\nBtw you can create your own function two ways:\r\n* through the stack file and running `docker stack deploy`\r\n* through a new pop-up in the UI\r\n\r\nThe image I\'ve pushed will now contain the ""new function"" popup and you can checkout [this]() as an example on how to create one with the base AlpineFunction image or any other image with your own code. Basically any Docker container plus the `fwatchdog` process.\r\n\r\nPlease try to pull this new image to verify the fix at your end, then I\'ll close the issue.', 'works now thanks!', 'Awesome, this will also work on your regular Docker installation just need at least 1.13. Do you have any pet projects or images you could try with FaaS?', ""Currently, my plan to to do some experiments with a few esp8266 modules and FaaS to see if I can do multi-room temperature measurements.  I didn't want to go overkill on a stack just to collect temperature data, this faas stack is pretty much much perfect for me.  I'll post some snippets once I get things up and running.  Thanks again.""]}"
24,docker-compose.yml cannot use '\t',https://github.com/openfaas/faas/issues/24,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nwhen to execute\r\n```\r\ndocker stack deploy -c docker-compose.yml func\r\n```\r\n\r\n## Expected Behavior\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\npass \r\n## Current Behavior\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nERROR: yaml.scanner.ScannerError: while scanning for the next token\r\nfound character \'\\t\' that cannot start any token\r\n  in ""./docker-compose.yml"", line 106, column 22\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n#25 \r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. git clone faas && cd faas && docker stack deploy -c docker-compose.yml func\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Version used: 17.03.0-ce\r\n* Environment name and version (e.g. nginx 1.9.1):\r\n* Server type and version:\r\n* Operating System and version:\r\n* Link to your project:', 'comments': ['Hi please can you edit this issue to use the template provided? As far as I am aware the compose file is working in the master branch', '@alexellis  update', '@llitfkitfk I have the same Docker version and cannot reproduce the issue on my Mac laptop or on Play-with-docker.com. I have removed any extra spacing I could find, do you want to try pulling from master again?\r\n\r\nBtw the ./deploy_stack.sh file will deploy the stack using a similar command. ', 'tried & works fine', 'docker-compose up --abort-on-container-exit\r\nERROR: yaml.scanner.ScannerError: while scanning for the next token\r\nfound character \'\\t\' that cannot start any token\r\n  in ""./docker-compose.yml"", line 7, column 1\r\n  \r\n  I managed to get this and it led me here. I can\'t figure it out for the life of me :(', ""@loftwah please raise your own issue because there is no swarm support in openfaas, which is what this issue is about. Don't delete any fields in the template when you raise your ticket."", '/lock']}"
27,"port to aarch64 (armv8, arm64)",https://github.com/openfaas/faas/issues/27,"{'description': ""It would be great to get this working on ARMv8.\r\n\r\n## Expected Behavior\r\n\r\nThe goal would be to provide a Dockerfile that enables FaaS on ARMv8 machines, specifically getting the watchdog process running.\r\n\r\n## Current Behavior\r\n\r\nThe biggest challenge I've identified is finding a compact base container that provides a current version of Go to build and run the worker. The aarch64/ubuntu-golang container is more than a year old, for example. https://github.com/aarch64/ubuntu-golang/issues/4\r\n\r\n## Possible Solution\r\n\r\nWork upstream to get a good aarch64/golang base image, and this becomes nearly trivial.\r\n\r\n## Context\r\n\r\nLooking to port this environment to the Packet 2A 96-core ARM servers.\r\n\r\n\r\n"", 'comments': [""An upstream container would be great - I think you already know @tiannon who manages aarch64.\r\n\r\nI have my own set of armhf Dockerfiles in this repo -> [docker-arm](https://github.com/alexellis/docker-arm/tree/master/images/armhf) in the interim I'd be happy to have PRs here to create an ARMv8 version of Dockerfiles.\r\n\r\nDid the watchdog / gateway build on Packet?\r\n\r\n### Steps for porting\r\n\r\n*There may be more, but I'd start here:*\r\n\r\n* Find base image for Alpine\r\n* Find base image for Golang 1.7.x (or try building with 1.6.4?)\r\n* Port sample functions as per existing .armhf. extensions\r\n* Port other build scripts as per existing .armhf. extensions\r\n\r\nOther dependency: Docker 1.13 or newer."", ""The base image for Alpine is easy, that's aarch64/alpine.\r\n\r\nThe base for Golang 1.7.x or 1.8.x can be aarch64/ubuntu + a Go PPA.\r\n\r\nI'll make a link from this issue to http://worksonarm.com/faas and chase dependencies there too."", 'WIP https://github.com/alexellis/faas/pull/52', ""Someone has a Docker build for 17.04-ce as a binary, I'll find that and use it."", 'I count 18 files to touch or add from \r\n\r\nhttps://github.com/alexellis/faas/search?utf8=✓&q=armhf&type=\r\n\r\nThere might be some refactoring to be done.', '[Arm64v8 on docker hub](https://hub.docker.com/r/arm64v8/golang/tags/) is showing recent activity.\r\n\r\nGolang 1.7.5 to 1.9 appears to be available.', ""Yes, that's good. Docker for ARMv8 is broken for Swarm right now, so this is the blocking piece at the moment. You can do a manual build but if 17.07 is fully working we can move forward with this."", 'Closing - will create new issue when we tackle this.']}"
31,"func_webhookstash won't stash file larger than 100k, just hangs",https://github.com/openfaas/faas/issues/31,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nI'm able to stash (via func_webhookstash) a small text file, but when attempting a larger file (1.8M) the command simply hangs.\r\n\r\n## Expected Behavior\r\nI expect no behavior difference, regardless of file size/type.\r\n\r\nOr I expect a meaningful error.\r\n## Current Behavior\r\nThe larger upload hangs indefinitely.\r\n\r\nI do see the gateway forwarding to webhookstash:\r\n```\r\ndocker logs -f func_gateway.1.mazbcz33vjo5lhkviyj2y5kb3  \r\n\r\nResolving: 'func_webhookstash'\r\n[1490657353] Forwarding request [application/x-www-form-urlencoded] to: http://10.0.0.20:8080/\r\n```\r\n\r\nHowever, I see no further logging information.\r\n\r\n## Steps to Reproduce (for bugs)\r\n```\r\ndev % ls -al hello.txt IMG_0733.JPG\r\n-rw-r--r-- 1 nick nick      12 Mar 27 16:22 hello.txt\r\n-rw-r--r-- 1 nick nick 1815980 Mar 27 13:44 IMG_0733.JPG\r\n\r\ndev % cat hello.txt | curl -X POST http://localhost:8080/function/func_webhookstash --data-binary @-  \r\nStashing request\r\n\r\ndev % cat IMG_0733.JPG | curl -X POST http://localhost:8080/function/func_webhookstash --data-binary @-\r\n```\r\n**hangs indefinitely**\r\n\r\n## Environment\r\n\r\n* Docker version 17.03.0-ce, build 60ccb22\r\n* Linux dev 4.8.0-41-generic #44-Ubuntu SMP Fri Mar 3 15:27:17 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n* Ubuntu 16.10"", 'comments': ['Seems to break at 100K:\r\n\r\n```\r\ndev % dd if=/dev/zero of=output.zero bs=1K count=50                                                                                                                                                                                                                      \r\n50+0 records in\r\n50+0 records out\r\n51200 bytes (51 kB, 50 KiB) copied, 0.000235105 s, 218 MB/s\r\n\r\ndev % cat output.zero | curl -X POST http://localhost:8080/function/func_webhookstash --data-binary @-\r\nStashing request\r\n\r\ndev % dd if=/dev/zero of=output.zero bs=1K count=100\r\n100+0 records in\r\n100+0 records out\r\n102400 bytes (102 kB, 100 KiB) copied, 0.000343563 s, 298 MB/s\r\n\r\ndev % cat output.zero | curl -X POST http://localhost:8080/function/func_webhookstash --data-binary @-    \r\n```', 'Note this also fails using the `-d @IMG_0733.JPG` method (vs `cat` and `-d @-`)', ""I'll have a look into this issue, but a web-hook is just an event - not a blob. I.e. a JSON POST rather than binary images or dd-generated etc. It should be a short message in JSON plain-text or application/json.\r\n\r\nIf you want to look at the sample/test function's source it's available in the repository @ https://github.com/alexellis/faas/blob/master/sample-functions/WebhookStash/handler.go\r\n\r\nYou can run the function stand-alone for testing `docker stack rm func` followed by `docker run -p 8080:8080 -ti alexellis2/faas-webhookstash`"", 'Looks like the Golang buffered pipe in (watchdog process) was blocking at 64kb.\r\n\r\nThis is the fix - https://github.com/alexellis/faas/compare/watchdog_buffer_fix\r\n\r\nIf you\'d like to try this before it\'s released then checkout the watchdog_buffer_fix branch and re-build the fwatchdog binary with the ""build.sh"" script in the watchdog folder. Then copy it to the webhook stash function. \r\n\r\nAlternatively - try swapping the tag `latest` for `issue_31` in docker-compose.yml for the webhookstash function.', 'Fixed by #33 ', 'Thanks, @alexellis !']}"
45,content-type unset (or lacking control) on functions via watchdog,https://github.com/openfaas/faas/issues/45,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nIt isn\'t clear to me how to set the Content-Type on an individual function, particularly run via the fwatchdog.\r\n\r\n## Expected Behavior\r\n\r\nI should be able to write HTTP headers as part of the output of the program (like cgi-bin):\r\n\r\n```\r\nContent-Type: text/plain\r\n\r\n\r\nhello world\r\n```\r\n\r\nOr specify it in the docker-compose:\r\n\r\n```\r\n   hello:\r\n        image: functions/alpine:latest\r\n        labels:\r\n            function: ""true""\r\n        depends_on:\r\n            - gateway\r\n        networks:\r\n            - functions\r\n        environment:\r\n            fprocess: ""echo hello world""\r\n            content_type: ""text/plain""\r\n            no_proxy: ""gateway""\r\n            https_proxy: $https_proxy\r\n```\r\n\r\n## Current Behavior\r\nContent-Type appears to be unset when using `fwatchdog`.\r\n\r\n## Possible Solution\r\n\r\n1) static content_type in docker-compose\r\n2) override_headers: ""true""/""false"" would allow the script to indicate http headers (via \\n\\n above)\r\n3) headers_stderr: ""true""/""false"" override headers written to stderr\r\n\r\nHappy to build something for PR if there is a desired direction.', 'comments': ['@nkirsch thanks for raising this issue. I\'d like to work on this soon - \r\nhave you got a specific example that you\'re trying to get working?\r\n\r\nThe watchdog should match the output contentType to that of the input contentType. So if Github/slack/etc posts a webhook event then that will be matched in the response.\r\n\r\nI think there are two main use-cases:\r\n\r\n1. JSON webhoook events from third-party integrations\r\n\r\nCurrent behaviour appears to work in this scenario - i.e. webhooks do not expect anything other than 200 - OK. If input is text/plain then the output will be matched. If the input is application/json the output will also be matched.\r\n\r\n```\r\n$ curl http://localhost:8080/function/fuchoit -d ""test"" -v -H ""Content-Type: text/plain""\r\n\r\n> Content-Type: text/plain\r\n> Content-Length: 4\r\n\r\n< Content-Type: text/plain\r\n< Content-Length: 4\r\n```\r\n\r\n2. Use of FaaS functions as part of another application\r\n\r\nThis is where I think your use-case is more applicable. So you may request a photo for instance with a JSON input contentType and expect content/octet-stream or similar as a response.\r\n\r\nWe need to figure out whether the output contentType should be set statically for a function by the watchdog or whether the function should indicate the contentType to the watchdog in a known format.\r\n\r\nStatically in watchdog:\r\n\r\n- process env var is set once ahead of time\r\n\r\nVia function\r\n\r\n- known serialized format is used and interpreted by the watchdog\r\n\r\n```\r\n{\r\n  ""raw"": ""dGVzdAo="",\r\n  ""contentType"": ""binary/octet-stream""\r\n}\r\n```', '@nkirsch would you like to test PR #46 ?', '@nkirsch did you ever come back to this? Might also be worth looking at of-watchdog via https://docs.openfaas.com which allows much more control over the HTTP response. ']}"
53,pipe the functions?,https://github.com/openfaas/faas/issues/53,"{'description': ""I currently haven't tried FaaS yet, but will do asap. I have one question though, something I couldn't make up from the documentation.\r\n\r\nIs it currently possible to create pipes? Thus, to link the STDOUT from one function to the STDIN of another function? Would something like this work?\r\n\r\n```bash\r\nmkfifo fifo\r\n./process1 argument1 < fifo | ./process2 argument1 > fifo\r\n```\r\nhttp://stackoverflow.com/questions/5129276/how-to-redirect-stdout-of-2nd-process-back-to-stdin-of-1st-process\r\n\r\nThanks,\r\nBas\r\n"", 'comments': [""@bdestombe i would be unsure about using unix pipes, but I've done something similar by chaining functions together. My example uses javascript and promises, but i'd think this could be done in any language. check out this FaaS [function ](https://github.com/aafrey/faas-demo/tree/master/src/Logger), index.coffee and faas-chain.coffee specifically for an example. "", ""Hi @bdestombe,\r\n\r\nThe functions are accessed through the API gateway which is a HTTP endpoint. So for now, you can (pipe) chain functions in two ways:\r\n\r\n* Through the client (transform passes back to caller each time - so network trips)\r\n* On the server, a single function calls through to other functions via local network - so less latency\r\n\r\nBut effectively you are piping. In my Dockercon demo you'll see me do server-side chaining for the Github / Fanclub:\r\n\r\nhttps://github.com/alexellis/faas-dockercon/"", 'Ah indeed, this makes sense. Thanks, both of you @aafrey and @alexellis. Using a post request over http for chaining several function was indeed what I was looking for.\r\n\r\nThanks,\r\nBas', 'Ah eventually found what I was originally looking for. This example first prints the license file to the stdin of the built-in encrypt-to-base64 function, then passes the encoded string to the the decrypt-from-base64 function and prints it to the stdout. It works on the playground.\r\n \r\n```bash\r\ncat LICENSE | curl -sX POST http://localhost:8080/function/func_base64 -d ""$(</dev/stdin)"" | curl -sX POST http://localhost:8080/function/func_decodebase64 -d ""$(</dev/stdin)""\r\n```\r\ngot some pointers from http://stackoverflow.com/questions/12583930/use-pipe-for-curl-data', ""I think that can become a bit simpler still. I'll see if I can suggest something in the week"", 'Here we go -\r\n\r\n```\r\n# curl -s --data-binary @LICENSE http://localhost:8080/function/func_base64 |  \\\r\n       curl -s http://localhost:8080/function/func_decodebase64 --data-binary @-\r\n```']}"
55,distinguish between functions belonging to different gateways,https://github.com/openfaas/faas/issues/55,"{'description': ""## Expected Behavior\r\n\r\nIf there are multiple gateways in the same swarm, it should be possible to configure the gateways to pick up specific sets of functions, perhaps by labels. Otherwise, each gateway picks up all function services in the swarm.\r\n\r\n## Current Behavior\r\n\r\nFunction services are currently denoted by the presence of a `function` label on the service. Gateways automatically pick up all services with this label.\r\n\r\n## Possible Solution\r\n\r\nAs an example, [Traefik](https://traefik.io) can be [configured with constraints](https://docs.traefik.io/toml/#constraints) for which Traefik configured services it handles. Only services that match the constraint (via tags on labels) will be handled by the Traefik instance. This enables multiple instances of Traefik to be deployed on a swarm, each handling a different set of services.\r\n\r\n## Context\r\n\r\nI'm trying out FaaS in a project. The repo branches for this project are automatically built and deployed on a Docker swarm for review as part of a CI/CD process. The FaaS gateways from the deployments are picking up the functions from all the deployments, not just the specific branch. There doesn't seem to be a way to limit each gateway to the services for a specific deployment.\r\n\r\n## Your Environment\r\n* Docker version `docker version` (e.g. Docker 17.0.03 ): 17.0.04\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Development on macOS. CI/CD deployments on RHEL 7.3.\r\n* Link to your project: Not available (internal)."", 'comments': [""Hi @kinghuang,\r\n\r\nThanks for opening this issue. I'd like to understand your use-case a little more.\r\n\r\nIn terms of two making FaaS gateways available - have you tried deploying individual stacks on separate networks? Can you share your YAML file with me?\r\n\r\n```\r\n# docker stack deploy pipeline1 -c ./stack1.yml\r\n# docker stack deploy pipeline2 -c ./stack2.yml\r\n```"", 'I could reproduce the issue with the steps above. Both gateways saw the functions from either stack.\r\n\r\nHow would you propose injecting the unique network name / namespace into the gateway process/container?', 'You can use this test implementation - and provide a `stack_namespace` environmental variable to your gateways. This will filter your functions to only the gateway / stack they belong to.\r\n\r\nhttps://github.com/alexellis/faas/compare/filter_networks?expand=1', '@kinghuang please can you give feedback on above?', ""@alexellis Will do! I've added this to my task list."", ""@alexellis Sorry again to take so long. I'm finally ready to take a look at this, but it looks like the `filter_networks` branch is gone. Any chance you can push that back up and I'll review it right away? Thanks."", ""We're talking about an issue opened in April.. so I think I pruned it. The branch should be there again now thanks for looking 👍 "", ""Thanks. I don't see it on GitHub, yet. Mind double-checking the branch?"", ""@alexellis I still don't see the branch. Considering how much development has happened since May, would it be better to just re-implement? If so, I will take that on."", 'Sure. Please join us on Slack to coordinate - message alex@openfaas.com ', '@kinghuang thanks for joining. Here is the branch - https://github.com/alexellis/faas/compare/filter_networks?expand=1', 'Derek add label: priority/low']}"
62,"where to find dockerfile for ""busybox / shell""(functions/alpine:latest)",https://github.com/openfaas/faas/issues/62,"{'description': 'Hi,\r\n\r\nI just want to confirm Docker file for https://hub.docker.com/r/functions/alpine/.\r\nCan you git-add this file into repo too?\r\n\r\nThank you for exciting project!!', 'comments': [""Hey, you're welcome! \r\n\r\nIt's in the samples folder -> https://github.com/alexellis/faas/tree/master/sample-functions/AlpineFunction\r\n\r\nAlso - I've set up auto-build for this but the name is a bit more verbose -> https://hub.docker.com/r/functions/base/tags/""]}"
68,project: design logo / name,https://github.com/openfaas/faas/issues/68,"{'description': 'A logo will be useful for promoting project. Currently underway with designer.\r\n\r\nAt the same time a new project name could be useful. FaaS sounds a lot like ""fast"" which was confusing in the US. ', 'comments': [""I don't know the current status, but also think the Faas name is a little confusing in an already confusing topic (FaaS vs Serverless. What is the difference and things like that).\r\nI think a good name for it could be something like  Everest, because, you know, it auto scale the functions. Its about scaling. Not very clever but its a suggestion. Don't now if you are accepting suggestions for names, this can be very personal.\r\nHope I helped in some way."", ""The company Serverless Inc appears to be doing well even with a generic name. I'm still looking into a logo which may involve a new alias or name."", 'Generally, project maintainers select a animal, or thing that shares common traits with the project to imply similar qualities.  Perhaps you have some traits in mind already?', 'We have a cut of the logo here:\r\n\r\nhttps://blog.alexellis.io/introducing-functions-as-a-service/', 'Thanks for the comments', 'This is now widely known as OpenFaaS - www.openfaas.com. Closing issue. ', 'Mind sharing who the designer was for the logo? (big fan)']}"
74,get to 1.0 - security strategy,https://github.com/openfaas/faas/issues/74,"{'description': ""Initial areas for security strategy. Implementation needs to be easy to use when deployed locally or in development environment.\r\n\r\n**UI**\r\n\r\nStatic Angular UI tester visible when deployed\r\n\r\nSuggestion - HTTPs / basic auth and cookie. Minimum initial version could have a single admin account.\r\n\r\n**System API**\r\n\r\nEndpoints: deploy function / delete function / get a list of functions\r\n\r\nApproach needs to be consumed by the UI and by an optional CLI.\r\n\r\n**Functions API**\r\n\r\nI.e. /function/function_name [POST]\r\n\r\nThis can be split into two use-cases:\r\n\r\nFor the functions expecting webhooks, it's rare that I've seen anything here - sometimes a digest of the message from the remote party. Mainly just a HTTP POST with a body to your endpoint.\r\n\r\nFor endpoints not receiving webhooks from third-parties, but being used as part of a chain of functions etc - maybe here it makes sense to add some kind of header/bearer token / JWT.\r\n\r\n**Related**\r\n\r\n* Rate limiting\r\n* IP black/whitelisting\r\n* Account lock-out for bad login attempts\r\n* Account reset (via? email?)\r\n* Is persistent storage needed for any of the above?\r\n"", 'comments': [""In general seems like you're thinking about all the right things. I would say that supporting an HMAC injected as a header from any function receiving a web hook is probably the right call. That means that you probably need to have per-function symmetric keys?"", 'Any further thoughts on this in the long run? ', 'Hi @Omeryl - I would say that this is outside the scope of a serverless framework and could be implemented easily with a project specialising in these areas such as NGinx / Traefik or Kong. Does that make sense? What are your thoughts?', '@alexellis I mean, as long as the client is capable of doing basic auth, or sending specific headers, it could definitely be built as plugins for the client. I was just wondering what the official thoughts were on this before I started tinkering with this for some coworkers is all. ', 'Can you give me a quick outline of what you had in mind?', 'Kong/Mashape are working on a plugin for OpenFaaS - this should add whatever we need in terms of security / OAuth / basic auth / rate-limiting etc.']}"
77,get to 1.0 - hard timeouts,https://github.com/openfaas/faas/issues/77,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nHard timeouts should be available for functions to prevent them running beyond desired duration.\r\n\r\n## Expected Behavior\r\n\r\nI.e. with a hard_timeout of 3 seconds, the process/request should be killed with appropriate HTTP error code after going beyond 3000 ms.\r\n\r\n## Current Behavior\r\n\r\nRead/Write timeouts are set at the HTTP gateway. \r\n\r\n## Possible Solution\r\n\r\nGo routine / timer\r\n', 'comments': [""It should also be possible to disable this because you can sometimes have a long running task which you need to know the output from. Although, a better solution would be to have the function fire off a webhook itself so it's possible to get the output."", 'Yes, it would need to be configurable.', 'Yes++', '@xaviator how are you finding FaaS?', 'Anyone want to test a PR for this? @developius @xaviator ', 'Done.. merged.']}"
89,faas gateway doesn't work with the json format,https://github.com/openfaas/faas/issues/89,"{'description': ""## Expected Behavior\r\nThe response should be a JSON-formatted version of the 'text' body.\r\n\r\n## Current Behavior\r\nThe response is currently `null` or '' for all entries.\r\n\r\n## Possible Solution\r\nConvert the textual response to JSON.\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Clone repository on Playing With Docker.\r\n2. Visit the UI page.\r\n3. Select `func_nodeinfo`\r\n4. Select `JSON` response.\r\n5. Note `null` response, test again with `Text` and observe non-`null` response.\r\n\r\nCan be reproduced with any of the functions that give an output.\r\n\r\n## Context\r\nJust found it playing around with the default FaaS\r\n\r\n## Your Environment\r\n* Playing with Docker defaults.\r\n\r\n(tagging @developius)\r\n"", 'comments': ['This is only to indicate the client-side rendering of the response. The nodeinfo function is plaintext not JSON hence null. ', ""Ah, is there any way to define a function as only having one response format defined?  Or some way it can be specified without the interface?\r\n\r\nEDIT: Considering the use-case, probably not the most important thing.  I'll close this issue, thanks for the explanation."", ""@popey456963 welcome to FaaS!\r\n\r\nThere's some documentation here regarding request/response format -> \r\n\r\nhttps://github.com/alexellis/faas/tree/master/watchdog\r\n\r\nEssentially the default is whatever content-type comes in - also comes out, but you can override the output content-type easily with an environmental variable.\r\n\r\nThe gateway UI is just a tester page - for most cases you will send in plain text via the UI.\r\n\r\nYou can also access the functions `curl` or your existing websites/apps/APIs.""]}"
94,functions that run longer than 8 seconds return empty replies.,https://github.com/openfaas/faas/issues/94,"{'description': ""Long running functions (8+ seconds) return with empty responses.\r\n\r\n## Expected Behavior\r\nSTDOUT should be returned in the response body.\r\n\r\n## Current Behavior\r\nThe response body is empty.\r\n\r\n## Steps to Reproduce\r\nDeploy faas.\r\nCreate the following files:\r\n\r\n#### func.yml\r\n```yaml\r\nversion: '3.1'\r\n\r\nservices:\r\n  test:\r\n    image: functions/alpine\r\n    networks: [ func_functions ]\r\n    labels:\r\n      function: 'true'\r\n    environment:\r\n      read_timeout: 60\r\n      write_timeout: 60\r\n      fprocess: 'sh /root/func.sh'\r\n    volumes:\r\n    -  .:/root\r\nnetworks:\r\n  func_functions:\r\n    external: true\r\n```\r\n#### func.sh\r\n```bash\r\nDELAY=`cat -`\r\necho hi, sleeping for $DELAY\r\nsleep $DELAY\r\necho done sleeping, bye!\r\n```\r\nThis function takes a number as input and sleeps for that duration before responding.\r\nLet's deploy it:\r\n```bash\r\n> docker deploy -c func.yml issue\r\n> docker service logs -f issue_test\r\n```\r\nAnd curl the service to run for different lengths:\r\n```bash\r\n> time curl localhost:8089/function/issue_test -XPOST -d6\r\nhi, sleeping for 6\r\ndone sleeping, bye!\r\n\r\nreal    0m6.013s\r\nuser    0m0.004s\r\nsys     0m0.001s\r\n\r\n> time curl localhost:8089/function/issue_test -XPOST -d7\r\nhi, sleeping for 7\r\ndone sleeping, bye!\r\n\r\nreal    0m7.013s\r\nuser    0m0.000s\r\nsys     0m0.006s\r\n\r\n> time curl localhost:8089/function/issue_test -XPOST -d8\r\ncurl: (52) Empty reply from server\r\n\r\nreal    0m8.013s\r\nuser    0m0.000s\r\nsys     0m0.005s\r\n\r\n> time curl localhost:8089/function/issue_test -XPOST -d9\r\ncurl: (52) Empty reply from server\r\n\r\nreal    0m9.013s\r\nuser    0m0.002s\r\nsys     0m0.003s\r\n\r\n```\r\nThe test cases for 8 and 9 seconds still return a response, but the response is empty.\r\n\r\n## Context\r\n@cgpuglie and I are trying to run a web-scraper with nightmare-js as a faas function.\r\nThe runtime is variable, but typically longer than 8 seconds.\r\n\r\n## Your Environment\r\n```\r\n> docker version\r\nClient:\r\n Version:      17.05.0-ce\r\n API version:  1.29\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:10:29 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.05.0-ce\r\n API version:  1.29 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:10:29 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: true\r\n```"", 'comments': ['It\'s awesome to see you guys testing FaaS - the limit here is in the gateway rather than the watchdog which I think you\'ve set up correctly. I think I\'d consider anything over a few seconds to be asynchronous and that\'s something I want to tackle through the roadmap.\r\n\r\nAn asynchronous item would probably return instantly with an ID and allow polling or call back to a URL on completion.\r\n\r\nFor the time being you could get past the 8 second limit by hacking `server.go` in the gateway - and I think that\'s probably something that should be configurable. \r\n\r\nHere\'s the line you\'d want to edit -\r\n\r\nhttps://github.com/alexellis/faas/blob/master/gateway/server.go#L65\r\n\r\nIf you run the ./build.sh file you\'ll get an image you can swap into your docker-compose file for the gateway called ""functions/gateway:latest-dev""\r\n\r\nDoes that help?', 'Taking a look right now -- thanks alex!', ""Built and tagged it in our private registry.\r\nChanging those values works 👍 \r\n\r\nI'll look at adding some config options for the gateway.\r\nA pathPrefix for all of the routes would be helpful in addition to these timeouts."", 'That\'s awesome! Thanks for the quick reply, Alex!\n\nOn Jun 29, 2017 4:48 PM, ""leigh schrandt"" <notifications@github.com> wrote:\n\n> Built and tagged it in our private registry.\n> Changing those values works 👍\n>\n> I\'ll look at adding some config options for the gateway.\n> A pathPrefix for all of the routes would be helpful in addition to these\n> timeouts.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/alexellis/faas/issues/94#issuecomment-312137401>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AKO3N0k7Pe0WHsaq_SMU4vG6oYjWcpqfks5sJDedgaJpZM4OJ4BC>\n> .\n>\n', 'Great. Would be interesting to see a minimal example of the scraping contributed online somewhere or as a blog.\r\n\r\nBtw you might find the faas-cli useful too - https://blog.alexellis.io/build-and-deploy-with-faas/\r\n\r\nWhat are you thinking re: a path prefix?', 'I still have a draft blog-post for some linuxkit usage on windows I never finished :/\r\n\r\nFor the path Prefix stuff, I was thinking setting `PathPrefix=/faas` would result in\r\n```\r\n/faas/system/alert\r\n/faas/system/functions\r\n/faas/function/...\r\n/faas/ui/\r\n/faas/assets/\r\n```\r\n\r\nNot sure what the best way to do this is in `gorilla/mux`', ""I'm guessing that for the gateway config, we'd do something similar to what's implemented in `watchdog` with `osEnv` and `readConfig` ?"", ""I'm not sure about the Prometheus `/metrics` endpoint -- can Prometheus be configured to scrape nested routes?\r\n\r\nIf you're running Prometheus in the network, it's easier to just leave it unchanged, but from outside, it could be problematic to route to."", ""For now let's look at the timeout config in this issue. Feel free to open separate threads. "", ""I'm confused as to why there are two levels of timeout.\r\nDoes the gateway re-invoke on bad exit codes within the gateway timeout?\r\n\r\nIf not, I'd suggest we set the request's timeout values to match the function's service spec if present.\r\nWhat do you think?"", '@stealthybox do you want to open another issue to talk about your idea re- prefixes?', ""Yep!\r\nI'll do that tonight"", '@stealthybox @cgpuglie closing this re: fix in #95 #96 - thanks for contributing and hope to see you in the Slack channel.\r\n\r\nDid you want to raise another issue to discuss a path prefix?']}"
97,watchdog timeouts are multiplied by time.second^2,https://github.com/openfaas/faas/issues/97,"{'description': ""## Expected Behaviour\r\nWatchdog should timeout after 5 seconds (default) or the configured amount of seconds.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nResulting timeout values are very large.\r\nIt's not possible to configure small values.\r\nThis also affects the default.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nRemove the extra arithmetic in `main.go`.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nThis doesn't look intentional.\r\nI'm not sure what the repercussions are.\r\n\r\nI discovered this when copying the timeout configurations over to the Gateway httpServer."", 'comments': ['Fixed in #98 thanks for raising the issue. ']}"
103,proof of concept: reliable asynchronous processing,https://github.com/openfaas/faas/issues/103,"{'description': 'Asynchronous processing should be possible for long-running functions.\r\n\r\nMust have:\r\n\r\n* Work can be accepted through a new route or a Header\r\n\r\n```\r\n/async/function/<function_name>\r\n```\r\n\r\nOr via Header:\r\n```\r\nX-etc: async\r\n```\r\n\r\n* Work is accepted immediately and a 202 Accepted is returned. This should be handed off to a queue.\r\n\r\n* One or more (scaleable) asynchronous workers read from a queue and call functions\r\n * Should dequeue item atomically\r\n * Upon failure another worker should pick up the item\r\n * For initial version - HTTP should be used by worker to call function just like the gateway does. Timeout will depend on the configuration of the function.\r\n\r\n* Prometheus metrics to be logged for work queued/processed/outstanding\r\n\r\nCould have:\r\n\r\n* Watchdog configuration to state whether async/sync is supported\r\n* Validation in gateway for invocation method\r\n* Retry logic on failure\r\n\r\nNice to have:\r\n\r\n* Additional logging beyond `docker service logs`\r\n* Callback URL could be specified via header or query-string - this could be called by the framework upon completion\r\n\r\nNotes:\r\n\r\nHave looked into Kafka - design looks overly complex for task at hand.\r\nNATS queuing is not resilient - but NATS Streaming may be suitable. ', 'comments': ['If you need a beta tester for asynchronous processing, I am in !', ""Thanks @Tofull - I've started a quick proof of concept with NATs streaming. \r\n\r\nHave you started using FaaS or creating functions already? Do you have async workloads ready for testing?\r\n\r\n"", 'Amazing ! You roks ! :)\r\n\r\nI used FaaS to deploy some functions that my machine learning experts made with magic.\r\n\r\nFaaS works great for prediction service as it is a synchronous task.\r\n\r\nAs some processing functions need time (training our models), we would use async processing and we already have a workflow ready for testing.', 'That sounds like a great use-case. Is there anything you can share on a blog or on Twitter?', ""When our developments will gain in stability, we will be able to communicate and mention FaaS as the solution we decided to use in a tweet or some presentations we will make ('cause we are working with French industries in aerospace :artificial_satellite: & :earth_americas: earth observation fields).\r\nFaaS with async should completely meet our needs, here at the Institute of Technology Saint Exupéry. :smiley:"", 'It would probably help to map out the use cases for the async processing first as there are a couple different ones I can think of that usually require different guarantees and metrics. anyone know what the users of this library would favor in use cases for this as this would ease up choosing the right queueing options here too. kafka for example might seem overly complex (and it is complex) but it has its uses, but usually I wouldnt choose that for simple response queues like here generally. nats is nice general purpose, but i fear doesnt encompass all options. there is also the possibility of a mixed solution making it simple pub/sub with separate log database (usually you need recent stuff, which is in mem, but you dont lose old stuff this way and support stuff like ""oh my car is offline for 15min because of shit internet, but can still get its response""), which gives quite a lot of flexibility and isnt that hard to implement.\r\nproblem with using queuing systems like nats is that you end up having a ton of a ton of queues piling up. While this is completely acceptable in your infrastructure for workers and services as its quite limited, when it comes to response queues, thats not so feasable really. mqtt suffers from similar problems in the end when load gets high. seen a couple of implementations that offload mqtt queues to databases though. ', 'As you have mentioned - the various queue implementations available have their own pros/cons. Ideally it should be easy to swap between different ""queue"" providers or implementations.\r\n\r\nThis initial branch / work is based around a NATs streaming queue which does have persistence and resilience.\r\n\r\nYou can see the progress here:\r\n\r\nhttps://github.com/alexellis/faas/tree/async_nats\r\n\r\nGuide to testing the branch:\r\n\r\nhttps://gist.github.com/alexellis/62dad83b11890962ba49042afe258bb1\r\n', 'ah i must have missed that idea - that sounds like the best possible outcome, yes :)', 'Hey @Tofull do you have a draft or published blog yet?', 'Please see changes in #131 ', ""Work merged into master and released in 0.6.3 https://github.com/alexellis/faas/releases/tag/0.6.2\r\n\r\nIf anyone wants to start on a Kafka implementation that would be great - otherwise let's spend time using the async code and doing edge-case testing.""]}"
110,unable to successfully start the web ui,https://github.com/openfaas/faas/issues/110,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nI have attempted to manually start and run the stack without using the playground with a few issues when accessing the web ui.\r\n\r\n## Steps to Reproduce (for bugs)\r\n\r\nI built and started the stack with the shell scripts, then I attempted to load `http://localhost:8080` and got forever-loading empty request. \r\n\r\n1. `./build.sh`\r\n2. `./deploy_stack.sh`\r\n```\r\nDeploying stack\r\nCreating network func_functions\r\nCreating service func_gateway\r\nCreating service func_alertmanager\r\nCreating service func_nodeinfo\r\nCreating service func_markdown\r\nCreating service func_decodebase64\r\nCreating service func_wordcount\r\nCreating service func_hubstats\r\nCreating service func_prometheus\r\nCreating service func_echoit\r\nCreating service func_base64\r\nCreating service func_webhookstash\r\n```\r\n3. \r\n -  `curl localhost:8080/function/func_markdown/ -d ""## Testing""`\r\n - `curl: (56) Recv failure: Connection reset by peer`\r\n\r\nI inspected the docker network and got the ip for the gateway container, and accessed it via `http://<containerid>:8080`. I got a white page with just this text: `Select a function.`.\r\n\r\nI also manually ran `docker-compose build` `docker-compose up` `docker-compose down` to see if raw compose was a possible solution. I checked but didn\'t see a particular version of docker that is required.\r\n\r\nAm I doing something entirely wrong, or is there a step for setting up the network that I need to do first?\r\nI read all the md files in the repo, your blog post referencing faas, and some of the linked gists without finding a particular solution. \r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `version 17.06.0-ce, build 02c1d87`\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nDebian Linux 4.9.0-3-amd64', 'comments': ['I got it to work by changing the build version of the gateway to the local image: https://github.com/alexellis/faas/blob/master/docker-compose.yml#L10 `latest-dev`. And changing localhost to 127.0.0.1\r\nStill some form of issue as I needed to change the image.', ""Hi @stevelacy,\r\n\r\nThanks for your message. \r\n\r\nYou may have an ipv4/ipv6 conflict on the name localhost in your hosts file such as:\r\n\r\n```\r\ncat /etc/hosts\r\n127.0.0.1\tlocalhost\r\n::1\t\tlocalhost ip6-localhost ip6-loopback\r\n```\r\n\r\nYou can comment out the 2nd line, or use 127.0.0.1 or the IP address of your LAN/WAN connection instead.\r\n\r\nCurl can also be forced into ipv4 mode with the `-4` flag.\r\n\r\n`docker-compose` is not used for FaaS, but it does have a `docker-compose.yml` file which is used for creating the Docker stack, so `docker-compose up/down/build` are not going to be valid.\r\n\r\nThe tag 0.5.6 for the gateway image is working (I also re-tested it this morning), but you can switch out to a newer (master) version like you did by running ./build.sh and updating the image tag to: `latest-dev`.\r\n\r\nHope this helps. I'll close the issue for now since you have got up and running, but do re-open if you need to. "", 'Thanks']}"
114,keep functions open,https://github.com/openfaas/faas/issues/114,"{'description': 'Is it possible to keep a function running? The initialization of my function takes a long time so I have a delay in every call I make. It would be nice if my function could stay open and read every new line that is coming in via STDIN.', 'comments': ['Hi @gijswobben thanks for testing out FaaS. It would be great if you could fill out the issue template which was provided when you opened the issue.\r\n\r\nPlease let us know some more details\r\n\r\n* Runtime (Node/Python/Go etc)\r\n* Backend - Swarm or Kubernetes\r\n* How long it takes to run your requests\r\n\r\nAlso if you can share code or push it to a private/public repo that would help.\r\n', ""The template didn't seem applicable as this is a question (not an issue).. Everything is working fine, I was just wondering if I could speed things up. The initialization of my script cannot run any faster because it has to load some libraries and models from disk. After that I can use a very fast function to do something. I'd love to cache the libraries and models so my function can execute faster.\r\n\r\nRuntime -> R (or Python) for data science (XGBoost model)\r\nBackend -> Swarm\r\nFunction run time when all libraries are loaded 33ms, initialization time 1.5s"", 'The function watchdog works by forking a process - reading the entire body and then piping that to stdin, anything written to stdout is returned to the caller. So reusing the process as it is, would not possible, however there are some work-arounds that other people are using:\r\n\r\n* Batching - Instead of calling the function 1k times with 1 piece of data each time, call the function with a batch of 1k data items. It may involve a helper bash script\r\n* Use the asynchronous work - This model is perfect for TensorFlow and machine learning - since you can run the requests for much longer - https://gist.github.com/alexellis/62dad83b11890962ba49042afe258bb1\r\n* Implement the watchdog interface - As long as you expose a port on 8080 and act like the watchdog FaaS will still manage your container, track metrics and scale it. You could use flask for this.\r\n* Create a microservice - Create a microservice that is long running and let your function handle the ingestion of data - passing it on to the (XGBoost / R service) and returning the results.\r\n', ""Hi, @gijswobben it's been 16 days since my response so I'll close this issue. Please do re-open if you need to, or join us on Slack to chat about any of the solutions outlined above. "", ""@gijswobben I've had a chance to revisit this item and I think I have a technical approach for helping with this. Did you try any of the outlined solutions? Do you have an example online somewhere?"", 'I\'ve tried the first approach and the second. The last 2 are no option for me, in my opinion they introduce too much overhead code for something that should be a ""function as a service""...\r\n\r\nThe approaches I did try work, but there is still a lot of overhead. I\'m dealing with large quantities of data so even with the batching approach there is a lot of overhead. I don\'t have an example online since I\'m developing this for a customer...\r\n\r\nI\'m curious to hear your solution. I think the only way to go here is to keep the function open and direct all new requests to this function, reading and writing over STDIN and STDOUT line by line. However, this solution would require quite some changes to watchdog.', ""Regarding 1 & 2 - batching data and running async would make a huge dent in the issue. The asynchronous work was merged and is available in 0.6.2. https://github.com/alexellis/faas/releases/tag/0.6.2 \r\n\r\nI have made the changes to the watchdog (not yet available on GitHub) and did some testing - it's blisteringly fast. This is the JVM & Java - https://www.youtube.com/watch?v=gG6z-4a1gpQ\r\n\r\nJoin us on Slack and let's do some testing with the new approach? email alex@openfaas.com"", 'Thanks, I give it a try', ""Performance is okay.. Certainly not what I hoped for but it gets the job done. What you show in you're video is indeed a fast example, however, try to add a 15 second delay to the initialization of your function and run it again. The startup cost (in this case the delay) is so high that it will ruin your performance.\r\n\r\nI think we can close this issue. Thank you very much for the effort and a workable solution!"", 'I think you might be going about it a different way to intended.\r\n\r\nIf you need a 15 second boot-up - then you need it, nobody can change that - but you can put it into the initialiser and not the handler 👍\r\n\r\nMaybe you can explain what you mean?', 'Totally agreed, I cannot avoid the 15 second boot-up. However, it would be nice if I didn\'t have to wait that 15 seconds with every new call. It would be great to have such an ""initialiser"". Run the initialiser once, and than run the handler as many times as needed (for every call). However, looking through the documentation and code, there is no way to do such an initialisation right now, is there?', 'No you could add an explicit initialisation separately. We can adjust the template for that or you could do something simple like write a lock file to understand whether to run the initialization a second time. ']}"
116,api / ui - use prometheus api (not local counter) for stats,https://github.com/openfaas/faas/issues/116,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n\r\nNow that the Gateway can be load-balanced an invocation count should cover the count across all of the gateways.\r\n\r\n## Current Behaviour\r\n\r\nFor Swarm it shows the current gateway instance since we\'re reading the local counter\r\n\r\nFor Kubernetes it shows as empty\r\n\r\n## Possible Solution\r\n\r\nQuery the Prometheus API from the gateway:\r\n\r\nPromQL example:\r\n\r\n```\r\ngateway_function_invocation_total{}\r\n```\r\n\r\nConcerns:\r\n\r\n* creates a circular dependency since the gateway is a scrape target\r\n* scrape interval is around 5-15s meaning we won\'t see the invocation count increase live.\r\n\r\n* this data needs to be overlaid on top of the ""list functions"" response from Swarm or the external gateway - See: `faasHandlers.ListFunctions` in `server.go` for the FaaS gateway\r\n\r\n## Your Environment\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\nBoth', 'comments': [""I'll pick this one up @alexellis "", ""Here's a sample for parsing the Prometheus format from your local gateway.\r\n\r\nhttps://gist.github.com/alexellis/883611bf290cb91f75ffe57fb924debd"", 'Just dumping in some notes.\r\n\r\n### Reproduce problem\r\nYou can reproduce the behaviour that needs fixed as follows (on Docker Swarm):\r\n- Scale the gateway to 3 instances\r\n```\r\ndocker service scale func_gateway=3\r\n```\r\n- Open the gateway dashboard in an incognito and non-incognito tab, and invoke the echoit function a few times in each window, you should see that the counts increment independently as you\'ve got a sticky session with different instances.\r\n\r\n### Prometheus Queries\r\n- Total requests for all functions across all instances\r\n```\r\nsum(gateway_function_invocation_total{})\r\n```\r\n- Total requests for a single function (`func_echoit`) across all instances\r\n```\r\nsum(gateway_function_invocation_total{function_name=""func_echoit""})\r\n```\r\n- Total requests for a function broken into response codes across all instances\r\n```\r\nsum(gateway_function_invocation_total{function_name=""func_echoit"", code=""200""})\r\nsum(gateway_function_invocation_total{function_name=""func_echoit"", code=""500""})\r\n```']}"
123,faas -> openfaas,https://github.com/openfaas/faas/issues/123,"{'description': 'The name of the FaaS project will transition to OpenFaaS. This issue is going to track the progress and list areas needing to change.\r\n\r\nAreas to cover:\r\n\r\n* [x] Repo names may stay the same and move to an organization.\r\n* [x] New website www.openfaas.com - live with HTTPS, but without content.\r\n* [x] additional pages to be added for features etc.\r\n* [x] Utility download script cli.openfaas.com\r\n* [x] Twitter handle -> @open_faas\r\n* [x] GitHub repo -> https://github.com/openfaas\r\n* [x] Import paths for GitHub\r\n* [x] Add logo to README / GitHub pages site.\r\n* [x] Change FaaS Gateway to ""OpenFaaS Gateway"" in UI\r\n\r\nAnything else?', 'comments': ['@alexellis do you need help with the frontend of the site?', ""There might be some opportunities to help with that, or more likely the Angular Material UI built into the API Gateway. I'd like to set the [request/response body to use a mono-spaced font](https://github.com/alexellis/faas/issues/135)."", '@glyif there is part of the gateway ui impacted by the rebrand. Theres reference to FaaS In the top left corner that should become OpenFaaS', 'Derek add label: priority/high', 'All repos moved to https://github.com/openfaas', ""@alexellis can you change the description to a checklist, nicer way of letting people see what is/isn't done"", 'Welcome to the OpenFaaS community 👍 💯 ']}"
126,house-keeping: bump to golang 1.8.x across all repos,https://github.com/openfaas/faas/issues/126,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nBump to Golang 1.8.x across all repos\r\n\r\nThis includes faas, faas-cli and faas-netes.\r\n\r\nAll existing tests should pass including functional test.\r\n\r\nThis will also need an ARMHF Golang Dockerfile.', 'comments': ['Help wanted on this - a good beginner item since it involves search/replace and packaging. ', ""[armhf golang images available here](https://hub.docker.com/r/arm32v7/golang/tags/)\r\n\r\nI'll start having a look at this one."", '@alexellis im down to take this issue ang upgrade to 1.8.x', '@glyif it looks like Richard @rgee0 might be working on this one too. Perhaps you guys can split the work up?\r\n\r\n@glyif I could really use help with testing and reviewing https://github.com/alexellis/faas/pull/131', ""oh haha, i thought @rgee0 was talking about the armhf issue. my bad :) I'll check out https://github.com/alexellis/faas/pull/131"", ""I'm working on this. 64bit changes have been made and tested. May have run into an issue with the arm equivalents - need to test properly on a pi""]}"
127,openfaas global meet-up - november,https://github.com/openfaas/faas/issues/127,"{'description': ""OpenFaaS Global Online meetup - October\r\n\r\n![](https://blog.alexellis.io/content/images/2017/08/faas_side.png)\r\n\r\n**Limited spaces - comment below to register interest**\r\n\r\nThis would be an online meet-up via Google Hangouts.\r\n\r\n* There'll be a quick intro and demo\r\n* We'll show off a couple of projects from the community and contributors\r\n* And talk about what's coming next as well as open up to questions.\r\n\r\nAny suggestions for topics? Do you have a demo or function you'd like to show?\r\n\r\n**Update:** Email alex@openfaas.com for your slack invite"", 'comments': ['I am definitely up for this!', 'Definitely', ""@roachmd I'll invite you to Slack too"", ""I'd love to participate!"", ""I'd love to join too.\r\nBy the way, if you'd like to use kubernauts GoToWebinar with up to 500 participants, please let me know.\r\n"", ""I'm new to Open FaaS, but I'm intrigued and I'd be stoked to check out the meetup."", 'I would like to join too', 'I would love to join too\n\nOn Thu, Aug 17, 2017 at 11:17 AM, Søren Mathiasen <notifications@github.com>\nwrote:\n\n> I would like to join too\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/alexellis/faas/issues/127#issuecomment-322974865>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AKZS64lRMgIWLjBKWA1aedPdXQ4Zpq_4ks5sY9PmgaJpZM4O2kuB>\n> .\n>\n\n\n\n-- \nJeeva K S Chelladhurai\n', ""I'm interested! Would be awesome to see/hear/learn more what people have done with OpenFaaS."", ""Yep I'm in, when were you thinking."", 'Sure, Happy to Join and helpout :+1: ', ""I'm interested too!"", ""Awesome! I'm interested."", ""Interested to join in too ...\n\nOn 17 August 2017 at 14:02, Radu Matei <notifications@github.com> wrote:\n\n> Awesome! I'm interested.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/alexellis/faas/issues/127#issuecomment-323051808>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABywLX74KXY0bbpMLjH6_p0iIVeewjXXks5sZCvjgaJpZM4O2kuB>\n> .\n>\n"", ""I'm interested too!"", '+1 :)', ""I'm in!"", '+1', 'In\n\nOn Thu, Aug 17, 2017 at 10:54 PM, Johnny Mkhael <notifications@github.com>\nwrote:\n\n> +1\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/alexellis/faas/issues/127#issuecomment-323191528>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/Adj8YIti6qnuRCJByR5fAVFoab8fMgUYks5sZKiWgaJpZM4O2kuB>\n> .\n>\n', '+1', ""I'd love to be involved and know more about the potential of OpenFaaS.\r\n\r\nThanks"", 'Me too', 'Im in', 'Im down for a online meetup', ""I'd be interested for sure! +1"", '+1, would attend', ""I'm interested too!"", ""Wow - awesome response. \r\n\r\n> I think we're going to need a bigger boat.\r\n\r\nAnyone who wants to join Slack - email alex@openfaas.com\r\n\r\n@arashkaffamanesh could you send instructions for your service too?"", '@alexellis we provide online meetups through GoToWebinar with up to 500 participants and GoToMeeting for virtual classes with 25 participants for our 2 k8s related meetups:\r\nhttps://www.meetup.com/kubernauts/\r\nhttps://www.meetup.com/NextGen-Kubernetes/\r\n\r\nFor GoToWebinar, we can setup a registration page for the OpenFaaS onlime meetups and make you as a co-organizer to perform the online sessions.\r\n\r\n', 'Definitely interested in this Alex.']}"
136,blog + function - node.js,https://github.com/openfaas/faas/issues/136,"{'description': ""I'll be writing a simple Node.js function that takes in a URI and takes a screenshot the page and uploads the file to a s3 bucket.\r\n\r\nAfterwards, I'll write a blog on about the function, how to deploy and run it using OpenFaas, and my thoughts on all the things.\r\n\r\nThe purpose is to for me to familiarize myself with the project and write a bomb blog post."", 'comments': ['For Node.js you can follow the Python guide and replace the word python for node.\r\n\r\nhttps://blog.alexellis.io/first-faas-python-function/', 'Hey @glyif are you still working on this? Do you need anything?', 'Closing.. we have PR #161 now']}"
156,slack channel invites,https://github.com/openfaas/faas/issues/156,"{'description': 'The readme says this is the preferred way to request access to the slack channel so I am opening this issue. Could I get an invite? I am dealing with Docker on a daily basis on production and for fun and have already played with FaaS a bit.', 'comments': [""Hi @ivdelchev - you'd be more than welcome - please send an email over to alex@openfaas.com"", 'Invite sent - thanks for joining!']}"
176,pricing scenarios,https://github.com/openfaas/faas/issues/176,"{'description': ""Given the multitude of potential backend providers, it is desirable to develop a system for comparing operating costs across providers. \r\n\r\n## Expected Behaviour\r\nIdeally there would be cost estimates for network, compute and storage bound functions.\r\nA simple experiment on each provider should be able to provide function costs.\r\nAssuming operating costs could be parametrized, a pricing calculator could be constructed to assist users in selecting the backend provider best suited for their use case.\r\n\r\n## Current Behaviour\r\nCurrently, it is difficult to understand what the operating cost will be due to differences in the infrastructure as a service costs across providers. Since one of the main benefits of cloud functions is their ability to avoid continuous operation costs and capture true utilization costs, it would be excellent if consumers could know the cost of function execution before they purchase the associated service.\r\n\r\n## Possible Solution\r\nDesign a sample service for testing costs for network, compute and storage bound functions.\r\nPerform a test of each service on a given provider and measure the cost.\r\nReport the results, so a model or price calculator can be constructed.\r\nIdeally this could be done without actually costing the tester money, or a given provider could assist by providing compensation for the test.\r\n\r\n## Context\r\nI'm designing a secure multiparty computation product where consumers of the service purchase executions of a function at the operating cost plus a markup chosen by the service provider. I want consumers to be confident that the markup is not egregious, and have confidence in the transparency of the pricing of the service.\r\n\r\n## Your Environment\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux\r\n"", 'comments': ['Derek add label: revisit', 'This would require a significant amount of consulting and analysis - and I suspect it would be a moving target also. Also worth nothing that the spot instance market with AWS, Packet and others could easily provide a much cheaper back-end for some of the stack - particularly functions. ', 'Derek add label: priority/low', ""While this would likely take a pile of effort, as @alexellis mentioned, it's something that would be pretty cool IMO.\r\n\r\nI wonder if this information could be 'derived' through some base pricing, and some more detailed metrics collected around the function execution.\r\n\r\nFor example, it might not be possible/practical to say the exact cost to run on EC2/similar given spot pricing/changes/etc. But it might be a nice feature (or at the very least a research project/blog post) to compare what running a function on OpenFaaS is like in comparison to AWS lambda/similar providers.\r\n\r\nI know of at least one other project (https://github.com/apex/apex) that has done similar, though it was AWS Lambda specific. The following isn't a great example since i've barely run the function.. but..\r\n\r\n```\r\n⇒  apex metrics\r\n  gobuster\r\n    total cost: $0.00\r\n    invocations: 3 ($0.00)\r\n    duration: 9.466s ($0.00)\r\n    throttles: 0\r\n    errors: 0\r\n    memory: 128\r\n```\r\n\r\nRelated:\r\n\r\n* http://apex.run/#viewing-metrics\r\n* https://github.com/apex/apex/tree/master/metrics\r\n* https://github.com/apex/apex/blob/master/cost/cost.go\r\n\r\n`faas-cli` currently has a `list` command, that displays the invocation count\r\n\r\n```\r\n⇒  faas-cli list\r\nFunction                      \tInvocations    \tReplicas\r\ngobuster                      \t1              \t1\r\n```\r\n"", 'Closing and marking #revisit for follow-up at a later date.']}"
179,"nothing wrong when deploy, but cannot access localhost:8080",https://github.com/openfaas/faas/issues/179,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n```\r\ngit clone https://github.com/alexellis/faas\r\ncd fass\r\n./deploy_stash.sh\r\n```\r\nnothing was wroing after above, but localhost:8080 could not be accessiable.\r\n```\r\nThis site can’t be reached\r\n\r\nlocalhost refused to connect.\r\nDid you mean http://localhost-8080.com/?\r\nSearch Google for localhost 8080\r\nERR_CONNECTION_REFUSED\r\n```\r\n\r\n## Possible Solution\r\ndocument improvement, I am totally new to this project, after reading the README.md, I'd like to try a simple demo. \r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n```\r\ngit clone https://github.com/alexellis/faas\r\ncd fass\r\n./deploy_stash.sh\r\n```\r\nthen open http://localhost:8080\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\nDocker version 17.06.2-ce, build cec0b72\r\n\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nYes, I am using docker swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux li1705-191 4.9.15-x86_64-linode81 #1 SMP Fri Mar 17 09:47:36 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n"", 'comments': [""It's ./deploy_stack.sh - please provide some debug info. Also it's not localhost.com? Try http://127.0.0.1:8080\r\n\r\nhttps://github.com/alexellis/faas/blob/master/guide/deployment_swarm.md"", ""Are you doing this on your laptop or the cloud? If it's on a remote host you will absolutely need to use the public IP of that host to access OpenFaaS"", 'In addition to @alexellis suggestions, try another browser: I had problems with localhost address with chrome. try using another browser if you are using chrome.\r\n\r\nTry using your machine name too.\r\ncheck your `/etc/hosts` if you have \r\n\r\n```\r\n127.0.0.1       localhost\r\n127.0.0.1       localhost.\r\n```', 'Otherwise performing\n    docker stack ps func\n\nmight give you information about tasks which are failing in your ""func""\nstack.\n\n\nOn 10 September 2017 at 21:43, Johnny Mkhael <notifications@github.com>\nwrote:\n\n> In addition to @alexellis <https://github.com/alexellis> suggestions, try\n> another browser: I had problems with localhost address with chrome. try\n> using another browser if you are using chrome.\n>\n> Try using your machine name too.\n> check your /etc/hosts if you have\n>\n> 127.0.0.1       localhost\n> 127.0.0.1       localhost.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/alexellis/faas/issues/179#issuecomment-328366599>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABywLX8ae8amshJ-FVTTSzQcpWmgN5-Wks5shDvugaJpZM4PSPe7>\n> .\n>\n', ""@metrue - we're going to close the issue, but please feel free to keep commenting. "", ""@alexellis @jmkhael @mjbright \r\n\r\nsorry for my late response, internet not work when I was on vacation few days ago.\r\n\r\nthanks for you guys' explanation,  I will try it again, will update if it still not work."", 'Ok thanks for letting us know']}"
191,amend contributing.md to mandate use of fixes #issue,https://github.com/openfaas/faas/issues/191,"{'description': ""Use of GitHub [keyword references](https://help.github.com/articles/closing-issues-using-keywords/) in PR descriptions and/or commit messages\r\n\r\n## Expected Behaviour\r\nGitHub has built in functionality which helps project maintainers manage issues.  Encouraging contributors to reference issues in their PR descriptions or or commit messages means that github will be able to automatically close the associated issues once the PR is merged.  This will remove a manual task from the maintainers and enable project focus to remain on current issues \r\n\r\n## Current Behaviour\r\nPRs are merged & some issues remain open until they are manually reviewed and closed.  Contributors potentially focus consideration and effort on issues already addressed.\r\n\r\n## Possible Solution\r\nGitHub has built in functionality which helps project maintainers manage issues.  Encouraging contributors to reference issues in their PR descriptions or or commit messages means that github will be able to automatically close the associated issues once the PR is merged.  This will remove a manual task from the maintainers and enable project focus to remain on current issues \r\n\r\n## Context\r\nReviewing issues already addressed.  Badgering maintainers to close issues I've addressed or know to be addressed.\r\n\r\n## Your Environment\r\nN/A\r\n\r\nN.B This issue will also act as a test of the built in functionality.\r\n"", 'comments': ['Can Derek help with this?', ""I thought he might like to check for 'Fixes #' (for example) and flag it if the PR doesn't apparently address an issue.""]}"
198,docker-compose.yml uses depends_on (which is ignored by stack deploy),https://github.com/openfaas/faas/issues/198,"{'description': ""In the version _47d0fdcf_ of the file [faas/docker-compose.yml](https://github.com/alexellis/faas/blob/47d0fdcf6cc23612f246094c193fd8a1de7fd94d/docker-compose.yml) in several services `depends_on` is used. \r\nIn [deploy_stack.sh](https://github.com/alexellis/faas/blob/47d0fdcf6cc23612f246094c193fd8a1de7fd94d/deploy_stack.sh) this file used with `docker stack deploy`.  \r\nUnfortunately the compose file reference points out that `depends_on` is ignored then deploying a stack using a compose file version 3.x, see https://docs.docker.com/compose/compose-file/#depends_on\r\n\r\nI've not tested it but possibly this can result in some problems setting up faas on Swarm."", 'comments': [""So we've not run into those issues yet, but the services have a restart policy which should allow them to be rescheduled. 3.x is needed for Swarm secrets - do you have any other suggestions?"", 'Maybe using something like [vishnubob/wait-for-it](https://github.com/vishnubob/wait-for-it) or [jwilder/dockerize](https://github.com/jwilder/dockerize) in the services which are depending from e.g. _gateway_, simply waiting for a reachable port. ', 'p.s.: another alternative would be to implement the [circuit breaker pattern](https://martinfowler.com/bliki/CircuitBreaker.html) in the containers which use e.g. gateway. ', '@johnmccabe @rgee0 - should we drop the depends_on then?', ""@alexellis yep I think so, they're ignored as @hcguersoy points out. Docker are pushing stack users towards using healthchecks and fault tolerant service implementations - ie you shouldn't blow up when a service you depend on isn't there, you should just wait for it to appear."", 'Derek add label: proposal', ""@hcguersoy if you'd like to submit a PR with those removed for docker-compose.* we'll merge it 👍 "", ""@alexellis If I find some time I'll create a PR involving some changes making the components somewhat resilient and removing the `depends_on` directives in the compose file. "", 'Thank you 👍 The NATS + gateway for instance already has retry logic in place in docker-compose.extended.yml\r\n\r\nWe could simulate errors in the other services', 'Hacktoberfest - remove all `depends_on` metadata in compose files.', ""For reference - https://github.com/moby/moby/issues/30404#issuecomment-274825244\r\n\r\n> depends_on is a no-op when used with docker stack deploy. Swarm mode services are restarted when they fail, so there's no reason to delay their startup. Even if they fail a few times, they will eventually recover."", 'We have a PR for this now', 'Yeah I know, have commented on it, added this here to give more background to the reason its been deprecated.']}"
236,hacktoberfest,https://github.com/openfaas/faas/issues/236,"{'description': ""We've created and marked some of the issues as #hacktoberfest across all the repos in the organisation.\r\n\r\nIf contributors have ideas please add them in this thread for consideration as #hacktoberfest items. Ideas include:\r\n\r\n* UI tweaks\r\n* PoCs - i.e. helping the faas-ecs implementation move on\r\n* Blogging / guides\r\n* CLI enhancements\r\n\r\nand whatever else you have in mind. \r\n\r\nOpen issues:\r\n\r\n* https://github.com/openfaas/faas/issues/\r\n* https://github.com/openfaas/faas-cli/issues/\r\n* https://github.com/openfaas/faas-netes/issues/"", 'comments': ['Function invocation scheduler.\r\nUI enhancements to configure such a scheduler.', '@rgee0 i had a preliminary function scheduler working with redis if you wanted to check it out https://github.com/austinfrey/skej', ""Multiarch support, so that OpenFAAS runs everywhere Docker runs. Hopefully some IBM'ers could be called into service to get it running on Power and s390, and I'm happy to help with the armhf and arm64 side of things. \r\n\r\nThe main blocker for this one is https://github.com/gliderlabs/docker-alpine/issues/304 which is being addressed by https://github.com/gliderlabs/docker-alpine/pull/337 which is native multi-architecture Alpine support.\r\n\r\nWould like to get @estesp and @tianon involved to speed this along. "", 'In terms of a scheduler - if we do make this, it should be a Golang service which is deployed alongside the gateway. We need to dig into why `cron` is discouraged in containers etc. ', ""I don't have access to IBM Power or s390 hardware, but armhf has support (with manual builds) and ARM64 is partially ported. I'd like to make the armhf builds automated which may involve paying for a Scaleway instance. "", '@alexellis https://github.com/dshearer/jobber might do the cronjob alike thing.\r\n', 'Thanks or the suggestion @scher200 ', '@alexellis I am a go beginner, but I am willing to try.\r\n', 'Derek close', 'Thank you for the admin Richard. Any take aways @rgee0?']}"
239,backlog: user-configureable memory/ram limits per function,https://github.com/openfaas/faas/issues/239,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nWith some back-ends a hard-coded memory limit is needed - we should be able to set this at deployment time by passing additional parameters.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nLeave unbounded or set a hard-limit\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nFor DC/OS in particular - memory limits need to be set - so we'd pass additional data in the Create/Deploy endpoint.\r\n\r\nIndividual providers can opt in or ignore the metadata. \r\n\r\n## Scope\r\n\r\n* [ ] Kubernetes\r\n* [ ] Docker Swarm\r\n"", 'comments': ['possibly related to https://github.com/openfaas/faas-cli/issues/143', ""I'll start looking into this.\r\nMy suggestion would be to have a structure like this:\r\n```\r\nresources:\r\n    limits:\r\n        cpus: '0.001'\r\n        memory: 50M\r\n    reservations:\r\n        cpus: '0.0001'\r\n        memory: 20M\r\n```\r\nthat will be propagated from the faas-cli, read from the `myfunctions.yml` or from a commandline arguments: `--limit-cpu`, `--limit-memory`, `--reserve-cpu`, `--reserve-memory`.\r\nThen we can have implementations in the gateway for different backends.\r\n\r\nIf no one objects on this, I'll start working on it..."", 'Yes!! I really want this feature. Can you advise us how to achieve this in faas-cli or faas-netes?', 'Currently I want to hard-code the limitation for memory. But I have no useful clue to set it. Currently I found deploy handler may is the   correct place to set it. But what variable a response for the resource limited?', '@nenadilic84 are these both compatible with the notions of reservations and limits in Docker Swarm and Kubernetes? If so then please go ahead and start with the YAML only (not the CLI) so we can get to done and start testing.\r\n\r\nCC/ @realbot would this work for you too?', '@alexellis @nenadilic84 Yes!', 'Would you like to collaborate with @nenadilic84 on Slack since you are both there and interested in seeing this happen?', ""@nenadilic84 let's talk about that on slack""]}"
240,stop openfaas,https://github.com/openfaas/faas/issues/240,"{'description': 'How to kill all processes?', 'comments': [""I stop it through kitematics' stop container"", 'Derek add label: question', ""@theobouwman thanks for using OpenFaaS.\r\n\r\nPlease start here and if you have further questions, reply here. https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md\r\n\r\nI'll close the issue since we've answered the question. ""]}"
245,multi-platform: use tempdir() from golang instead of /tmp,https://github.com/openfaas/faas/issues/245,"{'description': ""This is a change for the watchdog.\r\n\r\nWe write a lock-file to `/tmp/` and have to disable it for Windows (via `suppress_lock`) since it is an invalid path. If we use Golang's tempdir() method in `os` then we should never need to use the `suppress_lock` configuration.\r\n"", 'comments': ['Would a contributor need access to a windows machine in order to test the changes? ', 'I.e. An azure VM or Vagrant box would do fine too. ', 'Change would go here:\r\n\r\nhttps://github.com/openfaas/faas/blob/master/watchdog/main.go#L258\r\n\r\nTempDir function:\r\n\r\nhttps://godoc.org/os#TempDir\r\n\r\nSuggestion by @jstarks\r\n', '@alexellis I believe this issue can be closed Since PR #246 was merged.', 'It is merged, but un-released as of yet @rgee0 has a point about testing for Linux containers.', 'MacOS:\r\n\r\n```\r\nfprocess=cat ./watchdog \r\n2017/10/01 22:30:15 Writing lock-file to: /var/folders/2f/24z_m1fj6ns4tq6pxrnb7k140000gp/T/.lock\r\n```\r\n\r\nLinux container with (Alpine):\r\n\r\n```\r\n# fprocess=cat ./watchdog \r\n2017/10/01 21:31:13 Writing lock-file to: /tmp/.lock\r\n```\r\n']}"
247,functions/gateway:armhf-0.6.5 exits/fails on pizero,https://github.com/openfaas/faas/issues/247,"{'description': '## Expected Behaviour\r\nGateway UI on ARM should be consistent with that of X86-64.\r\n\r\n## Current Behaviour\r\nThe UI is dated on ARM such that the OpenFaaS branding is not yet reflected.\r\n`docker-compose.armhf.yml` needs amending to pull in a later gateway image.  However, upon trying this `functions/gateway:armhf-0.6.5` was found to be failing on ARMv6 with the following error:\r\n```\r\nstandard_init_linux.go:178: exec user process caused ""exec format error""\r\n```\r\nFurther investigations - with attempts to build the gateway locally - found that `Dockerfile.armhf` is also missing the queue components which conflicts with the `vendor` info and causes the build to fail.\r\n\r\n## Possible Solution\r\nChange gateway/Dockerfile.armhf\r\nChange gateway/build.armhf.sh\r\nBuild new gateway image and push to `functions/gateway:armhf-n.n.n`\r\nAmend `docker-compose.armhf.yml` to reflect new gateway image\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Run ./deploy_stack.armhf.sh\r\n2. Check the interface to find older look and feel\r\n3. Tear the stack down\r\n4. Change the gateway image in `docker-compose.armhf.yml` to `functions/gateway:armhf-0.6.5`\r\n5. Run ./deploy_stack.armhf.sh\r\n6. Try to access the gateway, check `docker service ls` for replica count, check `docker ps -a` to see exiting/failing gateway containers\r\n\r\n## Context\r\n\r\n\r\n## Your Environment\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```\r\nClient:\r\n Version:      17.05.0-ce\r\n API version:  1.29\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:30:54 2017\r\n OS/Arch:      linux/arm\r\n\r\nServer:\r\n Version:      17.05.0-ce\r\n API version:  1.29 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   89658be\r\n Built:        Thu May  4 22:30:54 2017\r\n OS/Arch:      linux/arm\r\n Experimental: false\r\n```\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nSwarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux (Raspbian Jessie)\r\n', 'comments': ['Derek add label: bug', 'I think this still works on RPi2/3 but is only built on manual best-effort basis. We may have to deprecate Pi Zero to enable CI to keep in sync with main releases. \r\n\r\nWere you able to rebuild from scratch? Did it all work as expected?', 'Yes, I got it going, seems OK - certainly looks nicer.']}"
251,hacktoberfast: make read_/write_debug false in watchdog ,https://github.com/openfaas/faas/issues/251,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nFunctions should not write their input/output (request/response values) to the console by default.\r\n\r\nIf this change is put in place, then we should at least print something to show a request was handled, but on a single line and not N lines. Imagine if your function returned 5k lines of text.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nThe watchdog has `read_` and `write_debug` on by default and this means output is printed to the console - for some functions that causes a small latency penalty. With a larger response body that will incur a larger penalty - i.e. returning 10k lines of JSON would return 10k lines of text in the logs.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nSee also: [Golang basics - writing unit tests](https://blog.alexellis.io/golang-writing-unit-tests/)\r\n\r\nThe changes will concentrate around the read_config tests:\r\n\r\n* Update watchdog Golang unit tests to generate failing tests\r\n* Add breaking tests if necessary\r\n* Change underlying behaviour in Golang code and see tests pass\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n\r\nDeploy the sample stack.\r\n\r\n```\r\necho 'each\r\n> line\r\n> is\r\n> another\r\n> line\r\n> in\r\n> the\r\n> logs' | faas-cli invoke --name func_markdown\r\n```\r\n\r\nHere is an example:\r\n\r\n```\r\n$ docker service logs func_markdown\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | <p>test</p>\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | \r\nfunc_markdown.1.k7mhyqfykgpu@moby    | <p>each\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | line\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | is\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | another\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | line\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | in\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | the\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | logs</p>\r\nfunc_markdown.1.k7mhyqfykgpu@moby    | \r\n```\r\n\r\nFeel free to ask questions in the thread.\r\n"", 'comments': [""I'd like to try my hand at this one. Sounds easy enough to reproduce and just enough to get my feet wet in the code base to get me up to speed for future contributions.\r\n\r\nTo be clear, the default behavior will be changed from printing all lines, to a single line in the log. The `read_` and `write_debug` will retain the option to be turned on."", ""Yes that's right. The single line would maybe say how many bytes were read or written if that's easy to do. ""]}"
262,security - external function delegation,https://github.com/openfaas/faas/issues/262,"{'description': '## Expected Behaviour\r\nThe watchdog should be able to delegate responsibility to external functions for various security related features such as:\r\n1. Obtaining TLS certificates\r\n2. Obtaining Secrets\r\n3. Checking Authorisation\r\n\r\n## Current Behaviour\r\nThis is currently not implemented behaviour\r\n\r\n## Possible Solution\r\nDefining an interface for the three external functions would allow the watchdog to delegate security related functionality to a downstream function.  This would allow various backends to be implemented without the need for detailed knowledge of the backend such as Vault or AWS Cognito, AWS KMS, etc.\r\n\r\nStartup configuration would be provided to a function which lets its watchdog know which function call it would need to execute in order to perform the action.  The security functions themselves would be grouped into two different kinds:\r\n1. Startup functions (called once)\r\n2. Per request (called with every request)\r\n\r\n![extensions](https://user-images.githubusercontent.com/773533/31306540-35e55eca-ab4a-11e7-98aa-a884c37486a0.png)\r\n\r\n### 1. Startup Flow\r\n\r\nWhen the watchdog starts if there is a TLS and / or Secrets function registered it would call that function to request and configure a TLS certificate or to request secrets.  The implementation of the backend function would only need to satisfy a standard interface allowing extensibility for a wide range of platforms.\r\n\r\n![1_startup_flow](https://user-images.githubusercontent.com/773533/31306542-43d96134-ab4a-11e7-9bdf-c8487c32df7f.png)\r\n\r\n### 2. Per Request Authz\r\nIf Authz is configured then the payload passed to the watchdog would be handed of to a Authz function for validation.  The Author function would return a list of claims which could be then passed to the handler.  Delegating only Authz to the function would allow the Authorization part to be handled external to the request.  The Authorization flow would authenticate against the chosen backend and create a secure validatable token (something like JWT) which could then be passed with each request to a function.\r\n\r\nThe externally registered function would be responsible for validating the token, in the instance of a JWT this would be checking the signature is valid by using the public key.  It would return a list of claims which corresponded to a OpenFaaS interface which could then be passed to the function call.  If the token is not valid the watchdog would return a NOT AUTHORIZED message and would not call the handler.\r\n\r\nIt would still be up to the individual function to check the passed claims have the correct entries to perform the requested action however it can trust the claims it has been passed as they would have been validated by the Watchdog.\r\n\r\n![2_request_flow](https://user-images.githubusercontent.com/773533/31306573-e47a07e2-ab4a-11e7-9682-836c2899e0e5.png)\r\n\r\n## Context\r\nExternal security is an important part of a system however security beyond the firewall is equally important.  If an attacker breaches the firewall they could call functions with any permissions.  In addition to this network traffic beyond the firewall should be secured with TLS (preferably MTLS) to reduce the attack vector.  The concepts of Zero Trust are fast becoming a standard with modern systems and OpenFaaS should attempt to follow this.\r\n\r\n## Your Environment\r\nThe above proposal would work in any environment as it is an extension of the watchdog not the provider.  It also allows users to leverage existing security processes and infrastructure.', 'comments': [""Hi Nick, thanks for your proposal. This looks like a significant change that touches every service. We'll look into this in detail and get some feedback."", 'Yes it is significant, however the external functions could be disabled by default giving backwards compatibility.  Before even thinking about this there would probably pre work needed such as the ability to pass parameters to functions for startup such as those outlined in the Paramus to specify memory and cpu allocation.', 'This is the issue I was relating to in the previous comment. https://github.com/openfaas/faas/issues/239', 'Derek add label: proposal', 'Update - we have secure secret support in place/under-way through Swarm and Kubernetes secrets. Nic also wants to revisit his proposal.', '@nicholasjackson there is now support for signing functions with HMAC (for reference: [docs](https://docs.openfaas.com/reference/authentication/#for-functions) / [workshop](https://github.com/openfaas/workshop/blob/master/lab11.md)).\r\nWe also have sealed secrets.\r\n\r\nDo you have any input on your proposal? Is it now outdated or may be we should revisit it?', 'Derek close: inactivity']}"
267,testing for demo,https://github.com/openfaas/faas/issues/267,"{'description': '', 'comments': ['Derek add label: invalid', 'Derek assign issue to: johnmccabe', 'Derek assign to: johnmccabe', 'Derek assign: johnmccabe', 'Derek add label: demo', 'Derek add label: demo', 'Derek add label: conor', 'Derek remove label: conor', 'Derek set title: testing for demo', 'Derek reopen', 'Derek close', '@rgee0 looks good.']}"
268,put /system/functions endpoint returns 404,https://github.com/openfaas/faas/issues/268,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nWhen trying to re-deploy a function using the `HTTP PUT` method the server returns a 404 like here: \r\n\r\n![image](https://user-images.githubusercontent.com/1567498/31321145-62c3aaea-ac81-11e7-9b45-12502a1841c7.png)\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n![image](https://user-images.githubusercontent.com/1567498/31321149-74f606ae-ac81-11e7-9510-203ed5b4f8a6.png)\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\nSwarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nMacOS\r\n', 'comments': ['@schickling can you retry your curls adding the scheme to the urls:\r\n```\r\ncurl -X http://localhost:8080/system/functions ...\r\n```\r\n*edit* - ignore that, red herring', 'Derek add label: question', 'Is it just the update that fails, can you hit any other endpoint successfully?\r\n\r\nAnd does it also fail with the `faas-cli`', 'Our recommended approach for interacting with OpenFaaS is via the `faas-cli`.\r\n\r\nhttps://blog.alexellis.io/quickstart-openfaas-cli/\r\n\r\n`PUT` for updates is available in the latest release and Docker image (functions/gateway:0.6.6-beta2)', '`faas-cli` works, `HTTP POST` and `HTTP GET` works.', 'Just gave the latest release a test on my ""lab"" - appears to take the update as expected. Can you move to a newer gateway image please @schickling ? Also getting Chromeless working on OpenFaaS is very interesting if you have any ideas about that.\r\n\r\nIf you\'d like to join our community on Slack just email alex@openfaas.com for an invite. ', ""I've installed the CLI via `brew install faas-cli` - any instructions how to upgrade the versions?\r\n\r\nRe Chromeless: Yes, that would definitely be interesting, however, I won't be able to look into that before November. Maybe someone can [open an issue](https://github.com/graphcool/chromeless/issues/new)? "", ""For the gateway edit your docker-compose.yml file and change image: functions/gateway:... to the above then run `./deploy_stack.sh` again. It's late in the UK so will catch up with you in the morning. Unless you want to join Slack where we may have folks in your timezone. "", ""Thanks @alexellis - this works with the `functions/gateway:0.6.6-beta2` image. \r\n\r\nIs there a way to make the `PUT`/`POST` call blocking until the function has been deployed and is ready to be used without running into `Can't reach service:` errors?"", '@schickling not currently. is there a particular situation where you would not want that feedback?', '@schickling closing for now, but if you have further input or want to re-open, please feel free!', 'Derek close', '@schickling Austin is correct - but @ericstoekl is doing some work which will help your scenario by giving data over the RESTful endpoints and CLI as to when a function has a replica ready. Are you on our Slack channel? Maybe we could chat more there.']}"
291,async function call duration is not exported,https://github.com/openfaas/faas/issues/291,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nAsync function calls don't export the execution duration of the call, unlike non-async calls.\r\nThey do, however, track the status code.\r\n\r\n## Expected Behaviour\r\nExecution duration should be exported to prometheus\r\n\r\n## Current Behaviour\r\nAsync function calls do not record execution duration\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Call an async function\r\n2. Observe tracked status code, but not duration\r\n\r\n## Context\r\nWas wondering why there were no execution duration graph points in my Grafana dashboard\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nDocker 17.09.0-ce\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nSwarm\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux"", 'comments': [""I can get started on this - I'm eager to learn something about Prometheus. "", 'Still figuring this out - I think this will involve calling trackTime at some point during handling of request to `""system/async-report""` \r\n\r\nCalling trackTime:\r\nhttps://github.com/openfaas/faas/blob/6dc9ffbfce2abd58a3cdde518fcd1fabd33e196e/gateway/handlers/proxy.go#L198-L205\r\n\r\nAround here:\r\nhttps://github.com/openfaas/faas/blob/6dc9ffbfce2abd58a3cdde518fcd1fabd33e196e/gateway/handlers/asyncreport.go#L15-L24\r\n\r\nCorrect?', 'Derek assign: elliott-beach', 'Sounds about right to me. Do you want to try it out? Technically you can test this work during development by using `curl` or postman to hit the gateway. ', 'Fixed in #338. @developius build a new gateway or wait until the next release for this change.']}"
308,getsockopt: connection refused,https://github.com/openfaas/faas/issues/308,"{'description': 'I\'m trying to run an example project callme on nodejs but armv7\r\n\r\n## Expected Behaviour\r\nRunning on localhost:8080\r\n\r\n## Current Behaviour\r\n""... cannot connect to OpenFaaS on URL: http://localhost:8080""\r\n\r\n## Steps to Reproduce (for bugs)\r\nSame as in topic ""Morning coffee with the OpenFaaS CLI""\r\nfaas-cli deploy -f callme.yml (with or without --gateway ""http://localhost:8080"" )\r\n\r\n## Context\r\n![image](https://user-images.githubusercontent.com/442111/31634104-a18af5ac-b2c2-11e7-8416-20bf6dac94cb.png)', 'comments': ['And the same thing on armv8. Is this a general problem of a network setup?\r\n\r\n![image](https://user-images.githubusercontent.com/442111/31634576-5193edb8-b2c4-11e7-8733-9521fdfae157.png)\r\n\r\n', '::1 suggests it’s trying to dial ipv6.\r\n\r\nEither try 127.0.0.1 instead of localhost or, if possible, comment out the ipv6 entry for localhost in your hosts file.', 'Derek add label: question', 'Hosts are clean now but still same problem\r\n\r\n![image](https://user-images.githubusercontent.com/442111/31636057-600be1ca-b2c9-11e7-8700-2caf432d7a51.png)\r\n', 'Is 8090 as the port a typo?', 'It does not matter the same thing happen on every port number. Or what do you mean?', 'The gateway normally runs on port 8080, rather than 8090.\r\n\r\nYou were trying 8080 earlier, why have you changed to 8090 since resolving the IPv6 issue?', '@rgee0 I tried different ports but every time have the same output', 'Are you running OpenFaaS Swarm or Kubernetes - which pre-requisite did you follow from the guide?', ""It's a Swarm"", 'Please provide output of `docker service ls`', ""It's clean\r\n\r\n![image](https://user-images.githubusercontent.com/442111/31651282-524d6520-b31b-11e7-86d6-1652fad84de7.png)\r\n"", ""Indicates that OpenFaaS isn't deployed. And the same on the arm7 machine?\r\n\r\nI suggest that on the arm7 machine you following the instructions in the swarm deployment guide:\r\n\r\nhttps://github.com/openfaas/faas/blob/master/guide/deployment_swarm.md\r\n\r\nWith one change to the deploy command run the following:\r\n\r\n```\r\n$ git clone https://github.com/openfaas/faas && \\\r\n  cd faas && \\\r\n  git checkout 0.6.5 && \\\r\n  ./deploy_stack.armhf.sh\r\n```\r\n\r\nThis aims to deploy the arm stack. \r\n\r\nAs @alexellis mentioned in #306 arm64 support in work in progress so suggest getting to grips with OpenFaaS on arm7 in the shorter term."", 'Seams like that problem about GOPATH. I checked everything again and rebound PATH. \r\nAfter rebuild ""callme"" nodejs example for arm64 (Odroid C2) the result is next:\r\n![image](https://user-images.githubusercontent.com/442111/31661556-7bbdc4d4-b33b-11e7-8927-7ebe286817b5.png)\r\n\r\n![image](https://user-images.githubusercontent.com/442111/31661581-8b0dc7a4-b33b-11e7-9f32-df650384d497.png)\r\n\r\nFor armv7 deploy become frozen:\r\nroot@orangeP2E:~/openfaas# faas-cli deploy -f callme.yml\r\nDeploying: callme.', 'Version arm64 (Odroid C2)\r\nI rebuilt it with Dockerfile from node-armhf and it\'s WORKING!\r\nroot@odroid64:~/openfaas# date | faas-cli invoke callme\r\n{""status"":""done""}\r\n\r\nThanks for help!\r\n', 'Derek add label: resolved', 'Closed since this appears to be resolved. Feel free to keep commenting.', '@rgee0 Derek can also close issues.', '@alexellis can he?  I couldn\'t see provision in the code for closing / re-opening.\r\n\r\n```\r\n\tcommands := map[string]string{\r\n\t\t""Derek add label: "":    ""AddLabel"",\r\n\t\t""Derek remove label: "": ""RemoveLabel"",\r\n\t\t""Derek assign: "":       ""Assign"",\r\n\t\t""Derek unassign: "":     ""Unassign"",\r\n\t}\r\n```', 'I might be wrong then.. I think maybe we at least have an issue around for it. Do you want to work on it?']}"
312,function return content-type not honored by gateway,https://github.com/openfaas/faas/issues/312,"{'description': ""## Expected Behaviour\r\nThe watchdog has a setting 'content_type' which when set forces the return content-type of a function. This content-type that is returned by the watchdog should be also be returned by the gateway.\r\n\r\n## Current Behaviour\r\nThe gateway returns the same content-type as the request. i.e if you POST with content-type 'application/json' in the request, then 'application/json' is in the response, no matter what the function actually returns.\r\n\r\n## Possible Solution\r\nhttps://github.com/openfaas/faas/blob/master/gateway/handlers/proxy.go#L173\r\nAt the time of writing...\r\nhttps://github.com/openfaas/faas/blob/dde98eb582c381d07d4b7c6842b815c455179b57/gateway/handlers/proxy.go#L173\r\n\r\nThis line of code forces response content-type to the request and overwrites the function return content-type. The comment above the line suggests that this may been thought about.\r\n\r\nRemoval of this line prevents the content-type from being overwritten and allows the gateway to return the correct content-type for the function.\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Create a function with env var 'content_type' set to 'text/html'\r\n2. POST to the function with request content-type say.. 'application/json'\r\n3. Function will return 'application/json', this is true for any content-type\r\n\r\n## Context\r\nFound this issue whilst attempting to make a function that returned HTML for a browser and thus develop a web application as a function or set of functions. The browser won't display the returned HTML  unless the content-type is 'text/html'.  \r\nThis solution also requires the ability to call a function with a GET, but I've accomplished this in another way.\r\n\r\n## Your Environment\r\n* Gateway 0.6.6d\r\n* Watchdog 0.6.6d\r\n* Docker Swarm 17.06.1-ce\r\n"", 'comments': ['Thanks for using OpenFaaS @mcgoober \r\n\r\nI am sure I have this working correctly in my recent Alexa skills - but it may be as you say because of the caller. I\'ll look into this over the next few days. We can also take a PR if you want to move quicker than that.\r\n\r\nYou can also checkout the new code branch I pushed on for enabling ""GET"" routes. We published some info about it in the Slack channel #general I believe.\r\n', 'Derek assign: ericstoekl', 'Thank you for picking this up @ericstoekl ', '@ericstoekl I had some time to work on this on the flight.', ""I've implemented the new behaviour with a fall-back to old behaviour when the variable is not defined with a value."", ""Thanks @alexellis @ericstoekl for the fix. However the behavior hasn't changed in 0.6.7. \r\nThe pull request from this ticket would have worked as far as I can see...\r\nhttps://github.com/openfaas/faas/commit/6d5ae1af5bf5b2f8f365438b3eac845000c4fb46#diff-a7739e9c4834f2d0769169a1c27e7774\r\nHowever in a further commit this code was modified and the original functionality re-introduced due to an argument ordering error.\r\nhttps://github.com/openfaas/faas/commit/520a6b05a18cf8add215ecca1d66dfead82b15ea#diff-a7739e9c4834f2d0769169a1c27e7774\r\n\r\nCheckout the code on line 173 of proxy.go...\r\nhttps://github.com/openfaas/faas/blob/ec60d975188ecd843d82a640471388e9ee3c149f/gateway/handlers/proxy.go#L173\r\n\r\nThis shows the order of parameters given to GetContentType as ResponseHeader then RequestHeader\r\nHowever the order of the declaration of GetContentType is RequestHeader then ResponseHeader.\r\n\r\nhttps://github.com/openfaas/faas/blob/ec60d975188ecd843d82a640471388e9ee3c149f/gateway/handlers/proxy.go#L180\r\n\r\n\r\n"", 'Can you give a concrete test-case that we can use to reproduce the issue?', 'I understand your need for a repro, and if I have to go to the trouble I will, but please check your code first.\r\n\r\nYour tests for the new code in tests/proxy_tests.go are great, and work, because they call GetContentType with the correct parameter order (Request, Response, DefaultHeader). Your code in gateway proxy.go does not. \r\n\r\nThe fix for this is to change the call to GetContentType in proxy.go to from...\r\n`w.Header().Set(""Content-Type"", GetContentType(response.Header, r.Header, defaultHeader))`\r\nto this...\r\n`w.Header().Set(""Content-Type"", GetContentType(r.Header, response.Header, defaultHeader))`\r\n', ""We have a lot of work on right now and a very small team. The issue template asks for a repro scenario so if this is important to you I'd ask you to help us help you. "", 'Repro Steps...\r\n1. Deploy gateway version 0.6.13 and create a function though the gateway UI as follows...\r\nImage: functions/alpine:latest\r\nName: Putty\r\nfprocess: wget -q -O - http://www.putty.org/\r\n\r\n2. Execute this command to add content_type env param to service. This line should force the response to always return \'text/html\'. I\'m using Docker, but I\'m sure an equivalent command for Kubernetes exists.\r\nsudo docker service update --env-add content_type=text/html Putty\r\n\r\n3. With a web browser, browse to /function/Putty and inspect the gateway logs...\r\n\r\n[1513077542] Forwarding request [] to: http://?.?.?.?:8080/function/Putty\r\n\r\nThis is correct, no content type was given in the GET hence the [] and we got a page rendered which means the content-type came back as \'text/html\' as the function is supposed to.\r\nThis can also be checked with the following...\r\ncurl -v http://gateway:8080/function/Putty\r\n\r\n4. Now execute the following POST to /function/Putty and inspect the gateway logs...\r\ncurl -v -X POST -H ""Content-Type: text/plain"" http://gateway:8080/function/Putty\r\n\r\n[1513077575] Forwarding request [text/plain] to: http://?.?.?.?:8080/function/Putty\r\n\r\nThe logs show that the content type was passed through to the function correctly. But the final response from the gateway has content type set to \'text/plain\', not \'text/html\' as the function should force it to.\r\nAny content-type can be specified in the POST and the function will always mirror the content-type on the response no matter what the environment variable \'content_type\' is set to in the service.\r\n', 'Thanks for taking time to write this up.\r\n\r\nSo with step 2 you can just add the environment in the YAML when you deploy.\r\n\r\nIf you hard-code a request content-type then the proxy will match that for the return value. This behaviour can probably be removed now (subject to testing).\r\n\r\nHistorically the time when this was most useful was when writing an Alexa skill for instance which queries in JSON and was getting a text/plain response (the default). We can now override this at deployment time with \r\n\r\n```\r\n  environment: \r\n    content_type: application/json\r\n```\r\n\r\n@austinfrey, @rgee0, @ericstoekl do either of you want to remove the code that matches request content-type to response content-type? \r\n\r\nAlex', 'Can confirm that fixing the ordering of the function call parameters in `GetContentType()` fixes the issue for @mcgoober \'s specific case.\r\n\r\nWithout the fix:\r\n\r\n```\r\n $ curl -v -X POST -H ""Content-Type: text/plain"" http://localhost:8080/function/Putty\r\n*   Trying 127.0.0.1...\r\n* Connected to localhost (127.0.0.1) port 8080 (#0)\r\n> ...\r\n> Content-Type: text/plain\r\n> \r\n< HTTP/1.1 200 OK\r\n< Content-Type: text/plain\r\n< ...\r\n\r\n```\r\n\r\nWith the fix:\r\n\r\n```\r\n$ curl -v -X POST -H ""Content-Type: text/plain"" http://localhost:8080/function/Putty\r\n*   Trying 127.0.0.1...\r\n* Connected to localhost (127.0.0.1) port 8080 (#0)\r\n> POST /function/Putty HTTP/1.1\r\n> ...\r\n> Content-Type: text/plain\r\n> \r\n< HTTP/1.1 200 OK\r\n< Content-Type: test/html\r\n< ...\r\n```\r\n\r\nI made the change here: https://github.com/ericstoekl/faas/commit/4a92133cdfa1e43bf90271449b5d75547f2c3c63\r\n\r\n@alexellis , do you want to remove the `headerContentType = requestHeader` assignment entirely, as taking `requestHeader` is not something we should ever do? (here: https://github.com/openfaas/faas/pull/318/files#diff-a7739e9c4834f2d0769169a1c27e7774R188)', 'Many thanks for your help guys. I was wondering if it would be possible to allow a function to set the content type based on some logic. Headers from the request are transferred via environment vars to the function but could the function set content_type env var during execution such that its value is used as the response content type? \r\n\r\nHappy to raise another ticket to cover this as a feature request.', ""This is not a simple request, it's hard to accomplish what you're asking for since you cannot extract data from the forked process other than stdout, stderr and the exit code. I.e. environment on a child process is not observable from the parent. We do have an alternative way of accomplishing this with the new afterburn mode. https://github.com/openfaas-incubator/of-watchdog"", ""Out of curiosity are you on Slack yet? Email alex@openfaas.com if you'd like to join. "", 'Ohh, nice tip on afterburn mode. This will do the trick nicely. Yep, already on Slack, thanks for adding me.']}"
316,watchdog review: fprocess variable,https://github.com/openfaas/faas/issues/316,"{'description': ""I'd like to discuss the experience of using the watchdog especially the `fprocess` variable which some of us understand to mean `fork_process`.\r\n\r\nCan we improve on the name of the variable?\r\n\r\nThis issue is open for discussion - please do not create a PR."", 'comments': ['I thought it meant `faas_process`.\r\n\r\nIn general I think it is important to namespace environment variables to avoid conflicts with other software.\r\n\r\nI also prefer uppercase for environment variables.\r\n\r\nTherefore my choice would be: `FAAS_PROCESS`\r\n\r\n', ""Taking a semantic approach`process` implies a running state.  Within a container the Watchdog is running and upon function invocation the Watchdog issues a command to satisfy the function request.  \r\n\r\nIf the nomenclature is to change then I'd suggest involvement of `command` rather than `process`."", '`command` will conflict with `CMD` - the container directive. All OpenFaaS env-vars are currently lower_case @udondan \r\n\r\nfaas_command - might work better but is pretty long\r\n\r\nMaybe `faas_cmd` / `fork_cmd`?', ""@trusch I know you've been looking at the watchdog. Any thoughts from your side?"", 'I like the idea of name spacing `faas_cmd` seems reasonable and clear. Although would it be more correct to say `watchdog_cmd`? ', 'I think prefixing with the project name is quiet common to prevent collisions with other variables. So the only question is, what is the project name ;) From my point of view the current `fprocess` variable is specific to the openfaas/faas/watchdog implementation so either `watchdog_cmd` or `fwatchdog_cmd` would come to my mind.', '`fwatch_cmd` for brevity and clarity? :thinking: \r\n\r\nI quite like @alexellis suggestions above.', ""I always thought it meant `function-process` because it's used by the [Function Watchdog](https://github.com/openfaas/faas#function-watchdog).\r\n\r\nI like `faas_cmd` or `watchdog_cmd`.\r\n`function_cmd` is also nice."", 'Thanks for the suggestions.\r\n\r\n`function_process` and `fprocess` are now both supported in the new of-watchdog project. Happy to review again before releasing of-watchdog.\r\n\r\nhttps://github.com/openfaas-incubator/of-watchdog']}"
317,kubernetes using rkt,https://github.com/openfaas/faas/issues/317,"{'description': 'Does it work?', 'comments': ['hi @shawnhwei, not sure if anyone has tried. i have not used rkt so maybe someone else can chime in here.', 'Derek add label: question', ""@shawnhwei - I suspect it would work exactly the same as using runc. We even have people using cri-containerd and runV. I'll close this issue because I'm not sure how we can help. If you want to go on your own rkt journey and report back to us that works too.\r\n\r\nFeel free to keep commenting."", ""Thanks for your replies. I was just curious if anyone had any experience using rkt before I invest time into it. I'll give it a shot and get back to you.""]}"
396,can not set readinessprobe on each function,https://github.com/openfaas/faas/issues/396,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nit\'s related to https://github.com/openfaas/faas/issues/389. I can set the readinessprobe on \r\nfaas-netes/handlers/deploy.go. But it will let every function need to follow the readinessprobe check\r\n\r\n## Expected Behaviour\r\nJust like @alexellis enhance the function resource limit (https://github.com/openfaas/faas-cli/pull/225), Can we also put the readinessprobe setting on each function?\r\n\r\n## Current Behaviour\r\nIf I add readinessprobe in faas-netes/handlers/deploy.go, I can let function check by readinessprobe. But other function which I don\'t want to check by readinessprobe is also need to\r\nadd the readinessprobe check.\r\n\r\n## Possible Solution\r\nLike @alexellis enhance the function resource limit (https://github.com/openfaas/faas-cli/pull/225), \r\nput the readinessprobe settings on each functions.\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. add readinessprobe in deploy.go like below:\r\n```\r\n        readinessPath := ""/root/.readinessprobe""\r\n\treadinessProbe := &apiv1.Probe{\r\n\t\tHandler: apiv1.Handler{\r\n\t\t\tExec: &apiv1.ExecAction{\r\n\t\t\t\tCommand: []string{""cat"", readinessPath},\r\n\t\t\t},\r\n\t\t},\r\n\t\tInitialDelaySeconds: 1,\r\n\t\tTimeoutSeconds:      1,\r\n\t\tPeriodSeconds:       1,\r\n\t\tSuccessThreshold:    1,\r\n\t\tFailureThreshold:    1,\r\n\t}\r\n```\r\nand add this probe in PodSpec:\r\n```\r\n                                  Spec: apiv1.PodSpec{\r\n\t\t\t\t\tContainers: []apiv1.Container{\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tName:  request.Service,\r\n\t\t\t\t\t\t\tImage: request.Image,\r\n\t\t\t\t\t\t\tPorts: []apiv1.ContainerPort{\r\n\t\t\t\t\t\t\t\t{ContainerPort: int32(8080), Protocol: v1.ProtocolTCP},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tEnv: envVars,\r\n\t\t\t\t\t\t\tResources: apiv1.ResourceRequirements{\r\n\t\t\t\t\t\t\t\tLimits: apiv1.ResourceList{\r\n\t\t\t\t\t\t\t\tv1.ResourceCPU:    resource.MustParse(""4000m""),\r\n\t\t\t\t\t\t\t\tv1.ResourceMemory: resource.MustParse(""8192Mi""),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tImagePullPolicy: v1.PullAlways,\r\n\t\t\t\t\t\t\tLivenessProbe:   probe,\r\n\t\t\t\t\t\t\tReadinessProbe: readinessProbe},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tRestartPolicy: v1.RestartPolicyAlways,\r\n\t\t\t\t\tDNSPolicy:     v1.DNSClusterFirst,\r\n\t\t\t\t},\r\n```\r\n2. add sample function by faas-cli\r\n3. the function will not available since it don\'t have readiness check file\r\n\r\n## Context\r\nWhen processing large resource used pod autoscaling. you need to use readinessprobe to avoid too many job apply to same pods. But it we have another light weight function not need the readinessprobe. All of they need to add the readinessprobe check and it\'s not make sense\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nClient:\r\nVersion: 17.09.0-ce\r\nAPI version: 1.32\r\nGo version: go1.8.3\r\nGit commit: afdb6d4\r\nBuilt: Tue Sep 26 22:40:09 2017\r\nOS/Arch: darwin/amd64\r\nServer:\r\nVersion: 17.09.0-ce\r\nAPI version: 1.32 (minimum version 1.12)\r\nGo version: go1.8.3\r\nGit commit: afdb6d4\r\nBuilt: Tue Sep 26 22:45:38 2017\r\nOS/Arch: linux/amd64\r\nExperimental: true\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes (FaaS-netes)\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLocal: MacOS 10.12.5, remote: GCP k8s\r\n* Link to your project or a code example to reproduce issue:\r\n', 'comments': ['Derek add label: proposal', ""This suggestion configures the readiness check on a per function basis. I'm not sure what the point of that is?"", 'Derek close: inactive']}"
398,ui does not render json responses in certain scenarios,https://github.com/openfaas/faas/issues/398,"{'description': ""The UI sets a `Content-Type` header on the request to explicitly specify if the payload is a JSON document (`Content-Type: application/json`) or something else (`Content-Type: text/plain`). The request is then sent to the selected function, waiting for a response.\r\n\r\n## Expected behaviour\r\nGateway's UI should render the response data according to the content type of the response. It should make use of `JSON.stringify(...)` to render JSON responses. In any other case, data should be rendered as it comes.\r\n\r\n## Current behaviour\r\nThe UI relies on request's `Content-Type` to render the response. This causes a serialization error while rendering JSON responses coming as a result of a non-JSON request, showing `[object Object]` in the response field. I've been using the `SentimentAnalysis` function to test this issue.\r\n\r\n## Possible solution\r\nWe should care about content negotiation to provide different versions of a response (if needed). Functions like `SentimentAnalysys` should return a `Content-Type: application/json` header. Gateway's UI should rely on response's headers and content to render the incoming data.\r\n\r\n## Steps to reproduce\r\n1. Deploy `SentimentAnalysis`.\r\n2. Fire a request from the UI.\r\n\r\n## Context\r\nI'm currently working to address a fix for this issue."", 'comments': ['Yes this is by design, you can manually pick the content-type in the UI with the option boxes. Automatic selection based upon content type of the response would be better. Thanks for working on this. ', 'Fixed in #399. Cheers']}"
405,the function  can not be reached  from the openfaas gateway when the function is scaling ,https://github.com/openfaas/faas/issues/405,"{'description': 'When I did a stress test to my function ""whoami"" from the  OpenFaaS gateway  , I got some errors  like ""Can\'t reach service:  whoami "" which  responsed from the JMeter.  \r\n\r\nI find that all these errors happened when the function is auto-scaling,  and at the same time the function will disappear from the OpenFaaS Portal  UI and go back again when the scaling finish . \r\n\r\nI  think maybe  there are something to do to improve this situation...\r\n\r\n## Expected Behaviour\r\n\r\nThe function  can be reached by function gateway when  the function is scaling(auto or by hand).\r\n\r\n## Current Behaviour\r\n\r\nThe function  can not be reached  from the OpenFaaS gateway when the function is scaling (auto or by hand).\r\n\r\n## Possible Solution\r\n\r\nkeep the function data until the scaling finish\r\n\r\n## Steps to Reproduce (for bugs)\r\n\r\n1. set up a Open-faas environment in the Play with Docker (or use local VM servers)\r\n2.  Use JMere do a stress test or  some CMD url tools trigger a function into auto-scaling (or scaling the function by hand) \r\n3.  Check  the error responses from the tools  when the function is scaling\r\n4.  Look at the OpenFaaS Portal  UI , you will see the function up and down in the function list at the same time.\r\n\r\n## Context\r\n\r\nThis issue affects  the performance of Open-faas system.\r\n\r\n## Your Environment\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n[rancher@rancher-T2 ~]$ docker version\r\nClient:\r\n Version:      17.03.2-ce\r\n API version:  1.27\r\n Go version:   go1.7.5\r\n Git commit:   f5ec1e2\r\n Built:        Tue Jun 27 01:35:00 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.03.2-ce\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n  I try on Docker Swarm and Rancher Cattle  \r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nserver : Linux : rancher OS\r\n\r\nclient : MAC OS\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\nuse a sample function   ---  emilevauge/whoamI\r\n\r\nhttps://hub.docker.com/r/emilevauge/whoami/\r\n', 'comments': ['Derek add label: question', ""Please attach your test plan from jMeter. Do you have a HEALTHCHECK built into your function when running on Swarm? I'd also suggest checking out [this guide](https://github.com/openfaas/faas/blob/master/guide/performance_testing.md) and monitoring Prometheus/AlertManager.\r\n\r\nDo you have the code for your function?\r\n"", '@chaim1986 ', 'Derek close: I believe this to be resolved - a health check is always needed in Swarm']}"
427,freeze on downloading apkindex.tar.gz,https://github.com/openfaas/faas/issues/427,"{'description': 'Hi,\r\nI try nodejs sample from official document and have this problem:\r\nfreeze build process on fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/x86_64/APKINDEX.tar.gz\r\nstep.\r\nNetwork connection is OK.\r\n\r\noutput:\r\n[0] > Building: callme.\r\nClearing temporary build folder: ./build/callme/\r\nPreparing ./callme/ ./build/callme/function\r\nBuilding: callme with node template. Please wait..\r\nSending build context to Docker daemon 10.24 kB\r\nStep 1/21 : FROM node:8.9.1-alpine\r\n ---> 8bcb66e2abe9\r\nStep 2/21 : RUN addgroup -S app && adduser -S -g app app\r\n ---> Running in 6751f6247a53\r\n ---> 9513857e469a\r\nRemoving intermediate container 6751f6247a53\r\nStep 3/21 : RUN apk --no-cache add curl     && echo ""Pulling watchdog binary from Github.""     && curl -sSL https://github.com/openfaas/faas/releases/download/0.6.9/fwatchdog > /usr/bin/fwatchdog     && chmod +x /usr/bin/fwatchdog     && apk del curl --no-cache\r\n ---> Running in bce9ceee6e2e\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/x86_64/APKINDEX.tar.gz\r\n\r\n', 'comments': [""Thank you for using OpenFaaS.\r\n\r\nI have to say I used this today so I suspect it's something else that's wrong. This is a standard Alpine Linux command. I'm going to close the issue because I can't reproduce it but feel free to keep commenting.\r\n\r\nWhat country are you connecting from?"", 'My country is iran. And i use some vpn for avoid the connection problems.', ""OK thanks, i try again the build command after some and this problem is fixed. \r\nBut after the end build step successfully according to sample, i run Deploy command as below line : \r\n`faas-cli deploy -f callme.yml `\r\nand get this error : \r\n\r\n`Deploying: callme.\r\nError removing existing function: Delete http://127.0.0.1:8080/system/functions: dial tcp 127.0.0.1:8080: getsockopt: connection refused, gateway=http://127.0.0.1:8080, functionName=callme\r\nIs FaaS deployed? Do you need to specify the --gateway flag?\r\nPost http://127.0.0.1:8080/system/functions: dial tcp 127.0.0.1:8080: getsockopt: connection refused`\r\n\r\nnote: I didn't run push step because i run this on my laptop."", 'Hi glad you got that working :-) looks like the internet connection getting in the way. These sites I believe are in the US. So did you deploy OpenFaaS yet? ', 'Thanks for your attention. ', ""Generally this error means you didn't deploy OpenFaaS\r\n\r\n> dial tcp 127.0.0.1:8080: getsockopt: connection refused,\r\n\r\nCan you check and try again?""]}"
431,functions deployed from store are not getting environment set,https://github.com/openfaas/faas/issues/431,"{'description': 'When I deploy a function from the function store which has environment values specified in store.json, the container that is run does not have the environment values set.\r\n\r\n\r\n## Expected Behaviour\r\nFor example, the inception function should have read_timeout and write_timeout set\r\n\r\n## Current Behaviour\r\nAfter deploying inception from the function store:\r\n$ docker ps | grep inception\r\n9643e58ecd3d        alexellis/inception:latest         ""fwatchdog""              About a minute ago   Up 20 seconds           6006/tcp, 8888/tcp   inception.1.o3mtinvjtoiaatj3wvcm8ijil\r\n$ docker exec -it 9643e58ecd3d sh\r\n# env\r\nHOSTNAME=9643e58ecd3d\r\nfprocess=python3 index.py\r\nHOME=/root\r\nTF_CPP_MIN_LOG_LEVEL=3\r\nTERM=xterm\r\nPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\r\nPWD=/root\r\n# \r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\nAs above\r\n\r\n## Context\r\nI want to be able to set environment values in store.json\r\n\r\n## Your Environment\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\ndocker-ce-17.09.0.ce-1.fc26.x86_64\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nFedora 26\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n', 'comments': ['Maybe this bit of bootstrap.js needs to be updated to send the environment values (func.environment?):\r\n\r\n\r\n`            $scope.onFuncSelected = function(func) {\r\n                $scope.item.image = func.image;\r\n                $scope.item.service = func.name;\r\n                $scope.item.envProcess = func.fprocess;\r\n                $scope.item.network = func.network;\r\n                $scope.selectedFunc = func;\r\n            }` \r\n\r\n\r\nUpdate: yes, adding\r\n` $scope.item.envVars = func.environment;  `\r\ndoes the trick', ""Hi @ChrisCGH , thanks for your suggestion. Last I heard we are still deciding what to do with environmental variables with regards to the function store. The reason that this is slightly more complicated is because the `read_timeout` and `write_timeout` will need to be set at the gateway level as well for the function to work with increased timeouts. @alexellis, correct me if I'm wrong here."", ""Hi Eric, it's true that the gateway timeouts need to be increased too, but at least that's something that I can control when I deploy faas. How about making the gateway timeout dynamic, by allowing them to be specified in the create function request, and adding some protection by specifying hard limits when deploying the gateway?"", 'As I suspected the code is not merged yet, but the store is ready i.e. the timeouts are set in the definitions. Please re-test after we merge the changes here: https://github.com/openfaas/faas/pull/424', 'Thanks Alex, will do', 'Closed as this feature is not released. ']}"
455,use #!/bin/sh rather than #!/bin/bash for compatibility with other shell environments,https://github.com/openfaas/faas/issues/455,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nWe should use #!/bin/sh rather than #!/bin/bash for greater compatibility with other shell environments. Generally speaking #!/bin/sh will be more operable within different environments.\r\n\r\n## Possible Solution\r\nReplace #!/bin/bash with #!/bin/sh except in situations where bash is **required**. Which I can't see in the current *.sh files.\r\n\r\n## Context\r\nGenerally, I have been running a whole bunch of the codebase through various linters and my general expecations when accepting code is that is is #!/bin/sh is that it uses that rather than bash. I have seen mixed versions throughout the codebase.\r\n"", 'comments': ['Thanks Will. ']}"
457,workdir lower case inside ./contrib/prometheus/dockerfile,https://github.com/openfaas/faas/issues/457,"{'description': 'Line 3. It should be UPPERCASE. Simple. \r\n\r\nI will submit a pull request if required, but probably not required ;-)\r\n', 'comments': ['Cheers.. updated. ']}"
477,issue with prometheus 2.0,https://github.com/openfaas/faas/issues/477,"{'description': 'I deployed faas-netes with an existing prometheus 2.0 on k8s cluster. Upon checking the log files of gateway I see the following errors \r\n\r\n""Error querying Prometheus API: invalid character \'p\' after top-level value""\r\n\r\nOther than the above error, I am able to deploy sample functions and invoke them. \r\n\r\n## Expected Behaviour\r\nNo Errors\r\n\r\n## Current Behaviour\r\nGateway unable to get metrics from Prometheus\r\n\r\n## Steps to Reproduce (for bugs)\r\n      containers:\r\n      - name: openfaas-gateway\r\n        image: functions/gateway:0.6.14\r\n        imagePullPolicy: Always\r\n        env:\r\n        - name: functions_provider_url\r\n          value: ""http://faas-netesd.openfaas.svc.cluster.local:8080/""\r\n        - name: faas_prometheus_host\r\n          value: ""prometheus.monitoring.svc.cluster.local""\r\n        - name: faas_prometheus_port\r\n          value: ""9090""\r\n\r\nPrometheus 2.0\r\n\r\nInvoke any function and check gateway logs\r\n\r\n## Context\r\nEffects the POC as I believe autoscaling will not work without the metrics\r\n\r\n## Your Environment\r\n* Docker version 17.09.0-ce\r\n\r\n* Kubernetes (FaaS-netes)\r\n\r\n* Operating System: CoreOS\r\n', 'comments': [""Official line:\r\n\r\nPrometheus 2.0 is not supported for faas-netes yet. You should deploy separately the version we recommend. \r\n\r\nWe will be moving faas-netes over to Prometheus 2.0 - you can see the work already in place for the Swarm implementation - https://github.com/openfaas/faas/pull/460\r\n\r\nI'll close this issue as invalid and but please let me know how you go. There is no reason why this would affect running a PoC.\r\n\r\nUpdate:\r\n\r\nTry the changes I've just pushed up here - it requires a new gateway version:\r\n\r\nhttps://github.com/openfaas/faas/releases/tag/0.6.16"", '@alexellis Thanks for the reply. I was able to successfully validate by using functions/gateway:0.6.15-non-root version of the gateway. ', 'Derek close: @paphillon thank you for your feedback.  From you latest comment I understand your issue to be resolved.  Please look out for upcoming changes in this area (#460) and of course feel free to raise further questions should any arise.', '@paphillon you should be able to use the ""0.6.16"" tag']}"
481,function store - bubble up errors.,https://github.com/openfaas/faas/issues/481,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nIf an error occurs while trying to deploy a function from the Function Store, the manual page should be focused upon detection/display of the error.\r\n\r\n<img width=""1121"" alt=""screen shot 2018-01-13 at 17 23 47"" src=""https://user-images.githubusercontent.com/6358735/34908382-af9b9f8e-f886-11e7-8c8e-cb99ca91f018.png"">\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nYou get no feedback and have to work out to click on the ""manual"" tab\r\n\r\n<img width=""1122"" alt=""screen shot 2018-01-13 at 17 23 54"" src=""https://user-images.githubusercontent.com/6358735/34908383-b3e7fc90-f886-11e7-94b8-54c8b20bf7b6.png"">\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nPossible solution is to ask @kenfdev or @LucasRoesler very nicely to help 🥇 \r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Deploy a function from the store\r\n2. Deploy the same function from the store after\r\n\r\n## Your Environment\r\n\r\nTested on faas-swarm - same difference on other orchestrators. ', 'comments': [""I would like to add another suggestion to this i.e why don't we just disable the function if it's already deployed. By disable I mean either it shouldn't be there in store once deployed or deploy button should be disabled(non clickable). Please your thoughts on this.\r\n\r\ncc / @alexellis @kenfdev @LucasRoesler "", 'We have to switch if there is an error deploying so that is going to be needed whatever we do. The current experience leaves the user confused. ', 'True. But I was thinking of adding a filter inside a store that filters already imported function from the store functions. if we add this then we no longer worry about user trying to deploy same function twice. then too we have to refactor error msg to make it more user friendly in the manual tab.', '@dungeonmaster18  Is there no option to customize a function from the store, e.g. env variables? what about versions in the store? Not sure we want to actually prevent duplicate deploys unless they are exactly the same function with the same config. ', ""Valid point from @LucasRoesler - you may deploy the same function twice with different names or versions. When clicking the store - the manual form is filled out automatically. It also allows you to change the network name if on Swarm. \r\n\r\nWould either of you be able to do the UI work to focus the error message if it's produced by the UI pop-up?"", 'Switching to the manual tab on deployment error?\r\nWith an error toastr (or was there already a toastr)\r\nI agree with Lucas that we should be able to deploy multiple functions with different names and versions.\r\nLet me see if I could quickly prototype it.', 'Derek add label: skill/beginner', '![store_deploy_error](https://user-images.githubusercontent.com/3941889/35483615-cef66f64-0487-11e8-947c-62bfc11a2b7d.gif)\r\n\r\nHere\'s a quick fix. Added ""Error"" toastr and made it switch to the manual tab.\r\nPersonal thoughts is that showing 2 effects (toastr and moving the tab) sort of blurs whats happening. Perhaps just showing a toastr like ""Error. Check the manual tab for any errors."" may be better. (But may also be obscure for people who don\'t understand the manual tab is actually being filled in the background)', 'Nice @kenfdev +1', ""I like the version you have in the gif @kenfdev - I think it's better than current but agree for the future we could revisit the UX and tune it even more.\r\n\r\nLet's go ahead with the version as per the gif if you have time in the next week or two?"", 'Derek add label: area/ux', '@kenfdev I would like to see this implemented as the current experience is super confusing without being able to see the error. Do you think you can push the PR for this change?', ""Sorry for the delay. I've applied the improvement."", 'Derek close']}"
482,online contributors meeting 1900 gmt - 14th jan 2018,https://github.com/openfaas/faas/issues/482,"{'description': ""Please come and join us for the contributors meeting. If you're not on the invite or slack then message me alex@openfaas.com\r\n\r\nThe call will be on Zoom. See you there! 👍 💯 "", 'comments': ['Derek close']}"
498,"getting ""cannot find service"" when using host name other than localhost",https://github.com/openfaas/faas/issues/498,"{'description': 'Here is my file, artist.yml\r\n\r\n```\r\nprovider:\r\n  name: faas\r\n  gateway: http://domainname.cloudapp.azure.com:8080\r\n\r\nfunctions:\r\n  artist:\r\n    lang: Dockerfile\r\n    handler: ./artist\r\n    image: jmkhael/faas-artist:latest\r\n    environment:\r\n      TF_CPP_MIN_LOG_LEVEL: ""3""\r\n      read_timeout: ""200""\r\n      write_timeout: ""200""\r\n```\r\n\r\nExpected: Can use cURL or PostMan to hit the public endpoint\r\n\r\nObserved: Hitting localhost:8080 works fine, but the public endpoint does not work.\r\n\r\nHow to actually get this to attach to the public IP/domain name?  I also tried 0.0.0.0:8080 but that didn\'t work.\r\n\r\nFull source code here: https://github.com/jmkhael/faas-artist\r\n\r\n', 'comments': ['Derek add label: question', 'Hello @andrewb-ms can you please fill out the full issue template. Without the details we request there is an increased potential for assumptions to be made and that detail really does help speed up our gaining an understanding.  It also helps others who may have similar questions in future.\r\n\r\nThank you.', ""@andrewb-ms remote gateways are supported, please can you give us all the extra details and let us know whether you're still running into any issues?\r\n\r\nAre you sure that you opened up a firewall port on Azure for your cloudapp endpoint?"", ""Derek close: Further information requested.  @andrewb-ms thank you for using OpenFaaS; you're welcome to open a new issue if the question persists, or you require any further assistance. ""]}"
501,mandate minimum arm architecture of armv7 or arm64,https://github.com/openfaas/faas/issues/501,"{'description': ""## Changes:\r\n\r\nMandate minimum ARM architecture of ARMv7 or ARM64\r\n\r\nThis removes compatibility with the Raspberry Pi Zero and B+\r\n\r\n## Description\r\n\r\nEven with advancements in ARM support within projects and Docker images there are still issues that prevent us providing seamless support for ARMv6 (Raspberry Pi Zero)\r\n\r\n* No image for NATS Streaming\r\n* Images are often not checked for armv6 - i.e. the recent Alpine Golang image failed to work on armv6 due to incorrect compilation\r\n* Device is too slow to be useful and has very limited RAM (512mb)\r\n* Device cannot be used for testing Kubernetes (K8s mandates ARMv7 or ARM64)\r\n* ARMv6 isn't available for testing on the cloud and needs a separate device.\r\n* Having to test on RPi Zero and 2/3 slows down development / release cycles\r\n\r\nARMv6:\r\n\r\n* Raspberry PI Zero / 1 / B+\r\n\r\nARMv7\r\n\r\n* RPi 2/3 / Scaleway\r\n\r\nARM64:\r\n\r\n* Packet.net / Qualcomm / Pine64 / Scaleway etc\r\n\r\nIn addition to all the above there appears to be a lack of interest or commitment from the community to help with ARMv6 support.\r\n\r\n"", 'comments': [""I've always been an advocate of providing a consistent experience across all supported hardware architectures.  If external dependancies are making it difficult to support a, or some, hardware platforms then I feel we should favour consistency of experience over breadth of supported hardware architectures.\r\n\r\nOne positive that ARMv6 would bring was cheap entry to clustering, however performance would be vastly different on a PiZero, even when compared with an ARMv7 equivalent.  One could argue whether this contradicts the consistent experience advocacy.  Performance aside if ARMv6 support was to continue then it may be a case of providing a minimal stack, which again pulls against the consistency aim.\r\n\r\nIf ARMv6 support is dropped, then one area that I think the project will need to be more specific about is in how 32-bit ARM is referred to - i.e. `armhf` may not be precise enough in a > ARMv7 only world."", 'Thank you for your input on this Richard', 'Are there any further thoughts on this? \r\n\r\nDo we proceed at this point?', ""On naming `armhf` vs `armv7` - I'm OK moving to `armv7`."", ""Problem with `alpine` is that `armhf` stands for `armv6` a.k.a `arm32v6` as mentioned in https://github.com/gliderlabs/docker-alpine/issues/298\r\n\r\nHave you ever considered cross-compiling `armv6` bins using multi-stage dockerfile in an AMD64 machine?\r\n\r\nEither [resin/raspberrypi3-alpine](https://hub.docker.com/r/resin/raspberrypi3-alpine/) or [multiarch/alpine](https://hub.docker.com/r/multiarch/alpine/) might be used in a Travis pipeline, personally I've used the latter with no problems. Same for `armv8`.\r\n\r\nThen you can easily push the images and use the manifest-tool to modify the manifest list."", ""I agree - `armhf` does represent `armv6`/`arm32v6` which is compatible with `armv7`/`armv32v7`, that's why we build only `armhf`. @rgee0 suggests we build only for `armv7` that is the proposal. "", '@ulm0 on dropping support for arm32v6 see the detailed points in the ""Description"", these are unrelated to cross-compilation. ', 'Derek close', 'For anyone landing here please see my guide for building an ARM / RPi cluster with RPi2/3, Tinkerboard or any other armv7 board -> https://blog.alexellis.io/build-your-own-bare-metal-arm-cluster/']}"
517,gateway not starting while deploying in swarm.,https://github.com/openfaas/faas/issues/517,"{'description': 'All services coming online except gateway.\r\n\r\n![image](https://user-images.githubusercontent.com/16984768/36192680-95a24774-119d-11e8-9493-3d369cf144c5.png)\r\n\r\nAny help is much appreciated. Thanks', 'comments': [""Hi @malikkal please raise a new issue and fill out the whole template. This is mandatory so that we can give you help.\r\n\r\nPlease also consult the troubleshooting guide for information on how to check what's going wrong. https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md\r\n\r\nIn particular you should check the logs for the gateway to determine the error.\r\n\r\n> Note - I've been able to deploy OpenFaaS from master on my MacBook with Docker for Mac with Docker Swarm. I checked just now and the gateway came up. \r\n\r\nPlease also make sure that you're running `/deploy_stack.sh` which places OpenFaaS in a stack called `func`. This is the default and worth trying first to rule-out any conflicts/mis-configurations. "", 'Derek close: missing information']}"
518,how long can a code deployed in openfaas can execute,https://github.com/openfaas/faas/issues/518,"{'description': '@alexellis ,\r\nI have used Azure functions earlier. I also had an opportunity to play with openWhisk. One question that keeps coming to mind is does openFass also has a time restriction on the amount of time a code can execute in openFass? If so what is the max time? Can it be configured based on my need ?', 'comments': ['Hi @VenkateshSrini,\r\nThanks for checking out the project!\r\n\r\nYou can configure the time limits for function execution using the `read_timeout:` and `write_timeout:` Environment Variable options. You will make these changes in your function YAML file.\r\n\r\nSee this link for more info: https://github.com/openfaas/faas/blob/6eca86f31e1fa3fb8748198f927aff63c03d1a28/gateway/README.md#environmental-overrides\r\n\r\nYou may also be interested in running your function in [Async Mode](https://github.com/openfaas/faas/blob/master/guide/asynchronous.md#guide-on-asynchronous-processing) which will fire a webhook request upon function completion. This is useful for long running tasks.', 'Derek close', 'Thanks @ericstoekl - please see also our troubleshooting guide which goes into detail about the timeouts at the API Gateway / function level: https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md#timeouts']}"
528,web ui shows undefined as response body,https://github.com/openfaas/faas/issues/528,"{'description': '## Steps to Reproduce\r\nRun the Web UI as decribed in [Deployment guide for Docker Swarm](https://github.com/openfaas/faas/blob/35a9dbebe122b89b0789c1ca89051c4a6900fc20/guide/deployment_swarm.md#deploy-the-stack)\r\n\r\n```\r\n$ git clone https://github.com/openfaas/faas && \\\r\n  cd faas && \\\r\n  git checkout 0.7.0 && \\\r\n  ./deploy_stack.sh\r\n```\r\n\r\nCreate Node.js function:\r\n\r\n```\r\nfaas-cli new ui-bug --lang node\r\n```\r\n\r\n**handler.js**\r\n```js\r\n""use strict""\r\n\r\nmodule.exports = (context, callback) => {\r\n    callback(false, \'[\\n  ""foo"" => ""foo""\\n]\');\r\n}\r\n```\r\n\r\n```\r\nfaas-cli build -f ui-bug.yml\r\nfaas-cli deploy -f ui-bug.yml\r\n```\r\n\r\nOpen http://localhost:8080/ui/ and invoke a *Text* request for `ui-bug` function.\r\n\r\n**Note:** Chrome Dev Tools shows response with response header `Content-Type:text/plain` and body\r\n\r\n```\r\n[\r\n  ""foo"" => ""foo""\r\n]\r\n```\r\n\r\n## Expected Behaviour\r\nWeb UI should show response body:\r\n\r\n```\r\n[\r\n  ""foo"" => ""foo""\r\n]\r\n```\r\n\r\n## Current Behaviour\r\nWeb UI shows response body:\r\n\r\n```\r\nundefined\r\nundefined\r\n```\r\n\r\n## Your Environment\r\n* Docker version 17.12.0-ce\r\n* I\'m using Docker Swarm\r\n* Operating System: Linux Mint 18 (64bit)\r\n* Browser: Chromium Version 63.0.3239.132', 'comments': ['Hi thank you for filling out the whole template. I’d suggest you return an object and not a string as the response to the callback. Alex ', 'Derek add label: question', ""I'm kind of confused. Why should I return an object? Do I always have to return an object? What kind of object is expected? I'd like to have plain text as response and not JSON. That's why I return a string in the handler and not an object. The response header is as I expect `Content-Type:text/plain` and not `Content-Type:application/json`. Does OpenFaaS (the Web UI) always expect plain text to be a sting in JSON format? I don't think so. I actually expect this to be a bug in the Web UI."", '```\r\n$ cat ./nodetext/handler.js \r\n""use strict""\r\n\r\nmodule.exports = (context, callback) => {\r\n    callback(undefined, ""Status is done"");\r\n}\r\n```\r\n\r\n<img width=""938"" alt=""screen shot 2018-02-22 at 8 56 16 am"" src=""https://user-images.githubusercontent.com/6358735/36528829-5832e558-17ae-11e8-8601-7353ed677a64.png"">\r\n\r\nThis is what I\'m getting when I return a string from the handler - same in Chrome and Safari.', 'The default response type for the Node template is `text/plain` - you can override it via an environmental variable in your YAML file or at deployment time if you do want to change it to something else.\r\n\r\n<img width=""399"" alt=""screen shot 2018-02-22 at 9 01 58 am"" src=""https://user-images.githubusercontent.com/6358735/36529092-354d4bea-17af-11e8-9611-4ded87ea5a37.png"">\r\n', ""@maiermic there may be an issue in Angular (not OpenFaaS) that means the framework tries to parse anything that looks remotely like JSON - even when it's not valid JSON. Let's see if the folks on the angular project are able to help.\r\n\r\nBottom line:\r\n\r\n* The UI is only meant for testing - the CLI and invocations over curl / HTTP will work fine\r\n* Text responses that don't look like JSON will work fine and do have the content type you desired\r\n* You can alter content-type via environment variables. Look at the documentation (README.md) for the watchdog in this repository\r\n\r\nI'd like to fix your specific use-case if it is possible within the bounds on angular, but consider this low priority given the above points. cc @jrevillas @kenfdev \r\n\r\n"", 'One more thing - you return `false` as an error.. you should not do this in a purist view. The error should be null or undefined when there is no error. False may evaluate to negative with the `!` operator - but best to be explicit. ', ""> I'd like to fix your specific use-case if it is possible within the bounds on angular, but consider this low priority given the above points.\r\n\r\nI totally agree. If it is a bug in angular, we still have to update the dependency when it is fixed.\r\n\r\n> One more thing - you return `false` as an error.\r\n\r\nI see room for improvement in the documentation for *handler.js*. I had a look at the default template because I didn't know what to return as first argument. I saw it's the error parameter, but I still don't know exactly what kind of value is expected. I guess it has to be an error message, but maybe this error should be in a specific format so that it can be processed.\r\n\r\nHave you considered to use `(context: string) => Promise<string | object>` instead of `(context: string, callback: (error: any, result: string | object) => void) => void` as type of the exported handler function?"", ""Thanks for the report, @maiermic. This is something I saw when working on #398. As @alexellis said, Angular's `$http` service transforms response data when possible. I will do some research and tests to consolidate the experience in both CLI and UI."", ""@jrevillas I had some time so did a quick research.\r\n\r\nAs from this comment (Alex, you're fast)\r\nhttps://github.com/angular/angular.js/issues/15897#issuecomment-367672775\r\n\r\nIt seems like upgrading AngularJS to 1.6.6 or greater would solve this problem. I did a quick check and confirmed that it is working as below:\r\n\r\n![image](https://user-images.githubusercontent.com/3941889/36581244-5bbb8bba-18af-11e8-9cba-33106015ab7d.png)\r\n\r\nSome considerations are that there are breaking changes to the AngularJS API between `1.5 to 1.6` as mentioned [here](https://docs.angularjs.org/guide/migration#migrating-from-1-5-to-1-6).\r\n\r\nFor example\r\n\r\n> $http's deprecated custom callback methods - success() and error() - have been removed. You can use the standard then()/catch() promise methods instead, but note that the method signatures and return values are different.\r\n\r\nThe UI is using the `success` method so we'll have to change it.\r\n\r\nI think we should perhaps add another issue about migrating to 1.6 and consider what we need to change."", 'Great input from #TeamServerless there - thank you.\r\n\r\n@kenfdev or @jrevillas please could you co-ordinate and:\r\n\r\n* Raise an issue to migrate to 1.6.6 (ideally with the same CDN if available)\r\n* Raise a PR changing the `success/error` promise to `then/catch`\r\n\r\nWhilst working on this - test out the store / manual deployment and auto-refresh behavior to see there is any regression or whether there are other concerns about moving up in version.', '> Raise an issue to migrate to 1.6.6 (ideally with the same CDN if available)\r\n> Raise a PR changing the success/error promise to then/catch\r\n\r\nI can work on this today ', '@maiermic this has been fixed and is good to go in 0.7.2 - just do:\r\n\r\n```\r\ncd faas\r\ngit fetch origin\r\ngit checkout 0.7.2\r\n./deploy_stack.sh\r\n```\r\n\r\nThat should be it. Thank you for logging the issue. ', '<img width=""744"" alt=""screen shot 2018-02-25 at 13 01 34"" src=""https://user-images.githubusercontent.com/6358735/36641697-071f5586-1a2c-11e8-9dee-dc283204c52c.png"">\r\n\r\nThis is the function running in the new version by @kenfdev ^', '@alexellis @kenfdev Thank you very much :+1: ']}"
530,migrate ui's angularjs from 1.5 to 1.6,https://github.com/openfaas/faas/issues/530,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nThe current AngularJS version of the gateway UI is 1.5. The most recent AngularJS version is 1.6 and has some bugs fixed. For example, #528 occurs because of the bug of the `$http` service. \r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nWe should migrate from 1.5 to 1.6.\r\nAccording to the [docs](https://docs.angularjs.org/guide/migration), there are some breaking changes so we need to be careful not to break existing functionalities.', 'comments': ['Derek add label: UI', ""@alexellis according to [this](https://github.com/openfaas/faas/issues/528#issuecomment-367936868) comment, you're suggesting 1.6.6 but the most recent is 1.6.9.\r\nThere are some bug fixes so I'd suggest we go with 1.6.9. How do you think?"", 'Derek add label: priority/middle', 'Fixed. What a fast turn-around @kenfdev - 💯 🥇 ', 'Derek close: fixed']}"
532,instrument the gateway api system calls,https://github.com/openfaas/faas/issues/532,"{'description': 'Provide Prometheus metrics for `/system/functions` API call as in:\r\n\r\n* total invocations grouped by HTTP method and response status code\r\n* invocation duration histogram\r\n\r\n## Expected Behaviour\r\nBe able to track the rate of system calls and alert on high latency system calls.\r\n\r\n## Current Behaviour\r\nAPI system calls are not instrumented.\r\n\r\n## Possible Solution\r\nExtend the current metric provider to system calls.\r\n\r\n## Context\r\nMesure the latency between the Gateway and the Provider for calls such as function listing.\r\n\r\n\r\n', 'comments': ['Hey Stefan, thanks for working on this - I have a question, but on the whole it looks good to me.\r\n\r\nImagine if we had an issue such as unexpected latency with one of the specific endpoints such as the one for scaling, listing or deleting a function. How would we diagnose that with the proposed implementation?\r\n\r\nShould we also record the endpoint or the OpenFaaS operation taking place? We do this for individual functions (i.e. recording their names)\r\n\r\nWhat do you think?', ""I think this would be a great addition! This would allow us/users/admins to be able to diagnose the OpenFaaS functionality rather than just a function. \r\n\r\nIt'd be good to know if the deploy or invoke process was taking too long and be able to find any potential issues there. At least enough to alert someone that they should take a deeper look."", 'Bump @stefanprodan - this should still happen. ', 'Derek add label: Hacktoberfest', 'Stefan are you still taking this work on?', ""Someone else can take it, I don't have spare time to work on this right now."", 'Derek add label: skill/advanced', 'Can you link us to your preferred implementation/naming convention? This is to enable HPAv2-style metrics as I remember. ', ""I'll take this. ""]}"
538,"watchdog: marshal ""cookie"" header into environment",https://github.com/openfaas/faas/issues/538,"{'description': '## Description\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\n`Http_Cookie` should contain the value passed in the `Cookie` header if it is not already present.\r\n\r\nArea for change:\r\n\r\nhttps://github.com/openfaas/faas/blob/master/watchdog/main.go#L206\r\n\r\nThis change should also cover https://github.com/openfaas-incubator/of-watchdog\r\n\r\nWork items:\r\n\r\n* First of all - test that the the Cookie is not already transmitted by forcing a header at the gateway\r\n\r\n`curl -H ""Cookie: some-value"" etc....`\r\n\r\n* Update the line mentioned in the watchdog and test with setting the `fprocess` env-var to `env` (you can run this on your host without a container for testing\r\n\r\n* Next update the of-watchdog with the same change and test in the same way\r\n', 'comments': ['Suggested contributors: @johnmccabe @dungeonmaster18 @viveksyngh ', 'Derek add label: area/watchdog', 'I will work on this.', ""@viveksyngh I'd already implemented this last night, pushing PR up now."", 'Just sanity checked this and it appears to be unnecessary. The `Cookie` header, if present, is already resulting in `Http_Cookie` being set in the function env.\r\n\r\nhttps://github.com/openfaas/faas/blob/8f8e337dccb66b3e1dcdc9287e0b037a9937c332/watchdog/main.go#L208-L211\r\n\r\nLikewise in the incubator prototype.\r\n\r\nhttps://github.com/openfaas-incubator/of-watchdog/blob/ab49a4b45520ecd40a782cf7c5b5a3ae4c03d157/main.go#L180-L183', 'Derek close: already implemented']}"
572,architecture: structured logging,https://github.com/openfaas/faas/issues/572,"{'description': 'After reviewing the codebase with @stefanprodan we want to look into options for structured logging for OpenFaaS. Structured logging writes logs in a specific format that can be parsed easily via fluentd or some log aggregator.\r\n\r\nOptions mentioned:\r\n\r\n* *glog* format\r\n* JSON format\r\n* KVP format\r\n\r\nGlog has some questionable design decisions and mixed opinion within the Go community.\r\n\r\nLogrus used by Docker has issues with the vendoring disaster by Sirupsen and causes no end of headaches due to renaming the case.\r\n\r\nStructured logging may allow us to minimize some of the duplication of logged events - i.e.\r\n\r\n* Ingress/Nginx logs access to a function\r\n* The gateway may also log this\r\n* The provider may log this\r\n* The function container may log this\r\n\r\nWe could have 4x the data - and if the execution was 200 OK, it\'s probably pointless collecting the data in 4x log files. In the cloud the effect of 4x logs is expensive. Stefan explained that logging to stderr counts as a critical error on GKE and costs more where as logging to stdout is cheaper. Glog supports redirecting the logs to stdout - Go\'s log package which we use does not.\r\n\r\n We already aggregate Prometheus ""RED"" metrics on function calls, so this may be an adequate replacement for writing logs for success messages.\r\n', 'comments': ['What would this look like in the code? The advantage is that we have 4 times less log duplication, which makes sense. But instead of the gateway+provider collecting the logs, what service is collecting them? Is another container running in the deployment which does all the logging?', 'On Kubernetes you would send the logs to stderr and use a format that Fluentd understands like json or glog. Fluentd will forward the logs to the default could provider storage (Stackdriver, Cloudwatch, etc) or to Elasticsearch if you run on-prem. There is no need for us to ship a log collector on Kubernetes. Docker Swarm comes with several log drivers that will do the same.', ""I've tested several log packages and I would go with [zerolog](https://github.com/rs/zerolog) and json format. \r\n\r\n| Library | Time | Bytes Allocated | Objects Allocated |\r\n| :--- | :---: | :---: | :---: |\r\n| zerolog | 767 ns/op | 552 B/op | 6 allocs/op |\r\n| :zap: zap | 848 ns/op | 704 B/op | 2 allocs/op |\r\n| :zap: zap (sugared) | 1363 ns/op | 1610 B/op | 20 allocs/op |\r\n| go-kit | 3614 ns/op | 2895 B/op | 66 allocs/op |\r\n| lion | 5392 ns/op | 5807 B/op | 63 allocs/op |\r\n| logrus | 5661 ns/op | 6092 B/op | 78 allocs/op |\r\n| apex/log | 15332 ns/op | 3832 B/op | 65 allocs/op |\r\n| log15 | 20657 ns/op | 5632 B/op | 93 allocs/op |\r\n\r\nHere is an example https://github.com/stefanprodan/k8s-podinfo/blob/master/cmd/podinfo/main.go"", ""@ericstoekl I think there are two unrelated items I've represented in the issue.\r\n\r\n* Reducing log verbosity\r\n\r\nLess cost running at high load in the cloud\r\n\r\n* Using structured (machine readable) logs\r\n\r\nLogs can be indexed/searched in a repeatable way.\r\n\r\nErrors for instance can be picked up and used to trigger alerts. \r\n\r\n@stefanprodan are those log numbers your own stats? If not then maybe you can link to where you got the table?\r\n\r\nWhat does the podinfo output look like on the console?"", 'Just chiming in with a datapoint:\r\n\r\nFor our use case (on Kubernetes), simply wrapping the function-emitted log message in JSON and attaching a loglevel has been sufficient; it\'s all that\'s necessary to integrate into our existing log pipelines. It isn\'t amazingly flexible, but it gets the job done.\r\n\r\nFor example, if someone\'s using the http executor and writes to `STDERR`, they get `{""level"": ""ERROR"", ""message:"" ... }` and `STDOUT` gets `{""level"": ""INFO"", ""message"": ...}`. \r\n\r\nFor the case of the streaming executor, where all feedback needs to come across `STDERR`, I\'d toyed around with the idea of expanding the number of available log levels by allowing functions to drop hints to watchdog in the emitted message, but I don\'t know if that\'d do anything other than cause confusion without some sort of function-SDK-level enforcement of message format.\r\n\r\nIn general, though, we don\'t really care about logging anything other than `ERROR`s. Ideally anything that would be logged at `INFO` should be captured as time-series data.\r\n\r\n', '@gkuchta thanks for adding this. You said that you transport your logs over Kafka? Is that with fluentd collecting?', ""@alexellis I've added a link to https://github.com/rs/zerolog You can see the console output and benchmark there."", ""@alexellis that's correct. container -> fluentd -> kafka -> Elastic Search "", 'We touched upon this in the contributors call today. ', '@alexellis , @ericstoekl, @stefanprodan  re:  \r\n> Reducing log verbosity\r\n> Using structured (machine readable) logs\r\n\r\nPerhaps I misunderstand, but I think the discussion conflates *collecting* and *presenting* the log data.\r\nFor *collecting* the log data, we could use [systemd](https://www.freedesktop.org/software/systemd/man/systemd-journald.service.html). It\'s easy to overlook and take for granted, but it\'s likely to be around for a long time and the binary format avoids the character-encoding hilarity that comes with ""text-based"" content. ', 'We want logs to be accessible from `kubectl logs`, `docker logs`, stackdriver, cloudwatch, kibana, datadog etc Using the systemd format would make OpenFaaS a non-cloud-native platform :))', ""I've had good success at work with user-go/zap for structured logs. I've not used zerolog but I don't imagine the differences are significant."", ""Hi @stefanprodan , I think I'm not explaining myself properly. \r\nI agree with your point about accessing the data. \r\nI was referring to recording the data using one of the established libraries like \r\n- https://github.com/coreos/go-systemd \r\n- https://godoc.org/github.com/ssgreg/journald\r\nJust from browsing the source code, I suspect we could promote good logging discipline if we choose a package and some sensible settings."", '/lock: inactivity']}"
573,architecture: watchdog - graceful termination,https://github.com/openfaas/faas/issues/573,"{'description': 'The watchdog could benefit from doing a graceful termination where by it stops accepting new HTTP requests when it gets a SIGTERM from Swarm or Kubernetes.\r\n\r\nExample of an issue reported by Simon (@Templum) during down-scaling of replicas:\r\n\r\nhttps://github.com/openfaas/faas-netes/issues/156\r\n\r\nThis can be implemented via the new HTTP server cancellation in Go 1.9 and onwards: https://golang.org/pkg/net/http/#Server.Shutdown\r\n\r\nNote:\r\n\r\nWindows sends SIGINT twice\r\nLinux sends SIGINT then SIGTERM', 'comments': ['graceful shutdown not working, my pod remove immediately, not wait for shutdowntimeout, why?  \r\nlogs:\r\n\r\n![image](https://user-images.githubusercontent.com/6802322/89444968-1a4b8300-d785-11ea-95a1-d1e5795c4e05.png)\r\n', 'Hi @junneyang I do not believe that a 24-hour grace-period is possible in Kubernetes. You can see how the termination process works here:\r\n\r\nhttps://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/\r\n\r\ncc @LucasRoesler @andeplane \r\n\r\nAlex', '@alexellis  thanks, i made a mistake\r\ni should config preStop hook for kubernetes.']}"
576,load testing optimizations - dns suffix,https://github.com/openfaas/faas/issues/576,"{'description': 'We can avoid a flood of DNS lookups when doing load testing by adding a `.` to the end of DNS entries, but they must specify the full address.\r\n\r\nI\'d suggest doing this first with Kubernetes and then reviewing if it can fit anywhere else too.\r\n\r\nI.e. in the gateway config for Kubernetes:\r\n\r\n```\r\n        - name: functions_provider_url\r\n          value: ""http://faas-netesd.openfaas.svc.cluster.local.:8080/""\r\n```\r\n\r\nThe final `.` period symbol prevents DNS lookups for all the search-domains - of which there are 4-5 by default in Kubernetes. We should also use this when resolving functions:\r\n\r\ni.e.\r\n\r\n```\r\n// Add a final `.` to the host, this makes the DNS query absolute and does not use the search-domain.\r\nurl := forwardReq.ToURL(fmt.Sprintf(""%s.%s.cluster.local."", service, functionNamespace), watchdogPort)\r\n```\r\n\r\n> Suggestion comes from @bboreham at Weaveworks (thank you)\r\n', 'comments': ['@rgee0 do we have this in place across both providers now?', 'ping @rgee0  :smile: ', ""No we don't have it yet.. https://github.com/openfaas/faas/blob/master/docker-compose.yml#L18\r\n\r\nLet's see if we can get an absolute address on Swarm? Check out the docs on Swarm tasks/DNS"", 'Derek close']}"
580,error : manifest for function/faas-swarm:0.2.1 not found,https://github.com/openfaas/faas/issues/580,"{'description': 'The ""0.2.1"" tag used in the default stack (docker-compose.yml) does not exist for the ""function/faas-swarm"" image\r\n\r\n## Expected Behaviour\r\nTesting openfaas stack with ""Try in PWD"" button must deploy the stack in PWD without error\r\n\r\n## Current Behaviour\r\nTesting openfaas stack with ""Try in PWD"" button leads to the following error :\r\n`Error : manifest for functions/faas-swarm:0.2.1 not found`\r\n\r\n## Possible Solution\r\nThe reason is : the tag ""0.2.1"" is missing for the image : https://hub.docker.com/r/functions/faas-swarm/tags/\r\nSolutions : \r\n- add this tag and push the tagged image in dockerhub\r\nor\r\n- change the tag of functions/faas-swarm by an existing tag in docker-compose.yml\r\n\r\n\r\n', 'comments': ['Thanks for noting this. Can you checkout the tag 0.7.3 which is also in the test drive guide?', ""Master also contains 0.2.2 which is a valid existing tag if you'd like to repull?"", 'Moved to 0.2.2 tag to fix this. Thank you for reporting. ', 'Sorry for the delay, I was not able to test the new tag before. Thank you for the fix !']}"
582,port rpi / armhf dockerfile for latest alertmanager rc,https://github.com/openfaas/faas/issues/582,"{'description': 'We need AlertManager to be ported over to the contrib folder where we have ARM build files for Prometheus 2.0 / 2.2 etc already in place.\r\n\r\nPlease use this as a basis for the build:\r\n\r\nhttps://github.com/alexellis/docker-arm/tree/master/images/armhf/alertmanager\r\n\r\nIf you have access to a Raspberry Pi that will help a lot otherwise provision a node on Scaleway for a couple of hours to test your build.\r\n\r\n## Task\r\n\r\n* [ ] Port Dockerfile to latest AlertManager as per https://github.com/openfaas/faas/blob/master/docker-compose.yml#L134\r\n* [ ] Build and test that alert manager functions\r\n* [ ] Ping me to build/push a new manual ARM image via the project account\r\n', 'comments': [""I'll have a look at this.\r\n\r\nI'll add the label to the network as part of this too."", 'I appreciate it. Our Kubernetes config is broken right now on ARM. Do you have an ETA?']}"
586,can't delete function from the ui in play with docker.,https://github.com/openfaas/faas/issues/586,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nWhen you delete a function it disappears from the UI and the CLI.\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nI can delete a function using the CLI but not with the UI.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Follow the steps in TestDrive.md\r\n2. Try to delete a function from the UI..\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n# Note: this was done on play with docker.\r\n\r\n"", 'comments': [""Thanks for reporting that. I'm not aware of any issues but will take a look. "", 'Derek add label: question', 'Following the PWD directions in `testdrive.md` I have been able to delete sample functions and functions deployed from the store.  \r\n\r\nCan you provide further details on how you were using the CLI. Ideally the steps to reproduce via the CLI.', 'I can delete functions via the CLI using faas/faas-cli remove ...\r\n\r\nWith the web UI the popup box asking if you really want to delete the function pops up but when you click OK nothing happens.\r\nI am using Google Chrome version 64', '#### This is the html of the OK button. It looks as if clicking it just hides the dialog box, but I could be totally wrong.\r\n<button class=""md-primary md-confirm-button md-button md-ink-ripple md-default-theme"" type=""button"" ng-transclude="""" **ng-click=""dialog.hide()**"" md-autofocus=""dialog.$type===\'alert\'""><span class=""ng-binding ng-scope"">OK</span><div class=""md-ripple-container"" style=""""></div></button>', ""I'm interested in the CLI in case you are deploying the function that you cannot delete in this way.  With the steps we can try to replicate and understand your question better.  \r\n\r\nWhen using the UI:\r\n\r\nWhat actually happens when you click the OK button? \r\n- Does it go away?  \r\n- Do you get the success toaster?  \r\n\r\nIn the Network tab of dev tools do you see a DELETE request being made?  \r\n- Does the request have a request payload?  \r\n- What is in the payload?\r\n\r\nThis is how its performing for me on PWD:\r\n\r\n![store_delete](https://user-images.githubusercontent.com/16418793/37554832-36befd6e-29d6-11e8-8250-d3e34c67e347.gif)"", 'The Box goes away\r\nand I havent looked for the delete request', ""@Rillian-Grant we ask for the issue template to be filled out **for a reason** - it gives us the context we need to reproduce the problem. You don't say if you're using Windows, Linux or Mac for your client.\r\n\r\nI have Chrome version Version 65.0.3325.162 (Official Build) (64-bit) on my Mac. \r\n\r\nDelete works fine via PWD - same with 0.7.3.\r\n\r\nHere's an idea - clear your browser cache and / or update your browser.\r\n"", ""We're unable to reproduce the issue. Please try the steps we mentioned above."", 'OK thank you for your help. I can do it from the cli until I update my browser.']}"
607,"test gofmt in the dockerfile fails ""on my machine"".",https://github.com/openfaas/faas/issues/607,"{'description': 'Just as an disclamer, I\'m new to openfaas and go, so a user error might be the obvious issue here. \r\nI got started with the workshop and got a bit cocky and switched from ruby, which i also don\'t know much about to go because I\'m interessed in go. I\'m java developer by breed.\r\n## Environment\r\nThe environment is a windows 10 laptop, openfaas is running on a azure virtual machine created with the docker-machine shipped with docker toolbox for windows. The azure/openfaas env was installed a couple of days ago just for this test case. swarm is enabled, just the master one, no worker, docker 18.02.0-ce. docker-compose 1.16.1. openfaas version 0.6.4. \r\n## context\r\nWhen creating the template for go everything worked like a charme. Got my template and just changed the sprintf to make sure i can identify it later. manual compile works fine. running the faas build failed because of line 13 in the dockerfile for the go template. ( RUN test -z ""$(gofmt -l $(find . -type f -name \'*.go\' -not -path ""./vendor/*"" -not -path ""./function/vendor/*""))"" || { echo ""Run \\""gofmt -s -w\\"" on your Golang code""; exit 1; } ) \r\nAs mentioned in the error message, i ran gofmt -s -w quite a couple of times. Here i might have failed for some reason. Maybe i didn\'t know what I\'m doing :) However, removing the line in the dockerfile and everything is working fine. I checked the encoding, it is the same. But while writing i got aware of one difference, the original handler.go is using crlf, the new one only the windows style lf. Not sure if this scared of the test. \r\n\r\n\r\n## Expected Behaviour\r\nline 13 accepts the code.\r\n\r\n## Current Behaviour\r\nline 13 throws an error indicating to run gofmt again. \r\n\r\n## Possible Solution\r\n*shrug*\r\n\r\nattached the modified handler.go file i editied based on your template. \r\n[handler.zip](https://github.com/openfaas/faas/files/1844831/handler.zip)\r\n\r\n\r\n\r\nI\'m happy to provide more details if needed. The image created without the test is on docker hub, but i guess it\'s not very helpful as it works fine. \r\n\r\n', 'comments': ['think i added the wrong handler file the first time (the template, not the edited one).', 'Tried to replace the lf with crlf, test blamed me to run gofmt, which turned them back into LF. So no luck with the line endings.', 'That handler works fine for me on Windows 10. The line-endings are supposed to be LF (Unix) and not CRLF (Windows) so that attached zip looks OK.\r\n\r\nCan you zip up your functions build directory and also paste the output from the command line here. Its kinda hard to tell exactly whats going on for you here.\r\n\r\n```\r\nPS D:\\Workspaces\\go\\src\\github.com\\openfaas\\faas\\delme> cat .\\whatsup\\handler.go\r\npackage function\r\n\r\nimport (\r\n        ""fmt""\r\n)\r\n\r\n// Handle a serverless request\r\nfunc Handle(req []byte) string {\r\n        return fmt.Sprintf(""Boys who Go. You said: %s"", string(req))\r\n}\r\nPS D:\\Workspaces\\go\\src\\github.com\\openfaas\\faas\\delme> faas-cli.exe build -f .\\whatsup.yml\r\n[0] > Building: whatsup.\r\nClearing temporary build folder: ./build/whatsup/\r\nPreparing ./whatsup/ ./build/whatsup/function\r\nBuilding: whatsup with go template. Please wait..\r\nSending build context to Docker daemon  6.656kB\r\nStep 1/17 : FROM golang:1.8.3-alpine3.6 as builder\r\n ---> fd1ada53b403\r\nStep 2/17 : RUN apk --no-cache add curl     && echo ""Pulling watchdog binary from Github.""     && curl -sSL https://github.com/openfaas/faas/releases/download/0.7.6/fwatchdog > /usr/bin/fwatchdog     && chmod +x /usr/bin/fwatchdog     && apk del curl --no-cache\r\n ---> Using cache\r\n ---> f6a62e8ff731\r\nStep 3/17 : WORKDIR /go/src/handler\r\n ---> Using cache\r\n ---> 34d04ca11229\r\nStep 4/17 : COPY . .\r\n ---> ab0cae2d39f7\r\nStep 5/17 : RUN test -z ""$(gofmt -l $(find . -type f -name \'*.go\' -not -path ""./vendor/*"" -not -path ""./function/vendor/*""))"" || { echo ""Run \\""gofmt\r\n-s -w\\"" on your Golang code""; exit 1; }\r\n ---> Running in 644c802f2734\r\nRemoving intermediate container 644c802f2734\r\n ---> 5286a6e7d0e5\r\nStep 6/17 : RUN CGO_ENABLED=0 GOOS=linux     go build --ldflags ""-s -w"" -a -installsuffix cgo -o handler . &&     go test $(go list ./... | grep -v /vendor/) -cover\r\n ---> Running in 996572cd1af7\r\n?       handler [no test files]\r\n?       handler/function        [no test files]\r\nRemoving intermediate container 996572cd1af7\r\n ---> 40efc921a286\r\nStep 7/17 : FROM alpine:3.6\r\n ---> 77144d8c6bdc\r\nStep 8/17 : RUN apk --no-cache add ca-certificates\r\n ---> Using cache\r\n ---> 9411bc373d5b\r\nStep 9/17 : RUN addgroup -S app && adduser -S -g app app\r\n ---> Using cache\r\n ---> 562e322b14d7\r\nStep 10/17 : RUN mkdir -p /home/app\r\n ---> Using cache\r\n ---> de051c74e6a9\r\nStep 11/17 : RUN chown app /home/app\r\n ---> Using cache\r\n ---> 136f9a9c63b8\r\nStep 12/17 : WORKDIR /home/app\r\n ---> Using cache\r\n ---> c4be1dad1225\r\nStep 13/17 : COPY --from=builder /go/src/handler/handler    .\r\n ---> 412c5496672b\r\nStep 14/17 : COPY --from=builder /usr/bin/fwatchdog         .\r\n ---> e563250ce87f\r\nStep 15/17 : USER app\r\n ---> Running in d27a34832b40\r\nRemoving intermediate container d27a34832b40\r\n ---> 8b569da8a320\r\nStep 16/17 : ENV fprocess=""./handler""\r\n ---> Running in ecf6caba036b\r\nRemoving intermediate container ecf6caba036b\r\n ---> f7d395e215cf\r\nStep 17/17 : CMD [""./fwatchdog""]\r\n ---> Running in d94f09fe4fe2\r\nRemoving intermediate container d94f09fe4fe2\r\n ---> 740d67f53d99\r\nSuccessfully built 740d67f53d99\r\nSuccessfully tagged whatsup:latest\r\nSECURITY WARNING: You are building a Docker image from Windows against a non-Windows Docker host. All files and directories added to build context will have \'-rwxr-xr-x\' permissions. It is recommended to double check and reset permissions for sensitive files and directories.\r\nImage: whatsup built.\r\n[0] < Builder done.\r\n```', 'Can you also just confirm that the function built successfully (`faas-cli.exe build` rather than `go build`) before you changed the handler?', 'Thats the build directory:\r\n[hello-go.zip](https://github.com/openfaas/faas/files/1845128/hello-go.zip)\r\nand the matching output\r\n```\r\n$ faas build -f hello-go.yml\r\n[0] > Building hello-go.\r\nClearing temporary build folder: ./build/hello-go/\r\nPreparing ./hello-go/ ./build/hello-go/function\r\nBuilding: sdadmin/hello-go with go template. Please wait..\r\nSending build context to Docker daemon  6.656kB\r\nStep 1/17 : FROM golang:1.8.3-alpine3.6 as builder\r\n ---> fd1ada53b403\r\nStep 2/17 : RUN apk --no-cache add curl     && echo ""Pulling watchdog binary from Github.""     && curl -sSL https://github.com/openfaas/faas/releases/download/0.7.6/fwatchdog > /usr/bin/fwatchdog     && chmod +x /usr/bin/fwatchdog     && apk del curl --no-cache\r\n ---> Using cache\r\n ---> 30467ae1d6b0\r\nStep 3/17 : WORKDIR /go/src/handler\r\n ---> Using cache\r\n ---> ad4b7b55e4ea\r\nStep 4/17 : COPY . .\r\n ---> 59251457c26a\r\nStep 5/17 : RUN test -z ""$(gofmt -l $(find . -type f -name \'*.go\' -not -path ""./vendor/*"" -not -path ""./function/vendor/*""))"" || { echo ""Run \\""gofmt -s -w\\"" on your Golang code""; exit 1; }\r\n ---> Running in b32453aafcca\r\nRun ""gofmt -s -w"" on your Golang code\r\nThe command \'/bin/sh -c test -z ""$(gofmt -l $(find . -type f -name \'*.go\' -not -path ""./vendor/*"" -not -path ""./function/vendor/*""))"" || { echo ""Run \\""gofmt -s -w\\"" on your Golang code""; exit 1; }\' returned a non-zero code: 1\r\n2018/03/25 10:35:56 ERROR - Could not execute command: [docker build -t sdadmin/hello-go .]\r\n\r\nGEsch@SDHAMW064 MINGW64 /c/workspace/openfaas/faas (0.7.3)\r\n$  faas-cli.exe build -f hello-go.yml\r\n[0] > Building hello-go.\r\nClearing temporary build folder: ./build/hello-go/\r\nPreparing ./hello-go/ ./build/hello-go/function\r\nBuilding: sdadmin/hello-go with go template. Please wait..\r\nSending build context to Docker daemon  6.656kB\r\nStep 1/17 : FROM golang:1.8.3-alpine3.6 as builder\r\n ---> fd1ada53b403\r\nStep 2/17 : RUN apk --no-cache add curl     && echo ""Pulling watchdog binary from Github.""     && curl -sSL https://github.com/openfaas/faas/releases/download/0.7.6/fwatchdog > /usr/bin/fwatchdog     && chmod +x /usr/bin/fwatchdog     && apk del curl --no-cache\r\n ---> Using cache\r\n ---> 30467ae1d6b0\r\nStep 3/17 : WORKDIR /go/src/handler\r\n ---> Using cache\r\n ---> ad4b7b55e4ea\r\nStep 4/17 : COPY . .\r\n ---> Using cache\r\n ---> 59251457c26a\r\nStep 5/17 : RUN test -z ""$(gofmt -l $(find . -type f -name \'*.go\' -not -path ""./vendor/*"" -not -path ""./function/vendor/*""))"" || { echo ""Run \\""gofmt -s -w\\"" on your Golang code""; exit 1; }\r\n ---> Running in 4847a6a748c2\r\nRun ""gofmt -s -w"" on your Golang code\r\nThe command \'/bin/sh -c test -z ""$(gofmt -l $(find . -type f -name \'*.go\' -not -path ""./vendor/*"" -not -path ""./function/vendor/*""))"" || { echo ""Run \\""gofmt -s -w\\"" on your Golang code""; exit 1; }\' returned a non-zero code: 1\r\n2018/03/25 10:40:54 ERROR - Could not execute command: [docker build -t sdadmin/hello-go .]:\r\n```\r\nnot sure if this preserves the line endings properly, but just for reference:\r\n```\r\nGEsch@SDHAMW064 MINGW64 /c/workspace/openfaas/faas (0.7.3)\r\n$ cat ./hello-go/handler.go\r\npackage function\r\n\r\nimport (\r\n        ""fmt""\r\n)\r\n\r\n// Handle a serverless request\r\nfunc Handle(req []byte) string {\r\n        return fmt.Sprintf(""Boys who Go. You said: %s"", string(req))\r\n}\r\n```', ""@gesch the line endings in `main.go` are `CRLF`, the test step is searching for all go files and its actually this which is resulting in the output you're seeing.\r\n\r\nFor reference, what editor are you using, and if you're committing this to a local git repo is it configured it to automatically change line endings (`git config core.autocrlf`)?"", ""This solved the issue, i didn't check the unchanged files provided by the template. Sorry for bothering you :)"", '@gesch which editor are you using?\r\n\r\nJohn - thank you for the support with this issue. ', '@alexellis using latest version of visual studio code, which is good and bad at the same time. The editor fixes the encoding automatically for all edited files. But this way i was not aware of the issue at all for the other files cloned from the repository.', '@gesch what is the status of this issue?\r\n\r\nAre you using a work-around that needs to be documented or is this resolved?', 'Hi Alex,\n\nSorry if if I missed something here. The quick chat in slack solved my problem immediately. The ticket is closed and I guessed that\'s the final state. I\'m not aware of all the steps in your workflow :)\n\nBest regards and thanks for your help,\n\nGuido\n________________________________\nFrom: Alex Ellis <notifications@github.com>\nSent: Monday, April 16, 2018 11:48:05 PM\nTo: openfaas/faas\nCc: Esch, Guido; Mention\nSubject: Re: [openfaas/faas] test gofmt in the dockerfile fails ""on my machine"". (#607)\n\n\n@gesch<https://github.com/gesch> what is the status of this issue?\n\nAre you using a work-around that needs to be documented or is this resolved?\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/openfaas/faas/issues/607#issuecomment-381760904>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AGkI4dASX-V-hM_XDlJIeI1SCnB0zTsdks5tpRGVgaJpZM4S56Xb>.\n', 'What did you learn from the chat in Slack that resolved this for you? ', 'a) windows is not suitable for go development\r\nb) changing git config parameters solved the problem in the short term. However this will break other projects. I will create a couple .gitattributes for my own git repository to make sure, go line endings stay LF as they should. Not sure if this attributes are usable for the openfaas repo.']}"
609,push docker images to quay as well as to dockerhub,https://github.com/openfaas/faas/issues/609,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nWe would like to have an additional option for Docker registry in case DockerHub support is dropped.\r\nPlease find here the [Quay Documentation](https://www.google.bg/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjq3tXwvYnaAhUkIJoKHc_HDZ8QFggnMAA&url=https%3A%2F%2Fdocs.quay.io%2Fsolution%2Fgetting-started.html&usg=AOvVaw32taSpoVDZnr4Ak6jjFQ1d)\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n`faas push -f func.yml` should push images to DockerHub or Quay based on the image prefix.\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n`faas push -f func.yml` pushes the docker image to one's DockerHub account\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nAdd something like `sudo docker push quay.io/namespace/repository:tag` to [pushImage](https://github.com/openfaas/faas-cli/blob/e81362363338afde4ca84a4568f728ede7406fb7/commands/push.go#L72)()\r\nCheck `imagePrefix` as well.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\nNot a bug\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': ['Derek add label: proposal', ""I think I didn't explain the intent of this very well.\r\n\r\nThe idea was to push the images during CI to both Docker Hub and Quay.io - it needs some PRs to the Travis YAML file for all the main repositories. ""]}"
621,unexpected output from python 3 function,https://github.com/openfaas/faas/issues/621,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nI\'ve deployed the following function to OpenFaaS via Docker Swarm and faas-cli: https://github.com/blaskovicz/rmb-to-usd.  After using it for a few days on and off via [my website](https://www.carlyzach.com/functions/rmb-to-usd), I noticed that it was no longer responding correctly.\r\n \r\nAfter looking at the service in `docker service ps` it seemed to be up; upon scaling it down to 0 and then back up to 1, it started responding with the correct output. I was wondering if you could help provide any insight into what went wrong? \r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nThe function should respond with a JSON body:\r\n```sh\r\n$ echo ""hi"" | faas-cli invoke rmb-to-usd -                                                                                                                   \r\n{""id"": ""unprocessable_entity"", ""message"": ""the request body was malformed""}\r\n```\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nFrom the `faas-cli`, I receive something strange, statistics output, perhaps?\r\n```sh\r\n$ echo ""hi"" | faas-cli invoke rmb-to-usd                                                                                                                        \r\n        1         1         3\r\n```\r\n\r\nFrom a POST to the function via the gateway, I got a similar response body:\r\n```\r\n        0         1        24\r\n```\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nAfter restarting the function (`docker service scale rmb-to-usd=0 && docker service scale rmb-to-usd=1`), the function again began to service requests correctly.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```sh\r\n$ docker version\r\nClient:\r\n Version:      17.09.0-ce\r\n API version:  1.32\r\n Go version:   go1.8.3\r\n Git commit:   afdb6d4\r\n Built:        Tue Sep 26 22:42:18 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      17.09.0-ce\r\n API version:  1.32 (minimum version 1.12)\r\n Go version:   go1.8.3\r\n Git commit:   afdb6d4\r\n Built:        Tue Sep 26 22:40:56 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm.\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nUbuntu 16.04 LTS\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n   * Code: https://github.com/blaskovicz/rmb-to-usd\r\n   * Site: https://www.carlyzach.com/functions/rmb-to-usd\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\nState before function restart:\r\n```sh\r\n$ docker service ps rmb-to-usd \r\nID                  NAME                IMAGE                              NODE                DESIRED STATE       CURRENT STATE         ERROR                              PORTS\r\nu2cn200qd014        rmb-to-usd.1        127.0.0.1:5000/rmb-to-usd:latest   z      Running             Running 3 days ago                                       \r\naxrzewhs2dip         \\_ rmb-to-usd.1    127.0.0.1:5000/rmb-to-usd:latest   z      Shutdown            Failed 3 days ago     ""starting container failed: No…""   \r\npety5payl7l0         \\_ rmb-to-usd.1    127.0.0.1:5000/rmb-to-usd:latest   z      Shutdown            Failed 3 days ago     ""No such container: rmb-to-usd…""   \r\n9muw046ek71y         \\_ rmb-to-usd.1    127.0.0.1:5000/rmb-to-usd:latest   z      Shutdown            Failed 3 days ago     ""No such container: rmb-to-usd…""   \r\n4n09olyall8m         \\_ rmb-to-usd.1    127.0.0.1:5000/rmb-to-usd:latest   z      Shutdown            Shutdown 3 days ago                                      \r\niw6kv16pb137         \\_ rmb-to-usd.1    127.0.0.1:5000/rmb-to-usd:latest   z      Shutdown            Shutdown 3 days ago                                      \r\n```\r\n', 'comments': [""This is something I definitely haven't seen/experienced.  The unexpected output looks like the output from the `func_wordcount` sample function.\r\n\r\nWhat happened 3 days ago? What are those failed state error messages alluding to?\r\n\r\nDo the gateway logs still hold the info about the requests that returned the unexpected output?\r\n\r\nIs this a isolated occurrence or are you able to reproduce it?\r\n"", 'Derek set title: Unexpected output from Python 3 function ', '3 days ago I did reboot the underlying system, but my other functions, [playground-golang](https://github.com/blaskovicz/playground-golang) and `func_markdown` rebooted and had no issues:\r\n\r\n```sh\r\n$ uptime\r\n 10:49:05 up 3 days, 12:39,  2 users,  load average: 1.17, 1.03, 0.90\r\n```\r\n\r\n```\r\n$ zgrep  rmb-to-usd /var/log/syslog*\r\n/var/log/syslog:Apr  1 09:42:43 z dockerd[1786]: time=""2018-04-01T09:42:43.268514345-04:00"" level=error msg=""logs call failed"" error=""failed getting container logs: No such container: rmb-to-usd.1.axrzewhs2dipfzzjqj64tm85i"" module=""node/agent/taskmanager"" node.id=75e271bvg2t57wusmqn0groyo\r\n/var/log/syslog:Apr  1 09:44:24 z dockerd[1786]: time=""2018-04-01T09:44:24.068673333-04:00"" level=warning msg=""failed to deactivate service binding for container rmb-to-usd.1.4n09olyall8mdkjt57osqz44t"" error=""No such container: rmb-to-usd.1.4n09olyall8mdkjt57osqz44t"" module=""node/agent"" node.id=75e271bvg2t57wusmqn0groyo\r\n/var/log/syslog:Apr  1 09:44:24 z dockerd[1786]: time=""2018-04-01T09:44:24.069180207-04:00"" level=warning msg=""failed to deactivate service binding for container rmb-to-usd.1.9muw046ek71y9lrur75o5cwxb"" error=""No such container: rmb-to-usd.1.9muw046ek71y9lrur75o5cwxb"" module=""node/agent"" node.id=75e271bvg2t57wusmqn0groyo\r\n/var/log/syslog:Apr  1 09:44:24 z dockerd[1786]: time=""2018-04-01T09:44:24.069409689-04:00"" level=warning msg=""failed to deactivate service binding for container rmb-to-usd.1.axrzewhs2dipfzzjqj64tm85i"" error=""No such container: rmb-to-usd.1.axrzewhs2dipfzzjqj64tm85i"" module=""node/agent"" node.id=75e271bvg2t57wusmqn0groyo\r\n/var/log/syslog:Apr  1 09:44:24 z dockerd[1786]: time=""2018-04-01T09:44:24.069590364-04:00"" level=warning msg=""failed to deactivate service binding for container rmb-to-usd.1.iw6kv16pb137gthuysb3r5mh3"" error=""No such container: rmb-to-usd.1.iw6kv16pb137gthuysb3r5mh3"" module=""node/agent"" node.id=75e271bvg2t57wusmqn0groyo\r\n/var/log/syslog:Apr  1 09:44:24 z dockerd[1786]: time=""2018-04-01T09:44:24.069815663-04:00"" level=warning msg=""failed to deactivate service binding for container rmb-to-usd.1.pety5payl7l044vvvfrsxz02o"" error=""No such container: rmb-to-usd.1.pety5payl7l044vvvfrsxz02o"" module=""node/agent"" node.id=75e271bvg2t57wusmqn0groyo\r\n/var/log/syslog.4.gz:Mar 28 21:43:15 z dockerd[1580]: time=""2018-03-28T21:43:15.056693057-04:00"" level=error msg=""fatal task error"" error=""No such container: rmb-to-usd.1.9muw046ek71y9lrur75o5cwxb"" module=""node/agent/taskmanager"" node.id=75e271bvg2t57wusmqn0groyo service.id=chk4e56wfhi2zq7rmgumbryc7 task.id=9muw046ek71y9lrur75o5cwxb\r\n/var/log/syslog.4.gz:Mar 28 22:10:15 z dockerd[1786]: time=""2018-03-28T22:10:15.038716739-04:00"" level=error msg=""fatal task error"" error=""No such container: rmb-to-usd.1.pety5payl7l044vvvfrsxz02o"" module=""node/agent/taskmanager"" node.id=75e271bvg2t57wusmqn0groyo service.id=chk4e56wfhi2zq7rmgumbryc7 task.id=pety5payl7l044vvvfrsxz02o\r\n/var/log/syslog.4.gz:Mar 28 22:10:20 z dockerd[1786]: time=""2018-03-28T22:10:20.679675495-04:00"" level=warning msg=""failed to deactivate service binding for container rmb-to-usd.1.1w21v41dk3pu6agto8nmkvkmf"" error=""No such container: rmb-to-usd.1.1w21v41dk3pu6agto8nmkvkmf"" module=""node/agent"" node.id=75e271bvg2t57wusmqn0groyo\r\n/var/log/syslog.4.gz:Mar 28 22:10:31 z dockerd[1786]: time=""2018-03-28T22:10:31.852767657-04:00"" level=warning msg=""failed to deactivate service binding for container rmb-to-usd.1.2ekqeqj35a8577s4jqx2fk5u5"" error=""No such container: rmb-to-usd.1.2ekqeqj35a8577s4jqx2fk5u5"" module=""node/agent"" node.id=75e271bvg2t57wusmqn0groyo\r\n```\r\n\r\nThe gateway logs don\'t show anything useful, they seem to be the same for yesterday (non-working) and today (working after restart):\r\n```sh\r\n$  docker service logs func_gateway\r\nfunc_gateway.1.kk78rwblgk3z@z    | 2018/03/31 21:29:37 > Forwarding [POST] to /function/rmb-to-usd\r\nfunc_gateway.1.kk78rwblgk3z@z    | 2018/03/31 21:29:37 GetHeaderCode 200\r\nfunc_gateway.1.kk78rwblgk3z@z    | 2018/03/31 21:29:37 < [http://faas-swarm:8080/function/rmb-to-usd] - 200 took 0.018241 seconds\r\nfunc_gateway.1.kk78rwblgk3z@z    | 2018/04/01 02:29:06 > Forwarding [POST] to /function/rmb-to-usd\r\nfunc_gateway.1.kk78rwblgk3z@z    | 2018/04/01 02:29:06 GetHeaderCode 200\r\nfunc_gateway.1.kk78rwblgk3z@z    | 2018/04/01 02:29:06 < [http://faas-swarm:8080/function/rmb-to-usd] - 200 took 0.004942 seconds\r\n```', 'Thanks for the further info.\r\n\r\nDo you know if the unexpected output was extant for the full period from 3 days ago until the `service scale` activity today?  Or was the function confirmed as working following your reboot and switched to unexpected output some time later?  If the latter what time would that be?\r\n\r\nMy suspicion (and its no more than that currently) is that this could relate to a Docker feature which has been fixed in later versions.  Would pulling Docker up to something more recent be a possibility?', ""@rgee0 I didn't test the function immediately following the host reboot, but I would assume it was broken after that time up until I `docker service scale`d.\r\n\r\nI could try updating docker. Seeing as 17.09 isn't that old, what issue do you think is causing this?\r\n\r\nhttps://docs.docker.com/release-notes/docker-ce/#17091-ce-2017-12-07"", ""Whats concerning me is that your invocation seems to be hitting a totally separate function.  This could be that the wordcount image has been tagged as your rmb image (unlikely and wouldn't be fixed by a scale operation), or that the service definitions contain stale information, or something else that I'm yet to consider/uncover.\r\n\r\nAlthough this is the first time I've seen this reported on OpenFaaS, I have seen issues with Docker, which are said to be fixed in 17.12 and greater, where the services would have issues with IP addresses.  My supposition at this stage is that when the rmb service came back up following the reboot it was provided an IP address which was being used by wordcount, or that the rmb service information was stale and wordcount was allocated the IP address that was in the stale rmb information.  \r\n\r\nOf course its difficult to fully diagnose & test the cause, and test the fix via github issues so there's a bit of a leap here.  We could try rebooting your host again to see if the issue can be reproduced - this could possibly impact a different set of services that we could then interrogate with `service inspect`.  Alternatively we might fail to reproduce.\r\n\r\nOut of interest, are those invoke commands in the initial comment copy and pasted? How are you hitting the gateway on a bespoke port without supplying `-g`?  Also, to save me making further assumptions could we get a view of your `docker service ls` output, please?"", ""My guess is that this is either an issue with the Docker version you're using or that your Docker registry container wasn't started when you rebooted the machine.\r\n\r\nDid you run your local registry with a --restart=always flag?\r\n\r\nI can see from the output from docker service ps that you have had some issues with your local registry.\r\n\r\nI'd be inclined to close this issue - it doesn't appear to be reproducible, but if you do come up with clear steps for reproducing the problem let us know and we can look into it."", 'I can see it being related to the registry being flaky. Earlier today I noticed it was in a bad state and had to scale it to 0 then back up to 1.\r\n\r\n```\r\n$ docker service inspect --pretty registry                                                                                                         \r\n\r\nID:             u45blt5vyvhke12qvppt0qob2\r\nName:           registry\r\nService Mode:   Replicated\r\n Replicas:      1\r\nPlacement:\r\nUpdateConfig:\r\n Parallelism:   1\r\n On failure:    pause\r\n Monitoring Period: 5s\r\n Max failure ratio: 0\r\n Update order:      stop-first\r\nRollbackConfig:\r\n Parallelism:   1\r\n On failure:    pause\r\n Monitoring Period: 5s\r\n Max failure ratio: 0\r\n Rollback order:    stop-first\r\nContainerSpec:\r\n Image:         registry:2@sha256:672d519d7fd7bbc7a448d17956ebeefe225d5eb27509d8dc5ce67ecb4a0bce54\r\nResources:\r\nEndpoint Mode:  vip\r\nPorts:\r\n PublishedPort = 5000\r\n  Protocol = tcp\r\n  TargetPort = 5000\r\n  PublishMode = ingress\r\n```\r\n\r\nI think when I originally deployed openfaas, I changed the default published port:\r\n\r\n```\r\n--- a/docker-compose.yml\r\n+++ b/docker-compose.yml\r\n@@ -2,7 +2,7 @@ version: ""3.3""\r\n services:\r\n     gateway:\r\n         ports:\r\n-            - 8080:8080\r\n+            - 8082:8080\r\n```\r\n\r\nService list:\r\n```\r\n$ docker service ls\r\n9u4pxjv4m6cl        func_alertmanager                    replicated          1/1                 prom/alertmanager:v0.15.0-rc.0                     \r\nqavk0a348lvn        func_base64                          replicated          1/1                 functions/alpine:latest                            \r\n6iru17vgguf0        func_echoit                          replicated          1/1                 functions/alpine:latest                            \r\n6lfj66ylje8l        func_faas-swarm                      replicated          1/1                 functions/faas-swarm:0.2.2                         \r\nwf9zw1g9lukb        func_gateway                         replicated          1/1                 functions/gateway:0.7.3                            *:8082->8080/tcp\r\nhen7ixpduf7l        func_hubstats                        replicated          1/1                 functions/hubstats:latest                          \r\nxby7mtg5i0qi        func_markdown                        replicated          1/1                 functions/markdown-render:latest                   \r\nm3judmv4evz2        func_nats                            replicated          1/1                 nats-streaming:0.6.0                               \r\nj1s8klbyfv8c        func_nodeinfo                        replicated          1/1                 functions/nodeinfo:latest                          \r\njoujjdk2awoz        func_prometheus                      replicated          1/1                 prom/prometheus:v2.2.0                             *:8083->9090/tcp\r\nviq7fr588o40        func_queue-worker                    replicated          1/1                 functions/queue-worker:0.4                         \r\ni5eadsxd7xqn        func_wordcount                       replicated          1/1                 functions/alpine:latest                            \r\ngunbgjl4qfp6        playground-golang                    replicated          1/1                 127.0.0.1:5000/playground-golang:latest            \r\nu45blt5vyvhk        registry                             replicated          1/1                 registry:2                                         *:5000->5000/tcp\r\n```\r\n', 'I’m going to close the issue. Please comment again if needed. ']}"
633,issues with function chaining following function director pattern,https://github.com/openfaas/faas/issues/633,"{'description': ""## Current Behaviour\r\nI am trying out OpenFaas and having issues chaining/composing functions following the [function director pattern](https://github.com/openfaas/faas/blob/master/guide/chaining_functions.md#function-director-pattern). However, I can pipe output of one function to another using `curl`.\r\n\r\nI am trying to accomplish the following - \r\n* `world` function returns the text 'world'\r\n* `hello` function take text as input and return 'hello _text_' as output\r\n* `helloworld` chains the two functions above by taking the output of `world` as input for `hello` and outputs 'Hello world'\r\n\r\nFunction piping works from the command line by piping the following commands - \r\n```bash\r\n$ curl -s http://127.0.0.1:8080/function/world | curl -sX POST http://127.0.0.1:8080/function/hello --data @-\r\nHello world\r\n```\r\n\r\nHowever, chaining the functions following the [function director pattern](https://github.com/openfaas/faas/blob/master/guide/chaining_functions.md#function-director-pattern) does not seem to work. The function seems to _hang_ and CPU utilization of docker goes up drastically.\r\n\r\nCan someone please suggest what I may be doing wrong?\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nDocker version 18.03.0-ce, build 0520e24\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nSwarm\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nmacOS 10.12.6\r\n* Link to your project or a code example to reproduce issue:\r\nhttps://github.com/satie/helloworld-faas\r\n"", 'comments': ['Hi I took a quick look at the code and noticed that it looked quite complicated. I wonder if you could try using the request.js npm module in your example?\r\n\r\nI suspect that something like a missing callback or event in the example may be causing the issue.\r\n\r\nAlex', 'Replaced the http calls with request.js.\r\n\r\nThanks.', ""I'm pretty sure I can see the issue now. You are referring to `localhost` from within a Docker container... that will not do what you're expecting. I think it may be calling the function recursively.\r\n\r\nCheck this line:\r\nhttps://github.com/satie/helloworld-faas/blob/master/helloworld/handler.js#L6\r\n\r\nYou should use `gateway` or `gateway.openfaas` not `localhost`. Please try it again and let me know.\r\n\r\nSee also the workshop which I think may cover this - https://github.com/openfaas/workshop\r\n\r\nPS: I checked the linked document and it does say to use `gateway`- https://github.com/openfaas/faas/blob/master/guide/chaining_functions.md#function-director-pattern"", 'That seems to have done the trick. Thanks for pointing that out. I kind of thought that `gateway` was suggested more on general terms. ', '@alexellis In OpenFaas is this the equivalent of Apache OpenWhisk Action Sequence?']}"
634,function with custom response for twilio,https://github.com/openfaas/faas/issues/634,"{'description': 'I\'m working on an OpenFaaS function that accepts webhook requests from Twilio based on incoming text messages. The standard Twilio response is packaged as XML, so the encoded message must be ""text/xml"" The current Python template just responds as text and thus creates an error in Twilio. \r\n\r\nIn my ```handler.py``` I am using print or return, but they result in an error within Twilio. \r\n\r\n## Expected Behaviour\r\nI want a way in the Python function to format the response contentType to ""text/xml"" \r\n\r\n## Current Behaviour\r\nIt looks like the response contentType is ""application/x-www-form-urlencoded"" The messages look like this: ```<?xml version=""1.0"" encoding=""UTF-8""?><Response><Message>Ahoy! Thanks so much for your message.</Message></Response>```\r\n\r\n## Possible Solution\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\nI created my function using the steps here: https://docs.openfaas.com/tutorials/first-python-function \r\n\r\nThe Twilio details are here: https://www.twilio.com/docs/sms/quickstart/python \r\n\r\n## Context\r\n\r\n\r\n## Your Environment\r\nOpenFaas on AKS\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOS \r\n\r\n* My handler.py code looks like this: \r\n\r\n```\r\nimport requests\r\nimport json\r\nfrom log import Log\r\nfrom twilio.twiml.messaging_response import MessagingResponse\r\n\r\ndef handle(req):\r\n    log = Log()\r\n\r\n   # Add code here to parse payload\r\n\r\n    # Start our response\r\n    resp = MessagingResponse()\r\n\r\n    # Add a message\r\n    resp.message(""Ahoy! Thanks so much for your message."")\r\n    \r\n    log.info(str(resp))\r\n    return str(resp)\r\n```\r\n\r\n', 'comments': ['Hi @chzbrgr71! It sounds like you\'re in need of the updated watchdog that handles function via an ""http mode"". This means you can set the headers, content type, response status, etc...\r\nCheck it out here: https://github.com/openfaas-incubator/of-watchdog\r\n\r\nAnd for you, here\'s the Python/Flask template to start off with: https://github.com/openfaas-incubator/python-flask-template', 'Thank you for the help!!! I was able to try this out and it worked perfectly. I made zero changes to my code. Only changed to the above template. ', ""That's great news! :tada: \r\nThe of-watchdog is still in the incubator, so please do raise an issue if you find something out of place"", 'Hi @chzbrgr71 Burton\'s advice is valid but there\'s an even easier way to do what you needed.\r\n\r\nJust set an environmental variable of ""content_type: text/xml"" when you deploy your function. No other changes are required. \r\n\r\nWe will cover this in the official workshop soon too: https://github.com/openfaas/workshop/issues/30\r\n\r\nI\'d encourage you to work through the workshop and learn how to configure functions - it\'s based around Python which is relevant to your Twilio code.']}"
636,deployment error: error response from daemon: network  is ambiguous (4 matches found),https://github.com/openfaas/faas/issues/636,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nI was trying to follow https://blog.alexellis.io/first-faas-python-function/ to get my first hello-world  python function working. I followed the guide till \r\n\r\n```\r\nfaas-cli deploy -f ./hello-python.yml\r\n```\r\nI faced the below issue:\r\n\r\n```\r\n$ faas-cli deploy -f ./hello-python.yml\r\nDeploying: hello-python.\r\n\r\nUnexpected status: 400, message: Deployment error: Error response from daemon: network  is ambiguous (4 matches found)\r\n\r\n[manager1] (local) root@192.168.0.55 ~/functions\r\n```\r\n\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n```\r\n$ faas-cli deploy -f ./hello-python.yml\r\nDeploying: hello-python.\r\nNo existing service to remove\r\nDeployed.\r\n200 OK\r\nURL: http://localhost:8080/function/hello-python\r\n```\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n```\r\n$ faas-cli deploy -f ./hello-python.yml\r\nDeploying: hello-python.\r\n\r\nUnexpected status: 400, message: Deployment error: Error response from daemon: network  is ambiguous (4 matches found)\r\n\r\n[manager1] (local) root@192.168.0.55 ~/functions\r\n```\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n\r\nCloning the OpenFaas:\r\n```\r\n[manager1] (local) root@192.168.0.55 ~\r\n$ git clone https://github.com/openfaas/faas && \\\r\n>   cd faas && \\>   git checkout 0.7.1 && \\>   ./deploy_stack.sh && \\>   docker service ls\r\nCloning into \'faas\'...remote: Counting objects: 15352, done.\r\nremote: Compressing objects: 100% (88/88), done.remote: Total 15352 (delta 71), reused 115 (delta 60), pack-reused 15202Receiving objects: 100% (15352/15352), 21.49 MiB | 14.71 MiB/s, done.\r\nResolving deltas: 100% (5720/5720), done.\r\nNote: checking out \'0.7.1\'.\r\n\r\nYou are in \'detached HEAD\' state. You can look around, make experimental\r\nchanges and commit them, and you can discard any commits you make in this\r\nstate without impacting any branches by performing another checkout.If you want to create a new branch to retain commits you create, you may\r\ndo so (now or later) by using -b with the checkout command again. Example:\r\n  git checkout -b <new-branch-name>HEAD is now at 5ebaf25... Add conferences around France\r\nDeploying stack\r\nCreating network func_functions\r\nCreating config func_prometheus_config\r\nCreating config func_prometheus_rules\r\nCreating config func_alertmanager_config\r\nCreating service func_faas-swarm\r\nCreating service func_base64\r\nCreating service func_nodeinfo\r\nCreating service func_alertmanager\r\nCreating service func_gateway\r\nCreating service func_wordcount\r\nCreating service func_hubstats\r\nCreating service func_prometheus\r\nCreating service func_queue-worker\r\nCreating service func_nats\r\nCreating service func_echoit\r\nCreating service func_markdown\r\nID                  NAME                MODE                REPLICAS            IMAGE                     PORTS\r\n4c1h3yf2yo2g        func_alertmanager   replicated          0/1                 prom/alertmanager:v0.7.1\r\n12fpqd848p4o        func_base64         replicated          0/1                 functions/alpi[manager1] (local) root@192.168.0.55 ~/faas\r\n```\r\n\r\n```\r\n$ curl -sL cli.openfaas.com | shx86_64\r\nDownloading package https://github.com/openfaas/faas-cli/releases/download/0.6.5/faas-cli as /tmp/faas-cli\r\nDownload complete.\r\nRunning as root - Attemping to move faas-cli to /usr/local/binNew version of faas-cli installed to /usr/local/bin\r\nCreating alias \'faas\' for \'faas-cli\'.[manager1] (local) root@192.168.0.55 ~/faas\r\n```\r\n\r\n```\r\n$ echo ""# Test *Drive*""| faas-cli invoke func_markdown<h1>Test <em>Drive</em></h1>\r\n[manager1] (local) root@192.168.0.55 ~/faas\r\n```\r\n\r\n```\r\n$ docker stack ls\r\nNAME                SERVICES\r\nfunc                12[manager1] (local) root@192.168.0.55 ~/faas\r\n```\r\n```\r\n$  docker stack ps funcID                  NAME                  IMAGE                              NODE\r\n   DESIRED STATE       CURRENT STATE                ERROR                       PORTS\r\nia1dnevqurs8        func_queue-worker.1   functions/queue-worker:0.4         worker2\r\n   Running             Running 58 seconds ago\r\nc6s2lp6jiqrh        func_gateway.1        functions/gateway:0.7.0            worker2   Running             Running 57 seconds ago\r\npowsvw7k20tu        func_markdown.1       functions/markdown-render:latest   worker1   Running             Running about a minute ago\r\nupsckese1jxx        func_echoit.1         functions/alpine:latest            manager1[manager1] (local) root@192.168.0.55 ~/faas\r\n```\r\n\r\n```\r\n[manager1] (local) root@192.168.0.55 ~/functions$ faas-cli build -f ./hello-python.yml\r\n[0] > Building hello-python.Clearing temporary build folder: ./build/hello-python/\r\nPreparing ./hello-python/ ./build/hello-python/functionBuilding: dockerworxinc/hello-python with python template. Please wait..\r\nSending build context to Docker daemon  7.168kBStep 1/16 : FROM python:2.7-alpine\r\n2.7-alpine: Pulling from library/python81033e7c1d6a: Pull complete\r\n9b61101706a6: Pull complete32753c857922: Pull complete\r\n21d8ce1563f3: Pull completeDigest: sha256:e5c3f28c666c30cd19a5bdeae3aa37ff09e66d4e96bd5687b0136a233368de6a\r\nStatus: Downloaded newer image for python:2.7-alpine ---> 2251db12bd56\r\nStep 2/16 : RUN apk --no-cache add curl     && echo ""Pulling watchdog binary from Github."" && curl -sSL https://github.com/openfaas/faas/releases/download/0.7.6/fwatchdog > /usr/bin/fw\r\natchdog     && chmod +x /usr/bin/fwatchdog     && apk del curl --no-cache ---> Running in a70b6e5dd25e\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.4/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.4/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Installing libssh2 (1.7.0-r0)\r\n(2/3) Installing libcurl (7.59.0-r0)\r\n(3/3) Installing curl (7.59.0-r0)\r\nExecuting busybox-1.24.2-r14.trigger\r\nOK: 32 MiB in 35 packages\r\nPulling watchdog binary from Github.\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.4/main/x86_64/APKINDEX.tar.gz\r\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.4/community/x86_64/APKINDEX.tar.gz\r\n(1/3) Purging curl (7.59.0-r0)\r\n(2/3) Purging libcurl (7.59.0-r0)\r\n(3/3) Purging libssh2 (1.7.0-r0)\r\nExecuting busybox-1.24.2-r14.trigger\r\nOK: 31 MiB in 32 packages\r\nRemoving intermediate container a70b6e5dd25e\r\n ---> 1d9dd7bd1e5b\r\nStep 3/16 : WORKDIR /root/\r\nRemoving intermediate container 657f0f21300f\r\n ---> 83b7872f1877\r\nStep 4/16 : COPY index.py           .\r\n ---> a69da755c582\r\nStep 5/16 : COPY requirements.txt   .\r\n ---> 71cb18012839\r\nStep 6/16 : RUN pip install -r requirements.txt\r\n ---> Running in ab0f6a86c653\r\nYou must give at least one requirement to install (see ""pip help install"")\r\nRemoving intermediate container ab0f6a86c653\r\n ---> 7338e384fcec\r\nStep 7/16 : RUN mkdir -p function\r\n ---> Running in 2f0f3f8f93f5\r\nRemoving intermediate container 2f0f3f8f93f5\r\n ---> d26b7b10686e\r\nStep 8/16 : RUN touch ./function/__init__.py\r\n ---> Running in ba75eb20f445\r\nRemoving intermediate container ba75eb20f445\r\n ---> cfd819b83728\r\nStep 9/16 : WORKDIR /root/function/\r\nRemoving intermediate container c536029a7d0f\r\n ---> 443781b78e96\r\nStep 10/16 : COPY function/requirements.txt     .\r\n ---> 609181f54917\r\nStep 11/16 : RUN pip install -r requirements.txt\r\n ---> Running in 92be5e0c27af\r\nYou must give at least one requirement to install (see ""pip help install"")\r\nRemoving intermediate container 92be5e0c27af\r\n ---> bbc7301dc9c2\r\nStep 12/16 : WORKDIR /root/\r\n[manager1] (local) root@192.168.0.55 ~/functions\r\n```\r\n\r\n```\r\n$ faas-cli push -f ./hello-python.yml\r\n[0] > Pushing hello-python.\r\nThe push refers to repository [docker.io/dockerworxinc/hello-python]\r\n3975c17aeb0b: Preparing\r\n[manager1] (local) root@192.168.0.55 ~/functions\r\n$ faas-cli push -f ./hello-python.yml\r\n[0] > Pushing hello-python.\r\nThe push refers to repository [docker.io/dockerworxinc/hello-python]\r\n3975c17aeb0b: Pushed\r\nd8a0c2b784dc: Pushed\r\nf945a8874f85: Pushed\r\n57d87e148ea9: Pushed\r\nde38cf137fc4: Pushed\r\nc3e8f58d5fc0: Pushed\r\n906ba4e01891: Pushed\r\n73bff1ddb394: Pushed\r\n92b73e0f1730: Pushed\r\nb763adf55dc8: Layer already exists\r\n8984417f4638: Layer already exists\r\na7d53ea16e81: Layer already exists\r\ne53f74215d12: Layer already exists\r\nlatest: digest: sha256:a0359ecc0456412bdeb1390c6a52de4b3e25b4f966a45b4fb5e805c97d14c53b size:\r\n3033\r\n[0] < Pushing hello-python done.\r\n[0] worker done.\r\n\r\n[manager1] (local) root@192.168.0.55 ~/functions\r\n```\r\n```\r\n\r\n$ faas-cli deploy -f ./hello-python.yml\r\nDeploying: hello-python.\r\n\r\nUnexpected status: 400, message: Deployment error: Error response from daemon: network  is ambiguous (4 matches found)\r\n\r\n[manager1] (local) root@192.168.0.55 ~/functions\r\n```\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nDocker version 17.12\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nNo, plain single node Docker host\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nPlay with Docker Platform\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n', 'comments': ['Hi @dockerworxinc! First, thanks for the super detailed issue! \r\n\r\nWe recently made some updates to the CLI that attempts to lookup the appropriate network when it deploys. However, this feature is also dependent on newer versions of `faas` and `faas-swarm`. \r\n\r\nCould you update your `git checkout` to use `0.7.7`? - that is the latest release\r\n\r\nCurious where you came across the checkout of version `0.7.1`? The blog post you mentioned only checks out without a specific version.', 'Followed the blog completely and it worked fine under Docker Swarm. Is deploy_stack.sh dedicated to Docker Swarm. What if I want to setup OpenFaas on the single node? What if I dont initiate Swarm Mode or classical Swarm Cluster?', ""Oh great! So you're up and running fine then?\r\n\r\nYes, `deploy_stack.sh`, as the name implies, deploys a Docker Stack (on Swarm). We also have [faas-netes](https://github.com/openfaas/faas-netes) and a Helm chart for Kubernetes.\r\n\r\nOpenFaaS runs with the underlying orchestration to allow for auto-scaling. The limitations on where it can run are on the orchestration. Swarm can run on a single node (like your laptop) without a problem. Of course, you're then limited to those resources and scaling wouldn't help as much as a cloud-based solution like AKS, or GKE."", 'Cool..I am excited about to get started with it. Planning to see how it integrates well with system management tasks.', 'Have a look at the [community](https://github.com/openfaas/faas/blob/master/community.md) file for a lot of really good write-ups.\r\n[CLI Functions with OpenFaaS](https://blog.alexellis.io/cli-functions-with-openfaas/)\r\nand \r\n[Stop Installing CLI Tools on Your Build Server - CLI-as-a-Function with OpenFaaS](https://medium.com/@burtonr/stop-installing-cli-tools-on-your-build-server-cli-as-a-function-with-openfaas-80dd8d6be611)\r\nmight be right up your alley :wink: ', 'Derek close', '@dockerworxinc why did you checkout `0.7.1`? I want to update this reference so that nobody else does this and gets tripped up. ']}"
642,azure function invocation failing with a-sync callback,https://github.com/openfaas/faas/issues/642,"{'description': ""I implemented OpenFaas on Azure AKS. \r\nI used https://github.com/openfaas/faas-netes as a source. All works fine. \r\nOnly the a-sync call-back functionality doesn't work.\r\n\r\n## Expected Behaviour\r\n\r\n> I added a X-Callback-Url to the header with an URL to an Azure Function. \r\n> I expect the Function to call the callback URL when the routine ends.\r\n\r\n## Current Behaviour\r\n\r\n> The Azure Function works. \r\n> The OpenFaas function returns a when called a-sync 202 Status, but doens'nt call the Azure Function (callback URL)\r\n\r\n## Possible Solution\r\n\r\n> I have looked at the documentation on https://github.com/openfaas/faas/blob/master/guide/asynchronous.md. The problem is that i don't have the yml files mentioned in the instruction.\r\n\r\n## Steps to Reproduce (for bugs)\r\n\r\n> 1. http://cenaks01.westeurope.cloudapp.azure.com:8080/async-function/timefunction (expects an number in the body)\r\n> 2. https://cencept-functions.azurewebsites.net/api/OpenFaasSMS?code=U1DZSiP0Ygcrh5anUgGdBQ705wz5LktE2AHtkaTqQCXGE80scnoHsw==&clientId=default&receiver=0612345678\r\n> 3. curl --header X-Callback-Url: https://cencept-functions.azurewebsites.net/api/OpenFaasSMS?code=U1DZSiP0Ygcrh5anUgGdBQ705wz5LktE2AHtkaTqQCXGE80scnoHsw==&clientId=default&receiver=0653373439 --data 1 http://cenaks01.westeurope.cloudapp.azure.com:8080/async-function/timefunction\r\n\r\n## Context\r\n\r\n> I want to have a callback for async calls to check the result status.\r\n\r\n## Your Environment\r\n\r\n> Kubernetes (FaaS-netes) on Azure AKS\r\n\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': ['Hi @CentricStraaten,\r\n\r\nI cannot reproduce. After invoking the function with\r\n```\r\n$ curl --header X-Callback-Url: https://cencept-functions.azurewebsites.net/api/OpenFaasSMS?code=U1DZSiP0Ygcrh5anUgGdBQ705wz5LktE2AHtkaTqQCXGE80scnoHsw==&clientId=default&receiver=0653373439 --data 1 http://cenaks01.westeurope.cloudapp.azure.com:8080/async-function/timefunction\r\n```\r\n\r\nI got this output with response from the Azure function (`{""Message"":""The HTTP \'GET\' method is not supported by the \'GenericJsonWebHookReceiver\' WebHook receiver.""}`)\r\n\r\n```\r\n[1] 35785\r\n[2] 35786\r\n-bash: --data: command not found\r\n[2]+  Done                    clientId=default\r\niyovcheva-a01:faas iyovcheva$ {""Message"":""The HTTP \'GET\' method is not supported by the \'GenericJsonWebHookReceiver\' WebHook receiver.""}\r\n[1]+  Done                    curl --header X-Callback-Url: https://cencept-functions.azurewebsites.net/api/OpenFaasSMS?code=U1DZSiP0Ygcrh5anUgGdBQ705wz5LktE2AHtkaTqQCXGE80scnoHsw==\r\niyovcheva-a01:faas iyovcheva$ \r\n```\r\n\r\nCan you please share more details on how you reproduce, errors from the service logs, etc?', 'Derek add label: support', 'Derek edit title: Azure function invocation failing with a-sync callback', 'Hi, you should use a POST for the Azure Function. It expects a payload with data. That is why the data attribute is in the curl command.', ""I don't have service logs from the Azure Functions, the function is never called. I have included a Postman JSON which you can import into Postman. I use these request to test both functions.\r\n\r\n[OpenFaas.postman_collection.zip](https://github.com/openfaas/faas/files/1907393/OpenFaas.postman_collection.zip)\r\n\r\n"", 'Below my Function Code\r\n\r\n```\r\nusing Microsoft.ApplicationInsights;\r\nusing System;\r\nusing System.Timers;\r\n\r\nnamespace Function\r\n{\r\n    public class FunctionHandler\r\n    {\r\n        int _seconds = 0;\r\n\r\n        TelemetryClient _telemetryClient = new TelemetryClient();\r\n\r\n        /// <summary>\r\n        /// http://cenaks01.westeurope.cloudapp.azure.com:8080/functions/timefunction\r\n        /// </summary>\r\n        /// <param name=""input""></param>\r\n        public void Handle(string seconds) {\r\n            // Create Session Identifier\r\n            Guid sessionId = Guid.NewGuid();\r\n\r\n            // Track Event\r\n            _telemetryClient.TrackEvent($""[{sessionId}] Start TimeFunction for {seconds} seconds."");\r\n\r\n            // Determine Thread Sleep Seconds\r\n            _seconds = Convert.ToInt32(seconds)*1000;\r\n\r\n            System.Threading.Thread.Sleep(_seconds);\r\n\r\n            // Track Event\r\n            _telemetryClient.TrackEvent($""[{sessionId}] End TimeFunction after {seconds} seconds."");\r\n\r\n            // Response\r\n            Console.WriteLine(""Seconds: "" + seconds);\r\n        }\r\n    }\r\n}\r\n```', 'Below you can see the Azure Function log. It has only registered my Postman requests.\r\n\r\n![image](https://user-images.githubusercontent.com/17175831/38737079-5290415c-3f2e-11e8-98f9-4cf40e2a835f.png)\r\n', 'I solved the issue. The Azure Function did not accept a get. I changed the Function and the callback works!\r\nSorry, thank you for your support._', 'Derek close', 'When using curl any parameters or headers should be quoted with `""""` i.e.\r\n\r\n```\r\ncurl --header \\\r\n  ""X-Callback-Url: https://cencept-functions.azurewebsites.net/api/OpenFaasSMS?code=U1DZSiP0Ygcrh5anUgGdBQ705wz5LktE2AHtkaTqQCXGE80scnoHsw==&clientId=default&receiver=0653373439"" \\\r\n --data ""1"" \\\r\n http://cenaks01.westeurope.cloudapp.azure.com:8080/async-function/timefunction -i\r\n```\r\n\r\nI can\'t see any code which is doing a GET here.\r\n\r\n* The curl statement from Ivana\xa0is a post due to `--data 1`\r\n* The x-callback-url is also going to invoke via a POST\r\n\r\nThe reason for seeing the error may have been because the `curl` was not quoted so bash interprets the text as other commands. \r\n\r\nJust wanted to make you aware that you could use an OpenFaaS function for the call-back too.', 'Why is the x-callback-url called multiple times (each 20 seconds as long as the function is executing)?\r\n\r\nWhen i call the function (with call-back) \r\n- 60 minutes, it executes 3 callbacks\r\n- 119 minutes, 5 callbacks\r\n- 120 minutes, 6 callbacks\r\netc..\r\n\r\nI have implemented Application Insights and noticed that the function is ""retried"" every 20 seconds?\r\n', 'I am aware that we could use an OpenFaas function for call-back. For now it is convenient to use the Azure Function because it is allready functional.', ""What timeout did you configure for your asynchronous tasks? It sounds like you'll need to up the value. NATS Streaming is the system we use under the hood for asynchronous processing. It will retry work which doesn't complete in the deadline. I'd say this is what you're seeing. \r\n\r\nhttp://docs.openfaas.com/deployment/troubleshooting/#timeouts-asynchronous-invocations"", 'I configured timeout in the function yml file.\r\n\r\n```\r\nprovider:\r\n  name: faas\r\n  gateway: http://cenaks01.westeurope.cloudapp.azure.com:8080\r\n\r\nfunctions:\r\n  timefunction:\r\n    lang: csharp\r\n    handler: ./timefunction\r\n    image: bengkel/timefunction:4.9\r\n    environment:\r\n        read_timeout: 300s\r\n        write_timeout: 300s\r\n```\r\nOpenFaas is running in Azure AKS. I also changed the gateway timeout.\r\n\r\n![image](https://user-images.githubusercontent.com/17175831/38979327-1c84aab8-43ba-11e8-90e1-2caffecfa39c.png)\r\n\r\nI Added Application Insighs to my function. It registers a Custom Event on the Start of the Function when i call it (a-)sync. It never registers end of the Function (see code below). \r\n\r\n```\r\nusing Microsoft.ApplicationInsights;\r\nusing Microsoft.ApplicationInsights.Extensibility;\r\nusing System;\r\n\r\nnamespace Function\r\n{\r\n    public class FunctionHandler\r\n    {\r\n        int _seconds = 0;\r\n\r\n        TelemetryClient _telemetryClient = new TelemetryClient();\r\n\r\n        /// <summary>\r\n        /// http://cenaks01.westeurope.cloudapp.azure.com:8080/functions/timefunction\r\n        /// </summary>\r\n        /// <param name=""input""></param>\r\n        public void Handle(string seconds) {\r\n            if (string.IsNullOrEmpty(seconds)) seconds = ""0"";\r\n\r\n            // Create Session Identifier\r\n            Guid sessionId = Guid.NewGuid();\r\n\r\n            TelemetryConfiguration.Active.InstrumentationKey = ""{my-instrumentation-key}"";\r\n\r\n            // Track Event\r\n            _telemetryClient.TrackEvent($""[{sessionId}] Start TimeFunction for {seconds} seconds."");\r\n\r\n            // Determine Thread Sleep Seconds\r\n            try\r\n            {\r\n                _seconds = Convert.ToInt32(seconds) * 1000;\r\n\r\n                // Track Event\r\n                _telemetryClient.TrackEvent($""[{sessionId}] Thread sleep for {seconds} seconds."");\r\n\r\n                System.Threading.Thread.Sleep(_seconds);\r\n            }\r\n            catch (Exception exception) {\r\n                 // Track Event\r\n                _telemetryClient.TrackEvent($""[{sessionId}] {exception.Message}."");\r\n            }\r\n\r\n            // Track Event\r\n            _telemetryClient.TrackEvent($""[{sessionId}] End TimeFunction after {seconds} seconds."");\r\n\r\n            // Response\r\n            Console.WriteLine(""Seconds: "" + seconds);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n', ""That's a step in the right direction but you need to read the section I linked you to and update the queue worker's setting. \r\n\r\nHere's the link again: \r\n\r\nhttp://docs.openfaas.com/deployment/troubleshooting/#timeouts-asynchronous-invocations"", ""I also updated the queue worker's setting\r\n\r\n![image](https://user-images.githubusercontent.com/17175831/38980622-98ccb11c-43bd-11e8-8858-89f360c5ddd8.png)\r\n\r\n- A synchronous call is still responding  with an 502 gateway error.\r\n- The a-sync call-back is now only executed once\r\n- The a-sync function result is not OK. Application Insights doesn't register the final result, which states that the function did not execute properly as you can see in my previous code example it doesn't report the function end.\r\n\r\n![image](https://user-images.githubusercontent.com/17175831/38981326-63f62c96-43bf-11e8-92a4-4bb8d9936b73.png)\r\n"", 'Try reproducing the issue in an isolated environment with a sleep function or similar. ', 'What do you mean with an isolated environment? This is a POC environment which is only used by me.', 'I think I fixed it. I also had to change te env variables in the faas-netesd? ', '@BurtonR can you offer any insights for @CentricStraaten ?', ""Hi @CentricStraaten! Were you able to resolve your issue? Could you share what you did, or when you realized what the problem was?\r\n\r\nI'd recommend starting up a Play With Docker session (https://labs.play-with-docker.com/) and running the deployment one liner to get started in a fresh, clean environment. When you start a session, just follow the steps in the [Swarm Deployment Guide](https://docs.openfaas.com/deployment/docker-swarm/). This way you can be sure OpenFaaS and your functions work as expected before getting into more complex things.\r\n\r\nIf you need to test on Kubernetes you could try a local [Kubernetes deployment with MiniKube](https://medium.com/devopslinks/getting-started-with-openfaas-on-minikube-634502c7acdf). Just to make sure that there isn't some other process/app/networking issue causing your troubles"", 'I added Application Insights to my function. In my function I added custom events to check if the could would run and finish after called a-sync. I used Postman to call my function on the async-function URL. I noticed that the function was initiated, received a timeout when the function exceeded the execution time of 8 seconds, and noticed that the code (sleep for 20 seconds) did not finish properly.\r\n\r\nTo increase the maximum run-time and avoid time-out exceptions i had to set the environment variables read-timeout and write_timeout in different containers. \r\n\r\nIn the Azure AKS Kubernetes management portal I changed (or added) the variables in the yaml for following deployments (containers): \r\n- my function \r\n- gateway (see previous post)\r\n- faas-netesd\r\n \r\nIn my case i raised the maximum time on the platform to 5 min, 300 seconds, and use different values per function. I tested long running functions successfully.\r\n\r\nFor the callback i added the X-Callback-Url variable in the header of the request. I noticed that the callback was called every 20 seconds.\r\n\r\nIn the queue-worker yaml I change ack_wait and ack_timeout from 20s to 300s also.\r\n\r\nAfter this change the callback is only initiated once.\r\n']}"
647,ui doesn't work with javascript disabled,https://github.com/openfaas/faas/issues/647,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nYou should get a message telling you to enable JS\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nYou get what looks like a html template\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nThis pull request: #646 \r\n\r\nSigned-off-by: Rillian Grant <rillian.grant@hotmail.com>"", 'comments': [""Hi @Rillian-Grant thank you for your contribution. I would not expect the OpenFaaS UI to work without JavaScript, but this is an interesting PR. I'm going to ask @kenfdev to give some input.\r\n\r\nAlex"", 'Hi @Rillian-Grant we will need some screenshots for this change. Please see the comments in the PR.', 'PR is now in: https://github.com/openfaas/faas/pull/659', '@alexellis This issue should be good to close now that PR #659  has been merged.', '@cpitkin do you want to try using Derek here to close the issue?', 'Derek close']}"
650,ci: passwords for docker hub must be read from stdin,https://github.com/openfaas/faas/issues/650,"{'description': ""Just like the OpenFaaS CLI the Docker CLI now mandates passwords are passed-in via STDIN.\r\n\r\nWe have to update all of our projects which publish Docker images to do this.\r\n\r\n* faas\r\n* faas-swarm\r\n* nats-queue-worker\r\n\r\netc\r\n\r\nThe change needs to take place in .travis.yml - see faas-netes as an example of where I've already done this.\r\n"", 'comments': ['Derek assign: iyovcheva']}"
658,future item: remove templates from faas-cli repo,https://github.com/openfaas/faas/issues/658,"{'description': ""The `faas-cli` used to be the home for the OpenFaaS templates, but now it's the `templates` repo instead. We should delete the template folder from the `faas-cli` repo when we're comfortable that everyone has upgraded to a version of the CLI that points to the `templates` repo\r\n\r\nhttps://github.com/openfaas/templates/\r\n\r\nWe will also need to update the build/deploy scripts for the samples so they do a `faas template pull` before building - otherwise it will generate an error."", 'comments': ['The duplicate templates exist here - https://github.com/openfaas/faas-cli/tree/master/template', '@BurtonR @rgee0 FYI', 'Is this on the correct repo?\r\n\r\nWhat is meant when we refer to future?  Is it hours, days, weeks?\r\n\r\nThis is where the anonymous analytics would have really helped out.  Using `av` we could measure __an__ impact of this change to inform our comfort levels.', 'Yes this is the best repo to surface and to track suggestions.\r\n\r\nWe are where we are, so when do we do this work? ', ""@alexellis @rgee0 I would like to work on this issue by submitting a pull request. Before doing that, I've reviewed the code. In the current HEAD version, the `DefaultTemplateRepository` is already set to `https://github.com/openfaas/templates.git`. \r\n\r\nAnd in the build script, it already calls the `PullTemplates` method, which will pull templates from default repo `https://github.com/openfaas/templates.git` if no repo is indicated. In the deploy script, it will check the `./template` folder, and ask to run `faas template pull` command if there is no template in `./template` folder, which will still work if we delete the `template` folder from the `faas-cli` repo.\r\n\r\nSo does that mean we just need to simply delete the `template` folder from the `faas-cli` repo, as all others are already ready?"", ""I do believe that you are correct @stantonxu! Thanks for taking the time to dig through all the code to be sure of that though! \r\nBe sure to check out the [contribution guide](https://github.com/openfaas/faas-cli/blob/master/CONTRIBUTING.md) and don't forget to sign your commit :smile: "", 'Thank you @BurtonR for your quick confirm. Working on it.', 'https://github.com/openfaas/faas-cli/pull/419 ready for review.', 'Please be advised that this is potentially a breaking change for some users and so timing of any merge will be a consideration.  In light of that please provide details of affected versions and dates in the PR detail as this will help the decision process.', ' @rgee0 thanks, is there a template for the affected versions and dates to be included in the PR details?\r\n\r\nBy the way, it depends on when you guys decide to approve and merge the PR. I see the current released version is 0.6.10 by Alex on Jun 5th. So should I say that the affected versions are 0.6.10 and below, and dates are Jun 5th and before?', 'Description of the PR https://github.com/openfaas/faas-cli/pull/419 was updated as following,\r\n\r\n> Remove the ""template"" folder in the faas-cli repo. The default template will be pulled from the template repo.\r\n> \r\n> The `template` repo https://github.com/openfaas/templates was added to the CLI as the default source to pull template. The change was made [here](https://github.com/openfaas/faas-cli/commit/2a1a81d58efc41c5f2b292bec4ee8913ddcf5bb9) on Dec 6 2017, and was release in [0.5.2](https://github.com/openfaas/faas-cli/releases/tag/0.5.2) on Jan 17 2018. Anyone using an earlier version will be affected by that change.', 'If you land here via Google or searching issues, please let us know if you had an issue with this change. We recommend you update your CLI via curl, brew or the releases page.', 'Thanks @stantonxu for your first PR 🎉 ', 'Thank you @burtonr @rgee0 @alexellis ']}"
680,is that possible to return message before function finish?,https://github.com/openfaas/faas/issues/680,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nI use faas to do a large time cost job. Since the job need 1.5 hours to finish, I want to return a receiving message to let caller know that the job is start. After job finish, I will trigger their webhook to process the result. I use nodeStdin sample to test the response flow. I found that the echo only return after function finish. I can not response first even I echo at beginning.\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nI want my job can still running but I can echo back the receiving message in the beginning\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nthe response message only return after job finish\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nis there a way to let watchdog know I want to return before job finish?\r\nI have not study the watchdog source code so I can not sure it can be done\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. use nodeStdin sample \r\n2. add a large time const work in handle function\r\n3. echo message at beginning of job\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nI want to use faas to do a image processing job. But the processing time can not be finish in short time. I need to response first and callback webhook after job finish\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\nClient:\r\n Version:      18.03.1-ce\r\n API version:  1.37\r\n Go version:   go1.9.5\r\n Git commit:   9ee9f40\r\n Built:        Thu Apr 26 07:13:02 2018\r\n OS/Arch:      darwin/amd64\r\n Experimental: false\r\n Orchestrator: swarm\r\n\r\nServer:\r\n Engine:\r\n  Version:      18.03.1-ce\r\n  API version:  1.37 (minimum version 1.12)\r\n  Go version:   go1.9.5\r\n  Git commit:   9ee9f40\r\n  Built:        Thu Apr 26 07:22:38 2018\r\n  OS/Arch:      linux/amd64\r\n  Experimental: true\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nubuntu 14.04\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': ['Hi @rayhero ,\r\nI suggest you to chain 2 functions asynchronously. You can find an example for chaining [here](https://github.com/openfaas/workshop/blob/27245090d09b1f63e3a0e33ce64b63132d6886f9/lab6.md) and async functions [here](https://github.com/openfaas/workshop/blob/4cf063d30807e81686a7df1b279ad451491207ae/lab5.md)\r\n\r\nThe additional function can invoke the original one and then return response, informing the watchdog that your function have started.', ""@iyovcheva cool! that's exactly what I want! I'll try it. Thanks for your advise :)"", '@rayhero Did that work for you?\r\nClosing the issue, but feel free to comment if you have any questions.', 'Derek add label: question', 'Derek close']}"
696,controlling autoscaling with kubernetes instead of openfaas,https://github.com/openfaas/faas/issues/696,"{'description': 'I would like to control the behavior of how each replica set scales based on criteria passed to `kubectl autoscale` instead of OpenFaaS\'s alert system. However, it seems that Kubernetes autoscale is conflicting with OpenFaaS\'s even though I believe I turned off the OpenFaaS alerts.\r\n\r\n## Expected Behaviour\r\nThe autoscaling policy should only be managed by Kubernetes (via HPA) if the OpenFaaS alerts are turned off. Thus, if I have configured minimum and maximum replicas for a particular ReplicaSet via `kubectl autoscale`, the OpenFaaS autoscale should not attempt to terminate replicas or spawn new ones.\r\n\r\n## Current Behaviour\r\nBased on #541, I removed the alert from [AlertManager\'s configuration](https://github.com/openfaas/faas-netes/blob/master/yaml/prometheus_config.yml#L40-L50) _and_ told OpenFaaS to [stop processing it](https://github.com/openfaas/faas-netes/blob/master/yaml/alertmanager_config.yml#L27-L31). I then configure an OpenFaaS ReplicaSet to have a minimum of 2 replicas and a maximum of 5 replicas via `kubectl autoscale`. Then, every time a new replica is created, it is immediately terminated, which ""infinitely"" occurs because the two policies are seemingly in conflict with each other: Kubernetes wants to create a second replica but OpenFaaS for some reason only wants one alive.\r\n\r\n## Context\r\nResearch project on FaaS\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): **Docker 1.13.1**\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? **Kubernetes (FaaS-netes)**\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): **Ubuntu 16.04**\r\n\r\nThank you for your help, and please let me know if any additional information would be useful.\r\n', 'comments': [""I've tested the HPA setup for the [OpenFaaS Kubernetes Operator](https://github.com/openfaas-incubator/openfaas-operator) with Alertmanager scaled to 0 and it works as expected. Can you please try out the operator and see if that works? Here is an example https://github.com/stefanprodan/openfaas-flux#manage-openfaas-functions-and-auto-scaling-with-weave-flux\r\n\r\nThanks"", 'Hi Stefan,\r\nThank you for your response, I will try to test this on the operator.\r\nI am new to OpenFaaS and Kubernetes, but what does the operator do that is different from just running FaaS-netes with the FaaS-CLI, and is using HPA instead of the AlertManager not possible without the operator?\r\n\r\nThanks again for your assistance, I will see if I can get it working with the operator.\r\n', ""@faromero Please see the notes on AlertManager - http://docs.openfaas.com/architecture/autoscaling/\r\n\r\nYou will not get scaling behavior from OpenFaaS (AlertManager) if you remove the alert or if you scale AlertManager to zero replicas. There is nothing else in the deployment which would scale your functions. Using faas-netes or the operator will result in the same experience. The operator is still alpha quality and faas-netes is more stable with more users.\r\n\r\nWe will be doing more testing and validation with the operator, but I can't think of a reason why fats-netes would not work here with HPAv2. Stefan shows this to be the case on his blog post - https://stefanprodan.com/2018/kubernetes-scaleway-baremetal-arm-terraform-installer/#horizontal-pod-autoscaling\r\n"", '@alexellis Thank you for the response and the helpful link!\r\nFrom the link, it states at the bottom that you can scale using the HPA instead. My desired behavior is to control the scaling myself based on custom HPAs and _not_ have OpenFaaS scale my functions (hence my efforts to disable the alerts). However, currently it seems that even if I disable the alerts (i.e. comment out the lines in the two _yml_ from my original post), and start up an HPA, OpenFaaS is still trying to manage the scaling behavior of the functions.\r\n', '@faromero have you restarted the Alertmanager pod after changing the config?', '@stefanprodan, thanks for the suggestion. After I changed the config, I applied the changes to the pod via the following command: `kubectl apply -f ./namespaces.yml,./yaml`. Does this apply the update to the pod or do I need to run another command to restart it in order for the changes to take effect?', 'The pod is not restarted since nothing changed inside the Deployment object. The Alertmanager config is stored as a ConfigMap. You can delete the running pod or call `/-/reload` see https://github.com/prometheus/alertmanager/issues/353', ""That's great to know. I did kill the pod, updated the config, and then brought the pod back up, but I am still getting the same behavior. Just to confirm: if I comment out lines 40-50 in _prometheus_config.yml_ (highlighted [here](https://github.com/openfaas/faas-netes/blob/master/yaml/prometheus_config.yml#L40-L50)), OpenFaaS should not receive an alert to take action on scaling, correct?"", 'Ah sorry you need to restart the Prometheus pod not Alertmanager.', 'I deleted the entire setup (`kubectl delete -f ./namespaces.yml,./yaml`) and then redeploying after making the change (`kubectl apply -f ./namespaces.yml,./yaml`), yet I _still_ see the conflict occurring (a second function pod is deployed, and then immediately killed). The logs from the AlertManager or Prometheus pods do not seem to indicate any activity related to this behavior (not sure if they are suppose to).\r\nThanks again for your help and the quick responses.', ""Please give us step by step instructions of what to type in exactly to reproduce your problem. We'll also need to know how you are generating high load. "", '@alexellis thanks for your response. I am not generating a high load (yet), what I am doing is setting a minimum (2) and maximum (doesn\'t matter but let\'s say 5) number of replicas in my autoscale configuration. Hence, HPA always wants 2 replicas of a particular pod but OpenFaaS doesn\'t see a need for the second replica so it kills it (despite me trying to tell it otherwise). Here are the steps to reproduce this behavior:\r\n1) Set up a remote Kubernetes cluster by following [these](https://blog.alexellis.io/your-instant-kubernetes-cluster/) instructions (great blog by the way). In my case, there is one master and one remote worker.\r\n2) Set up `faas-netes` per the instructions [here](https://docs.openfaas.com/deployment/kubernetes/). Before running `kubectl apply -f ./namespaces.yml,./yaml` inside of the `faas-netes` directory, I go into `./yaml` and comment out lines 40-50 in _prometheus_config.yml_ (highlighted [here](https://github.com/openfaas/faas-netes/blob/master/yaml/prometheus_config.yml#L40-L50)). I then run the _apply_ command from above.\r\n3) I deploy the sample functions in the `faas-cli` directory (described in _stack.yml_) and use the gateway flag for my remote worker. At this point, I can invoke the functions successfully.\r\n4) Now, I run the following command: `kubectl autoscale rs <name of desired function\'s ReplicaSet> ---min=2 --max=5`. I have also tried it with a `--cpu-percent` flag and deployed functions with resource limits as well as deployed a metrics server, but the behavior is the same.\r\n5) After a couple of seconds, if I run `kubectl describe hpa -n openfaas-fn`, I can see that it increased the replica count to 2. If I check `kubectl get pods -n openfaas-fn`, I see that the new pod has a status of ""Terminating"". This behavior proceeds to ping-pong (i.e. if I run `kubectl describe hpa -n openfaas-fn` again after a couple of seconds, I can see it tried to deploy another replica pod to replace the one that was terminated).\r\n\r\nApologies for the long post; I wanted to make it as detailed as possible. Thanks again for all assistance and insight.', ""Thanks for the instructions.. So I ran through your instructions and found I could reproduce the error.\r\n\r\nI think the problem is the you've modified the ReplicaSet and not the Deployment.\r\n\r\nDeployment info:\r\n\r\n```\r\nkubectl describe -n openfaas-fn deploy/figlet\r\nName:                   figlet\r\nNamespace:              openfaas-fn\r\nCreationTimestamp:      Thu, 24 May 2018 17:26:53 +0000\r\nLabels:                 faas_function=figlet\r\nAnnotations:            deployment.kubernetes.io/revision=1\r\nSelector:               faas_function=figlet\r\nReplicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable\r\nStrategyType:           RollingUpdate\r\nMinReadySeconds:        0\r\nRollingUpdateStrategy:  0 max unavailable, 1 max surge\r\n```\r\n\r\nRS info:\r\n\r\n```\r\nName:           figlet-6f9d88968\r\nNamespace:      openfaas-fn\r\nSelector:       faas_function=figlet,pod-template-hash=295844524\r\nLabels:         faas_function=figlet\r\n                pod-template-hash=295844524\r\nAnnotations:    deployment.kubernetes.io/desired-replicas=1\r\n                deployment.kubernetes.io/max-replicas=2\r\n                deployment.kubernetes.io/revision=1\r\nControlled By:  Deployment/figlet\r\nReplicas:       1 current / 1 desired\r\nPods Status:    1 Running / 1 Waiting / 0 Succeeded / 0 Failed\r\nPod Template:\r\n  Labels:       faas_function=figlet\r\n                pod-template-hash=295844524\r\n  Annotations:  prometheus.io.scrape=false\r\n```\r\n\r\nWhy don't you try setting up HPA on the deployment like in Stefan's guide? https://github.com/stefanprodan/openfaas-flux#manage-openfaas-functions-and-auto-scaling-with-weave-flux\r\n\r\nAnother example working with deployments: https://stefanprodan.com/2018/kubernetes-scaleway-baremetal-arm-terraform-installer/#horizontal-pod-autoscaling\r\n\r\nThis works for me if you want to use the CLI instead of YAML:\r\n\r\n```\r\nkubectl autoscale deploy/figlet -n openfaas-fn --min=2 --max=5 \r\n\r\nEvery 0.5s: kubectl get pods -n openfaas-fn                                                                                                             Fri May 25 20:51:53 2018\r\n\r\nNAME                                 READY     STATUS    RESTARTS   AGE                 \r\nfiglet-6f9d88968-49cbf               1/1       Running   0          42s                 \r\nfiglet-6f9d88968-84h5l               1/1       Running   0          1d  \r\n```"", 'Derek close: not an issue', 'Fantastic, that did the trick! Thanks so much @alexellis and @stefanprodan!']}"
704,wrong env name for ack_wait in stack definition file,https://github.com/openfaas/faas/issues/704,"{'description': 'https://github.com/openfaas/faas/blob/ab2aa14c4837626ddfef406a2c9ed5903f7b4e8a/docker-compose.yml#L91\r\n\r\nAccording to https://github.com/openfaas/nats-queue-worker/blob/master/queue-worker/main.go#L206 it should be `ack_wait` not `ack_timeout`.', 'comments': [""I think you're right. We updated the name and the config for Kubernetes but possibly not for swarm. https://github.com/openfaas/faas-netes/blob/master/yaml/queueworker.yml"", 'Looks like the docs need an update too http://docs.openfaas.com/deployment/troubleshooting/#timeouts-asynchronous-invocations', 'I think everything is updated now. @klingenm can you confirm please?', 'I think this one also needs an update in `openfaas-cloud` repo documentation. I have created a PR for that.  https://github.com/openfaas/openfaas-cloud/pull/66', ""Thank you, that's merged now. Any mentions in the workshop?"", 'Derek close: resolved']}"
710,restful url parameters,https://github.com/openfaas/faas/issues/710,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nI am very new with OpenFaas. I created a raspberry pi cluster following Alex's [blog](https://blog.alexellis.io/your-serverless-raspberry-pi-cluster/). The cluster is working and I managed to create my first python function per the [instructions](https://blog.alexellis.io/first-faas-python-function/). \r\n\r\nI created the Hello Python example and got it working using the Gateway UI. However, if I invoked the method using the Gateway URL it will not return a result.\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\nIf I invoke the method using the Gateway URL I would expect a response. For example, if my Gateway URL was 192.168.1.100 then using\r\nhttp://192.168.1.100/function/hello-python?q=test\r\nshould respond with\r\nHello! You said: test\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Follow instructions for building [RPI cluster](https://blog.alexellis.io/your-serverless-raspberry-pi-cluster/).\r\n2. Follow instructions for building first [Python function](https://blog.alexellis.io/first-faas-python-function/).\r\n3. Using a browser navigate to Gateway URL and type the following: http://gateway:8080/function/hello-python?q=test\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 18.05.0-ce\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? Docker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Raspbian Version 9\r\n\r\n* Link to your project or a code example to reproduce issue:\r\nPython Version 2.7.13\r\n\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': [""Hi @ray211 \r\nYou tired http://192.168.1.100/function/hello-python?q=test instead of http://192.168.1.100:8080/function/hello-python?q=test.\r\n\r\nDid you test with the same or it's just a typo in the issue description?"", 'Derek add label: question', 'Derek add label: support', 'Sorry for the typo, yes I tried both methods without any luck.\r\n\r\nAfter reading the workshop documentation, specifically [lab 6](https://github.com/openfaas/workshop/blob/master/lab6.md) I found the value using the environment variable: Http_Query. However, changing the code and the URL string breaks the Gateway UI invoke.\r\n\r\n', ""Ray what's the specific problem you're encountering? The function doesn't work at all? "", 'Derek close: inactive', ""This issue is related #815.\r\n\r\nBasically, the unexpected behaviour occurs because there's no support at all on templates (don't know yet if there's even communication between `watchdog` and boot processes as well) of fields such as headers and query parameters.\r\n\r\nIn this case, those query parameters haven't been properly sent from the [index](https://github.com/openfaas/templates/blob/master/template/python/index.py#L15) file to the handler, thus the lack of an appropriate response according to the expected behaviour.""]}"
761,blog for openfaas,https://github.com/openfaas/faas/issues/761,"{'description': 'We should have a blog site to host articles written for and about OpenFaaS at blog.openfaas.com', 'comments': ['Cc @johnmccabe', 'Yup on it this evening', '@johnmccabe do you want to share your copy of this for people to help with multi-browser testing? @kenfdev is also good with CSS. ', 'Derek close: blog released & roadmap updated']}"
771,minor error in lab4,https://github.com/openfaas/faas/issues/771,"{'description': '## Expected Behaviour\r\nOn line 186 of https://github.com/openfaas/workshop/blob/master/lab4.md, it says:\r\n`$ echo -n """" | faas-cli invoke nodeinfo | faas-cli invoke func_markdown`\r\nHowever, in the workshop there is no function with that name created.\r\n\r\n## Current Behaviour\r\nThe invocation breaks.\r\n\r\n## Possible Solution\r\nChange the line to the correctly named function:\r\n`$ echo -n """" | faas-cli invoke nodeinfo | faas-cli invoke markdown`\r\n\r\n## Steps to Reproduce (for bugs)\r\nSee above\r\n\r\n## Context\r\nLab4 doesn\'t work correctly.\r\n\r\n## Your Environment\r\nLatest Docker Edge as per setup guide', 'comments': ['LGTM', 'Fixed 👍 ']}"
775,web gui not accessible,https://github.com/openfaas/faas/issues/775,"{'description': 'The problem started happening last week (Around the 9 of July) dont remeber exactly the date. It worked before then.\r\nUpdating creepMiner did not help.\r\nThe GUI worked in version \r\n1.7.16\r\n1.8.0\r\n1.8.2 (Worked from when i dowloaded it around a week after release)\r\n## Expected Behaviour\r\nAfter starting creepMiner going to http://localhost:port would open the web GUI\r\n(port is the port number i have tried)\r\n## Current Behaviour\r\nAfter going to http://localhost:port Getting the error  ""Connection refused: localhost:port""\r\n(port is the port number i have tried)\r\n\r\n\r\n## Your Environment\r\nWindows 10\r\ncreepMiner 1.8.2 and 1,8,3\r\n\r\nLog File\r\n[creepMiner_20180717_160957.566889.log](https://github.com/openfaas/faas/files/2202502/creepMiner_20180717_160957.566889.log)\r\n\r\nConfig File (Removed pass and user)\r\n[mining - Copy.txt](https://github.com/openfaas/faas/files/2202510/mining.-.Copy.txt)\r\n', 'comments': ['Derek lock: invalid']}"
776,end-user community / adopters.md,https://github.com/openfaas/faas/issues/776,"{'description': ""If your company has adopted OpenFaaS then you can add your use-case to the ADOPTERS.md file and/or request your logo to be listed. All logos listed must have an entry in the ADOPTERS.md file.\r\n\r\nYou will need to request authorisation from your manager and employer.\r\n\r\n## Process\r\n\r\n1) Send a PR to https://github.com/openfaas/faas/blob/master/ADOPTERS.md with a brief description of how you're using OpenFaaS, this should include your use-case\r\n2) Individual sponsorships can be arranged via GitHub Sponsors - if you're implementing or managing OpenFaaS, then you should subscribe to get the newsletters on updates, security patches and features - https://insiders.openfaas.io/\r\n3) Corporations that use OpenFaaS in production should contribute towards its upkeep, whilst the software may be used under the terms of the MIT License, it requires full-time engineering. Pick a tier - bronze/gold/platinum - https://github.com/openfaas/faas/blob/master/BACKERS.md\r\n4) By sponsoring your logo is associated with one of the fastest growing Open Source developer communities, you also reduce the risk of the project going away due to lack of funds\r\n5) Email contact@openfaas.com with written permission for the logo to be listed and comment on this thread if you like.\r\n\r\nAsset for logo: we will need a URL to a svg or transparent png logo, a text title and a company URL.\r\n\r\nLogos are shown at https://www.openfaas.com/"", 'comments': ['Other inspiration from the CNCF End User Community - https://www.cncf.io/people/end-user-community/\r\n', 'Contiamo is using OpenFaaS and would like to be included on the page.  What format, shape, and size should the logo be?', 'It would be ideal if it was a similar format / shape to the ones on the CNCF page linked above. ', 'Hello @alexellis !\r\n\r\nDim Solution is using OpenFaas (soon in production), you can use our logo: \r\n- [Website](https://dimsolution.com/)\r\n- [Black logo (prefered)](https://dimsolution.com/wp-content/uploads/2018/03/logo-black-1.png)\r\n- [White logo](https://dimsolution.com/wp-content/uploads/2018/03/logo-white.png)\r\n\r\nRegards,', '@alexellis \r\n\r\nForm3\r\n\r\n* [website link: https://form3.tech](https://form3.tech)\r\n* [logo designed for white backgrounds](https://form3.tech/images/press-media/Form3FinancialCloud_Logo.svg)\r\n* [logo designed for dark backgrounds](https://form3.tech/images/press-media/Form3FinancialCloud_Logo_white.svg)', ""Iconscout - Design Assets Marketplace\r\n\r\n- [Website](https://iconscout.com/)\r\n- [Logo](https://iconscout.com/assets/images/iconscout-logo.svg)\r\n\r\nWe're using OpenFaaS in Production."", 'Happy to have Packet included on this list - our OpenFaaS use for demos has been awesome!\r\n\r\n- [Website](https://www.packet.net/)\r\n- [Logo](https://assets.packet.net/company/logo.png)', 'Thanks @alexellis,\r\nHappy to have Citrix included.\r\n\r\nWebsite: [https://www.citrix.com](https://www.citrix.com/)\r\nLogo: [Citrix.svg](https://commons.wikimedia.org/wiki/File:Citrix.svg)\r\n\r\n', 'Hi @alexellis \r\nHappy to have Scaleway included.\r\n\r\n- [Website](https://scaleway.com)\r\n- [Logo](https://www.scaleway.com/assets/images/illustrations/scw-logo-large-purple.svg)\r\n', 'Hi @alexellis,\r\nPlease include Vision Banco SAECA, we are using OpenFaaS in production to serve a couple (and counting) of requests at the home banking page.\r\n\r\n* [Website](https://www.visionbanco.com/)\r\n*  [Logo](https://www.visionbanco.com/assets/img/core/vision-logo.png)', ""@alexellis as discussed I've started having a look at integrating these into the site"", 'Nice issue.\r\nYou may add us too!\r\nUsing OpenFaaS voor integration and callable AI/ML models for asset management.\r\n\r\n- [Website](https://www.intraffic.nl/)\r\n- [Logo](https://www.intraffic.nl/wp-content/themes/intraffic/assets/img/base/logo.svg)', 'Thank you @MarsWarrior, would the company name be `Intraffic`? 👍 ', 'If you could change Intraffic to InTraffic (capital T) everything is ok!', 'Happy to have Virality included.\r\n\r\n- [Website](https://www.virality.de)\r\n- [Logo](https://www.virality.de/wp-content/uploads/2016/07/virality_logo_big.png)', ""@lucasalexander, could you give me the link to the logo for Contiamo? Thank you.\r\n\r\n@tarunmangukiya Thank you for the links! It seems the logo's link is dead. Could you give me a new link for the logo? Thank you."", 'Sorry for that. Fixed the issue!', 'Here they are\r\n* [Website](https://www.contiamo.com)\r\n* [Logo](https://uploads-ssl.webflow.com/5b4d97b58ebe677e65f7ebf1/5b574228dbd9dd57ad1c11ff_ContiamoWithText.svg)', ""Happy to have Ustore included.\r\n\r\n- [Website](http://ustore.com.br)\r\n- [Logo](https://udrive.usto.re/assets/images/logo_ustore.png)\r\n\r\nWe're using Open Faas in production"", '@alexellis \r\n\r\nWe would be glad to have Wireline.io added to the list and are thankful for the excellent help and cooperation from the OpenFaaS team.\r\n\r\n- [Website](https://www.wireline.io/)\r\n- [Logo](https://d33wubrfki0l68.cloudfront.net/4f6804cf76b6552ddb15a6c3cc4faf16114977ea/64559/images/wireline-hero-large.svg)', '@alexellis GalaxyCard is a happy user of OpenFaas as well.\r\n\r\nOur logo: [Logo](https://drive.google.com/open?id=0B7s7yYPKbuN2NDFZY1BBWmlVbTg)\r\nWebsite: [Website](https://www.galaxycard.in)', 'Do you have an SVG logo?', '@alexellis Here you go:\r\n\r\n[SVG Logo](https://drive.google.com/open?id=0B7s7yYPKbuN2Tnh6aDRwTjVzMUU)', ""Thank you @heroic . Looks like the SVG has White text? PNG is fine so I'll use the png version 👍 "", ""@kenfdev You can fill the svg with #0079f3, if you'd like to use SVG"", 'Would love to have MoneyLion included. Thanks for all the great work!\r\n\r\n[Website](https://www.moneylion.com/)\r\n\r\n[SVG Logo](https://drive.google.com/file/d/17hU5hX1R1zvRcbni7eSblDGKlVdLnGvo/view?usp=sharing)', 'Thank you @ameier38 ! The logos would appear as soon as we merge the following:\r\nhttps://github.com/openfaas/docs/pull/69', ""@alexellis @kenfdev \r\nHere is my company's logo and web site:\r\n\r\n- [Website](https://www.pentium.network/)\r\n- [Logo](https://w.uimt.com/img/pentiumlogo.svg)\r\n\r\nThank you!"", 'Added by @LucasRoesler', 'You can add us:\r\n- website: https://www.ngcsoftware.com\r\n- logo: https://www.ngcsoftware.com/images/ngc-logo.png']}"
796,ci failing due to rate-limiting downloading cli,https://github.com/openfaas/faas/issues/796,"{'description': ""The CI job is failing sometimes due to GitHub applying rate-limiting to our CLI download script.\r\n\r\nExample:\r\n\r\nhttps://travis-ci.org/openfaas/faas/builds/409389167#L810\r\n\r\nWe can't avoid this easily given that we're only allowed around 50 unauthenticated requests per hour to the GitHub API and the get.sh (faas-cli repo) makes use of this API. Since Travis uses a common set of outgoing IPs we're sharing that count of 50 requests with many other projects.\r\n\r\nWe should have a way to fetch the latest stable released CLI version without using the API. Can we scrape part of the UI for instance? Should we hard-code a version? Is there a magic URL that points to the latest release?\r\n\r\n@johnmccabe @rgee0 please take a look. "", 'comments': ['CC @ewilde ', ""@alexellis would this work https://help.github.com/articles/linking-to-releases/#linking-to-the-latest-release\r\n\r\nyeah sorry this isn't much good 👎 "", ""If we can follow that link, then construct or extract the binary for the CLI somehow, that would work I think. It'd all need to be in bash too.\r\n\r\nThe existing script also omits any releases which have the pre-release flag (there is a delay of up to 15 mins between cutting the release and Travis adding the build artefacts )"", '@alexellis reading up on this issue seems that if we use an access token it increases [rate limit](https://developer.github.com/v3/#rate-limiting) to 5000 requests per hour \r\n\r\nCould store the token(s) in encrypted travis env vars and then adjust curl statement in contrib.sh (https://developer.github.com/v3/#authentication)\r\n\r\nProbably easiest to use the [personal access token method](https://developer.github.com/v3/auth/#via-oauth-tokens)?\r\n\r\nWould only be a small change to the current process', '```\r\n$ curl -sI https://github.com/openfaas/faas-cli/releases/latest | grep Location | awk -F""/"" \'{ printf $NF }\'\r\n```\r\nNeed to test with a pre-release to make sure it doesn\'t appear\r\n\r\nAlso needs some further work as its adding a hidden char - possibly a newline - which breaks $url when run in get.sh', 'For testing, the latest release is v1.0, v1.0-rc1 is a pre-release - https://github.com/alexellis/release-test-1/releases', 'Full release list (contains both):\r\n\r\n```\r\ncurl -SL https://api.github.com/repos/alexellis/release-test-1/releases\r\n```\r\n\r\nRichard/Ed\'s example:\r\n\r\n```\r\necho $(curl -sI https://github.com/alexellis/release-test-1/releases/latest | grep Location | awk -F""/"" \'{ printf $NF }\')\r\n\r\nv1.0\r\n```\r\n\r\nLooks like it might work?', 'I’ve a branch in the pipeline from this morning. Need to test before raising PR\n\n> On 31 Jul 2018, at 10:39, Alex Ellis <notifications@github.com> wrote:\n> \n> echo $(curl -sI https://github.com/alexellis/release-test-1/releases/latest | grep Location | awk -F""/"" \'{ printf $NF }\')\n> \n> v1.0\n> Looks like it might work?\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n']}"
798,console.log() in javascript not working?,https://github.com/openfaas/faas/issues/798,"{'description': 'Hi guys,\r\n\r\nI am using OpenFaas with the Node.js template. While playing around with simple examples written in Javascript, I noticed that console.log() works only while invoking the functions via command-line tool faas-cli. However, when I invoke the same function (unchanged) via the browser interface then I receive a null message.  In contrast, when I remove the line with the console.log(), everything works fine.\r\nAny ideas what I am doing wrong or missing? In fact, how can I enable logging with the Node.js template for debugging purpose?\r\n\r\nThank you', 'comments': ['Hi @itibb13 thanks for your interest in OpenFaaS.\r\n\r\nPlease see the OpenFaaS workshop Lab 4 for everything you need to know about this.\r\n\r\nhttps://github.com/openfaas/workshop/blob/master/lab4.md\r\n\r\nRegards,\r\n\r\nAlex', 'Derek close: resolved', 'Derek add label: support', 'Feel free to keep commenting, closing as resolved. ']}"
799,expending template.yml file,https://github.com/openfaas/faas/issues/799,"{'description': '\r\nHi,\r\nfunctions are running as pods at openfaas-fn namespace,\r\nbut there is very poor ability to manipulate these pods, does that makes sense to provide ability to mount volumes to a faas framework?\r\n\r\nis there an option to pass Kubernetes secrets as environment vars?\r\n\r\n## Expected Behaviour\r\nAble to use Kubernetes deployment syntax on template.yml\r\nexample 1: \r\nHave the ability to add `volumeMounts` and point it to a `persistentVolumeClaim` in the  template.yml file, does that makes sense on a faas?\r\n\r\nUsing encrypted environment variables\r\nexample 2:\r\nIs there an option to provide environment secrets?\r\n```\r\nsecrets:\r\n    - secret-password <- need to be used as a env var\r\nenvironment:\r\n    write_debug: true\r\n    blabla: ""some value""\r\n    \r\n```\r\n\r\n## Current Behaviour\r\npoor ability to manipulate containers at openfaas-fn namespace\r\n\r\n## Context\r\nUsing encrypted strings in my functions\r\nProviding my function a local path\r\n\r\n## Your Environment\r\n* Docker version: 17.06.2-ce\r\n* Kubernetes\r\n* Operating System and version: Amazon Linux 2 (2017.12) (EKS Cluster)', 'comments': ['Derek add label: duplicate', 'There are several different questions or suggestions here.\r\n\r\nMain suggestion is for volume mounting which is a duplicate of #320 (so will be closed, feel free to +1 or comment there) We recommend using Ceph or Minio for storage in S3 buckets, functions are not stateful so should not have volumes mounted.\r\n\r\nSecond suggestion: secrets as ENV-vars, this is also a duplicate. Please can you explain why you cannot use the filesystem? Secrets are mounted in a standard location - see the docs for more https://docs.openfaas.com/\r\n\r\nPlease feel free to keep commenting. ', 'Derek close: duplicate', 'Here\'s an example of how you can read a file, and if you want push that into the environment in Python. For Node it\'ll be almost identical. I recommend against storing secure secrets in environmental variables. \r\n\r\n```python\r\nimport os\r\n\r\nwith open(""/var/run/openfaas/secrets/s3-access-key"") as f:\r\n    os.environ[""S3_ACCESS_KEY""] = f.read().strip()\r\n```', ""Thanks a lot for your effort! \r\nI've found the solution for the secrets issue at https://docs.openfaas.com/reference/secrets/ \r\n\r\nRegarding the mount issue, i can store data on S3 (or any other storage that have an http api), but thought although functions are stateless there could be an option to store files locally (NFS for example) since the function is actually a k8s pod.\r\n\r\nThanks again!"", ""Would you like to be listed on our users page because you're a user of OpenFaaS? https://docs.openfaas.com/#users-of-openfaas\r\n\r\nAlex"", 'Hi @alexellis \r\n\r\nWe are currently running a POC with OpenFaaS, Let me check this option, will update.']}"
817,concurrent executions of the same function in a single container?,https://github.com/openfaas/faas/issues/817,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nI would like to ask about the concurrency of OpenFaaS.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nAccording to the [SAND paper](https://www.usenix.org/system/files/conference/atc18/atc18-akkus.pdf) (Section 2.3), OpenFaaS allows parallel executions of the same function in a single container, but I didn't find any such information on OpenFaaS website. May I know does OpenFaaS support this behavior? If it supports, does OpenFaaS spawn a new process or new thread in the container to handle the concurrent requests? If OpenFaaS does not support this behavior, why not?\r\n\r\nMany thanks for your time.\r\n\r\n"", 'comments': ['Derek add label: question', 'Hi @wnagchenghku, this is documented but perhaps not in the language you were looking for.\r\n\r\nConcurrent execution is supported with both function execution models. We use a watchdog shim component in the container to manage this.\r\n\r\nhttps://docs.openfaas.com/architecture/watchdog/\r\n\r\nAlex', ""If you'd like to ask more questions please join the Slack community https://docs.openfaas.com/community "", '> https://docs.openfaas.com/community\r\n \r\nHello @alexellis, could you please tell me about how to set up the limitation for this concurrency like ""Container Concurrency"" in Knative? Thanks!', 'Hi @FTWH you can learn about concurrency limitation in this blog post:\r\n\r\nhttps://www.openfaas.com/blog/limits-and-backpressure/\r\n\r\nAlternatively, we do offer paid support, or if you prefer, feel free to attend our weekly community call.\r\n\r\n> Our office hours at 1630 GMT+1 / BST each Wednesday will be open to the community.\r\n> https://us02web.zoom.us/j/83845933347?pwd=RzhVeWVHVXJQY2RBM1FMMzd3blhpUT09\r\n> Introduce yourself, feel free to bring questions, comments and suggestions for openfaas, arkade, k3sup and derek.\r\n\r\n\r\nRegards,\r\n\r\nAlex', '/lock: resolved']}"
824,amend derek users,https://github.com/openfaas/faas/issues/824,"{'description': 'We need to update the Derek user-list in the faas repo. Most repos redirect to this repo for access. \r\n\r\nRemove inactive users\r\n\r\n - ovation22\r\n - cpitkin\r\n - jockdarock\r\n - itscaro\r\n\r\nAdd new full-time team:\r\n\r\n- bartsmykla\r\n\r\nPlease cross-reference the GitHub org and add anyone who is missing: https://github.com/orgs/openfaas/people\r\n', 'comments': ['Derek add label: skill/beginner', '@alexellis , I\'ve deleted the inactive users and added the individual users per the ""People"" list. How to add the full-time team? Add as an individual user?', 'As an individual user is fine I think. :-)', 'Thank you @bartsmykla , I will add you as individual user, and remove the duplicated one. I thought it is a group name, :-)', ""Fixed via Stantonxu's PR""]}"
825,reset the credentials,https://github.com/openfaas/faas/issues/825,"{'description': ""Hi there! I've just found OpenFASS, created the docker swarm and run the installation bash script. It has generated a login-password pair that I have not saved anywhere. \r\n\r\nCan you please describe the way how to reset the credentials instead of using `--no-auth` every time. Thanks and sorry for such a noob question."", 'comments': ['Hi @ohld \r\n\r\nThis should help: [troubleshooting/#i-forgot-my-gateway-password](https://docs.openfaas.com/deployment/troubleshooting/#i-forgot-my-gateway-password)\r\n\r\nIvana', 'Derek add label: question ', 'Derek add label: support', 'Hi @ohld did that help?', ""I've also updated the docs page @ivanayov quoted to mention how to retrieve the credentials from the CLI config file."", 'Yes. That helped. Thanks a lot!']}"
827,"ui: automatically select ""download"" for store functions",https://github.com/openfaas/faas/issues/827,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nIf a store function has a label of `com.openfaas.ui.ext` then we should automatically select the `Download` button because it means a binary file will be generated.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nUsers may not know to click the button and then end up with binary data in the response text-box which is less than ideal.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nMinor fix to the Angular 1.x / JS code.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Deploy a function which returns a binary such as Nic's face-detect function\r\n\r\n"", 'comments': []}"
851,istio integration ,https://github.com/openfaas/faas/issues/851,"{'description': 'This is an overarching issue to keep track of the progress on making OpenFaaS compatible with Istio service mesh.\r\n\r\nGoals:\r\n\r\n- tracing function calls with Jaeger from Istio Gateway to the function pod and back (https://github.com/openfaas/faas-netes/issues/272)\r\n-  inbound/outbound traffic monitoring for each OpenFaaS service with Prometheus \r\n-  isolate OpenFaaS core services and functions with Mixer policies \r\n-  mTLS between OpenFaaS Gateway and functions\r\n\r\nTasks:\r\n\r\n- [x] add HTTP named port to Gateway (https://github.com/openfaas/faas-netes/pull/279) and functions (https://github.com/openfaas/faas-netes/pull/280  https://github.com/openfaas-incubator/openfaas-operator/pull/46)\r\n- [x] allow Istio init container root access for Gateway pod (https://github.com/openfaas/faas-netes/pull/279)\r\n- [x] remove absolute domains (ending dot) from the Gateway and  Queue Worker config (https://github.com/openfaas/faas-netes/pull/279)\r\n- [x] mTLS: use wget for health checks (openfaas/faas-netes#279)\r\n- [x] remove http client host overriding from the Gateway (https://github.com/openfaas/faas/issues/847) \r\n- [x] remove http client host overriding from Queue Worker (https://github.com/openfaas/nats-queue-worker/pull/37)', 'comments': ['@stefanprodan please update the tasks above with the current status', '@alexellis you could merge https://github.com/openfaas/nats-queue-worker/pull/37 first, do a release and I can update the Helm PR to include the new worker release. ']}"
862,use distroless image for runtime images,https://github.com/openfaas/faas/issues/862,"{'description': 'In the interests of resource usage minimization and security, faas templates should use distroless images where available.\r\n\r\n## Expected Behaviour\r\n[Google distroless images](https://github.com/GoogleContainerTools/distroless) provide only necessary files for the contained application to run.  The resulting production image is substantially smaller in most instances.  \r\n\r\nImages without even a lightweight distro also offer a smaller attack surface and hence better security.\r\n\r\n## Current Behaviour \r\nCurrent images deploy using base images that contain things like package managers, but these are not required once the function is deployed.  \r\n\r\n## Possible Solution\r\nTemplates can instead use [docker multi-stage builds](https://docs.docker.com/develop/develop-images/multistage-build/) to compose the application into a build container, and then copy the application and dependencies into the deployment container baselined on an appropriate distroless image.\r\n', 'comments': [""+1 for this suggestion\r\n\r\nI have thought about similar idea for minimising the images by separating the templates on 2 build stages, where the second image contains only a single binary, but didn't know it's already available with a multi-stage build.\r\n\r\nMy only concern about using [distroless](https://github.com/GoogleContainerTools/distroless) is that it looks like not being supported.\r\n\r\nI think this issue should go to [templates](http://github.com/openfaas/templates) and [faas-cli](http://github.com/openfaas/faas-cli) repos.\r\n\r\n"", 'Derek add label: proposal', ""Google's distroless is mainly just an example.  Docker multi-stage builds might have made it obsolete, but I need to dig into the bazel builds and see what's really happening in there."", ""Unikernel-style microcontainers have their own maintenance issues and tradeoffs. \r\n\r\nHappy for you to fork the templates repo and do your own experimentation. The CLI will allow you to pull templates from anywhere. This will allow you to test out whether any additional changes are required. \r\n\r\nI don't see this as something we'll be approaching at this stage, but happy to revisit after your initial research. \r\n\r\nAlex"", 'Derek add label: revisit', 'Derek close: no response from original poster to feedback. Marked for revisit. ']}"
863,community: meet at open source summit edinburgh,https://github.com/openfaas/faas/issues/863,"{'description': ""## Event\r\n\r\n[Open Source Summit Edinburgh - October 22-24](https://osseu18.sched.com/list/descriptions/)\r\n\r\n## What's happening?\r\n\r\nA number of the community and contributors will be attending and it'd be great too see you there too.\r\n\r\nI have a talk on OpenFaaS Cloud on the Monday and would love to set up an afternoon/evening meet-up or get-together.\r\n\r\n[Monday, October 22 • 15:05 - 15:45 - Introducing OpenFaaS Cloud, a Developer-Friendly CI/CD Pipeline for Serverless - Alex Ellis, OpenFaaS project / VMware](https://osseu18.sched.com/event/FxXx/introducing-openfaas-cloud-a-developer-friendly-cicd-pipeline-for-serverless-alex-ellis-openfaas-project-vmware)\r\n\r\nLet us know if you'll be there.\r\n\r\n![](https://pbs.twimg.com/media/DmMeCUfVsAAdBCG.jpg)\r\n\r\nAlex\r\n\r\n## Confirmed\r\n\r\n- @alexellis\r\n- @johnmccabe \r\n- @ivanayov \r\n\r\nPlease also let us know if you're in the area but not attending the main event."", 'comments': ['Yup', ""I'm there. Glad to meet you all :) "", ""Can't make the conference but the EICC is next to my office can meet up for a beer :)"", "":+1: yup, I'll be attending"", ""Tagging @amouat who I've been talking to about arranging a small event. Potential talk from myself and @stefanprodan on Istio / OpenFaaS and maybe another topic?"", 'Just to be clear, it would be as part of the Docker meetup and I am talking to other speakers as well. But it would be great to have something on OpenFaaS and Istio.', ""Sure - we haven't found a way to organise a dedicated event or meet-up yet so may look to meet before the meet-up or in a coffee shop at some point around the event.\r\n\r\nWe'll get an abstract across on OpenFaaS + Istio for the Docker meet up 👍 \r\n\r\nAlex"", ""I'm sure the summit were offering spaces for meetups e.g. there is a blockchain meetup at the summit itself."", 'Derek close', 'Great to meet everyone and thanks for a top meet-up @amouat']}"
868,investigate: invocation count 0 for some functions,https://github.com/openfaas/faas/issues/868,"{'description': ""Only functions invoked with `curl` have a count\r\n\r\nThis is more of a question than an issue per se. I have several functions. A couple of those functions are called by our SVN post commit hook. We're using `curl` to make those calls.\r\n\r\nThe other functions are being consumed by Mattermost (a team collaboration tool that allows integration with HTTP services).\r\n\r\nI know all of them are working and responding correctly. However, when I see the invocation count with `faas-cli list` I get this:\r\n```\r\nFunction                      \tInvocations    \tReplicas\r\nbot-revision-notice           \t586            \t1    \r\nbot-crypto                    \t0              \t1    \r\nbot-picker                    \t0              \t1    \r\nbot-appear-in                 \t0              \t1    \r\nbot-greeter                   \t0              \t1    \r\nbot-magic-ball                \t0              \t1    \r\nbot-flip-coin                 \t0              \t1    \r\nbot-revision-process          \t0              \t1    \r\nbot-announcement              \t0              \t1    \r\nbot-jira-comment              \t596            \t1 \r\n```\r\nThe revision notice and jira comment functions are the ones called via curl. The others are called by Mattermost.\r\nThe last time I deployed the functions was 5 weeks ago.\r\nI'm using faas-cli version 0.6.10\r\nFaaS Gateway I believe is 0.8.3\r\n\r\nIs the invocation count updated when some HTTP header is provided? A header that perhaps `curl` includes but not Mattermost?\r\n\r\nP.S. Made a test with Postman and also the count didn't increase. But it does increase if I make an invocation from the OpenFaaS web UI\r\n\r\nThanks\r\n\r\n\r\n"", 'comments': [""Hi @ngcdev thanks for raising this issue with us. \r\n\r\n* What is the best way to reproduce the issue?\r\n* Can you give a series of steps?\r\n* What language template are you using? (Is it modified or official?)\r\n* Are you invoking these synchronously or asynchronously?\r\n\r\nI'd also encourage you to fill out the whole template with all the information we ask for so that we can better help you. If in doubt look at the template here -> https://github.com/openfaas/faas/blob/master/.github/ISSUE_TEMPLATE.md\r\n\r\nOn a related note since you're using OpenFaaS it'd be good to list your company on our end-users page -> https://docs.openfaas.com/#users-of-openfaas via https://github.com/openfaas/faas/issues/776\r\n\r\nAlex"", ""Another thing you can do is to look up the gateway's raw metrics by adding:\r\n\r\n```\r\n/_metrics\r\n```\r\n\r\nTo the end of the gateway URL.\r\n\r\nLook for `gateway_invocation_count`.\r\n\r\nPerhaps the reason we're seeing 0 is due to the results being non-200 results? (not sure)"", 'Thanks @ngcdev . As Alex says, we would like more context to reproduce this.\r\n\r\nAn additional question from me is:\r\n\r\n> But it does increase if I make an invocation from the OpenFaaS web UI\r\n\r\nAre you saying that the functions below get counted if using `curl`?\r\n\r\n```\r\nbot-crypto                    \t0              \t1    \r\nbot-picker                    \t0              \t1    \r\nbot-appear-in                 \t0              \t1    \r\nbot-greeter                   \t0              \t1    \r\nbot-magic-ball                \t0              \t1    \r\nbot-flip-coin                 \t0              \t1    \r\nbot-revision-process          \t0              \t1    \r\nbot-announcement              \t0              \t1    \r\n```', ""Thanks for your responses and sorry about the delay.\r\n\r\nI have to adjust the issue, because further investigation showed that curl calls are not being recorded as invocations either. I thought that we were calling `bot-jira-comment` and `bot-revision-notice` from the SVN hooks, but in reality, we're calling (via curl) `bot-revision-process` (which shows 0 invocations). That function internally is calling the prior 2 (following documentation on calling functions locally) So only functions invoked within OpenFaaS interface or internal function calls are getting invocation counts.\r\n\r\nI'll start one function from scratch to verify and I'll update the original post to follow the template.\r\n"", ""OK...so it seems to be an issue with OpenFaaS being behind a nginx reverse proxy. The moment that I tried to replicate it calling it locally (localhost) with `curl` it worked. But when I use the URL that is exposed via nginx, it's not working. Also I'm using basic authentication in nginx.\r\n\r\nIt will be a little hard to replicate for someone else. I'll try to replicate without basic authentication next, to see if that has any bearing on it."", 'Regarding the 200 status, this is in the log of nginx for the call:\r\n```\r\nnginx.1    | faas.ngcsoftware.com 40.70.10.1 - ovhYDns6MjaUuPDtxBnEHurTd [18/Sep/2018:10:35:13 -0400] ""GET /function/bot-greeter HTTP/1.1"" 200 86 ""-"" ""curl/7.47.0""\r\n```\r\nThe `ovhYD...` is the user name for basic auth.', ""So this environment has 3 variants:\r\n- Running behind an nginx reverse proxy (not an issue, replicated in another machine and works fine)\r\n- Using Basic Authentication (not an issue, replicated in another machine and works fine)\r\n- Using SSL, nginx handles it and the connection to OpenFaaS is over regular HTTP (no yet discarded as the culprit)\r\n\r\nI was able to to get a count invocation on every scenario, except the SSL. I'll have to try that with some other URL and certificate. I'll post more info once I can replicate it properly."", 'OpenFaaS Cloud is running with Nginx as Ingress on Kubernetes with SSL enabled. You can access my dashboard and then one of the public functions for instance `fn1` and then see the invocation count go up.\r\n\r\nhttps://system.o6s.io/dashboard/alexellis\r\n\r\nDo you have any specifics on how to reproduce as of now?\r\n\r\nAlex', ""OK I think we're getting somewhere.... after I register the faas-cli to point to the fully qualified URL with `https://` and all, now the counters are showing 0 for all (from the cli). So it seems like the counters are kept per gateway URL? So maybe is the count execution from that specific URL? That will explain why some show 0, because they haven't been called from localhost, but from another URL.\r\nThis is what's showing, from `faas-cli`, pointing to the same swarm, but with different URLs for the gateway:\r\n```\r\nngcuser@devbuild2:~/Sources/faas$ faas list --gateway http://localhost:8080\r\nFunction                      \tInvocations    \tReplicas\r\nbot-revision-notice           \t637            \t1    \r\nbot-crypto                    \t0              \t1    \r\nbot-picker                    \t0              \t1    \r\nbot-appear-in                 \t0              \t1    \r\nbot-greeter                   \t6              \t1    \r\nbot-magic-ball                \t0              \t1    \r\nbot-flip-coin                 \t0              \t1    \r\nbot-revision-process          \t0              \t1    \r\nbot-announcement              \t0              \t1    \r\nbot-jira-comment              \t648            \t1    \r\nngcuser@devbuild2:~/Sources/faas$ faas list --gateway https://faas.ngcsoftware.com\r\nFunction                      \tInvocations    \tReplicas\r\nbot-revision-notice           \t0              \t1    \r\nbot-crypto                    \t0              \t1    \r\nbot-picker                    \t0              \t1    \r\nbot-appear-in                 \t0              \t1    \r\nbot-greeter                   \t0              \t1    \r\nbot-magic-ball                \t0              \t1    \r\nbot-flip-coin                 \t0              \t1    \r\nbot-revision-process          \t0              \t1    \r\nbot-announcement              \t0              \t1    \r\nbot-jira-comment              \t0              \t1    \r\nngcuser@devbuild2:~/Sources/faas$ faas list --gateway https://faasadmin.ngcsoftware.com\r\nFunction                      \tInvocations    \tReplicas\r\nbot-revision-notice           \t637            \t1    \r\nbot-crypto                    \t0              \t1    \r\nbot-picker                    \t0              \t1    \r\nbot-appear-in                 \t0              \t1    \r\nbot-greeter                   \t6              \t1    \r\nbot-magic-ball                \t0              \t1    \r\nbot-flip-coin                 \t0              \t1    \r\nbot-revision-process          \t0              \t1    \r\nbot-announcement              \t0              \t1    \r\nbot-jira-comment              \t648            \t1  \r\n```\r\n\r\nThe ones that have invocation counters in one are 0 in the others. Still doesn't explain how some are always 0, but maybe the gateway DNS has something to do in how the counts are stored"", ""I have another piece of information... the `faas` DNS  (as opposed to the `faasadmin`) has a rule in nginx to block the UI url (gateway?)... maybe this is causing something not to register properly with the counters, although the functions are being executed. It seems execution is being done directly with the swarm service instead of going via the gateway...\r\n\r\nIf that's the case, then there's no issue with OpenFaaS, it's just this environment setup that is skipping the gateway calls"", ""OK so I'm going to close it, because once I removed the nginx restriction to the getaway go via that URL to execute the functions, the invocation counters update properly. It was the setup of this environment that was going directly to the swarm service instead of the gateway.\r\nSorry for the disturbance.""]}"
875,migrate to go 1.10 / alpine 3.8 for core components,https://github.com/openfaas/faas/issues/875,"{'description': 'Providing there are no blocking issues we could start updating the Dockerfiles for all OpenFaaS core components to use the Golang 1.10 builder SDK instead of 1.9.7.\r\n\r\nThe other change we can make is to move the runtime to Alpine 3.8 to keep up to date.\r\n\r\nAnyone see a problem with above?\r\n\r\nThe incubator Golang template is using the above combination. https://github.com/openfaas-incubator/golang-http-template\r\n\r\nA list of Git repositories for the core components is available here: https://docs.openfaas.com/contributing/get-started/#openfaas\r\n\r\n## Edit\r\n\r\nThis change is only for Go 1.10.x not Golang 1.11 due to changes in the net/http package requiring CGO - CGO affects portability and other components across the wider project must be considered when making such changes.\r\n\r\nThe builder uses a non-Alpine base (Debian GNU/Linux 9) and should continue to do so. Building against musl may have other side-effects. ', 'comments': ['Related for templates: https://github.com/openfaas/templates/issues/70', ""I would be interested in taking this on, but I'm afraid I'm not too familiar with Golang. Might pick it up just to contribute here. Just recently discovered this project and I'm really impressed. Considering migrating one of my side projects over to OpenFaaS.\r\n\r\n@alexellis had a brief look at the above, we might want to consider using Alpine 3.8.1 instead of 3.8, by the looks of it, 3.8.1 has a security patch for apk-tools that prevents a potential for remote execution. See here: https://www.alpinelinux.org/posts/Alpine-3.8.1-released.html"", 'Thanks for reaching out. Would you like to join Slack and discuss with the community? https://docs.openfaas.com/community/', ""Sure, I'd love to help out. Just not sure where to start."", '@alexellis @rcjpisani the RCE fix is already in the upstream 3.8 library image\r\n\r\n- https://github.com/docker-library/official-images/pull/4834', '@stefanprodan may have some input here. The 3.8 image is already in use in some components so should be fine. ', ""I've seen no problem with Alpine 3.8 should be ok to use it everywhere."", 'And the Go version?', 'I would say Go 1.10.x, there some problems with 1.11 on Alpine as the net/http package moved to modules and requires CGO.', ""Let's do it then. :+1:"", 'cc @auyer https://github.com/openfaas/templates/pull/84', '@stefanprodan installing `gcc` and `libc-dev` solves CGO issues in 1.11 image. \r\nThose packages have been removed from the GO base image, and the reason behind this is is explained by the docker team in [this](https://github.com/docker-library/golang/issues/119) issue.\r\ncc @alexellis ', 'Having attempted to update openfaas/faas-swarm it seems `git` along with `curl` have been removed from the Golang SDK Docker image. These need to be added back in for the build to pass. ', '(I think the above may also be related to whether the `golang` image is based upon Alpine or something else)', 'Edit posted for clarification: \r\nhttps://github.com/openfaas/faas/issues/875#issue-361032425', '@itscaro you were asking for some small items to work on, can you check all repos that are on Go 1.9.x and move to Go 1.10.4 please?', 'Derek close']}"
876,gateway scale_from_zero behaviour for non-existing functions,https://github.com/openfaas/faas/issues/876,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe gateway should not try to scale up any non-existing function deployments.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nIn the deployment of OpenFaaS Cloud when I tried to access a function that didn't exist it tried to scale it to 1 and then gave a warning / error.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nDig into why this is happening, report back on the issue with some ideas for a fix. By extension add unit test coverage if missing for the function map and if possible create a failing test showing the error.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n0. Using Kubernetes\r\n1. Deploy with `scale_from_zero` enabled\r\n2. Visit function that doesn't exist\r\n3. See error similar to `unable to scale function [name-here], err: error scaling HTTP code 500, http://127.0.0.1:8081/system/scale-function/name-here`\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': ['@rgee0 also mentioned seeing this with OpenFaaS Cloud live environment. \r\n\r\nWe should probably reject requests without a PATH here -> https://github.com/openfaas/openfaas-cloud/blob/master/router/main.go#L70\r\n\r\nThis is not related to only the router. ', ""I added a couple of tests for `function_cache.go` which have confirmed that the cache functions are performing as expected.\r\n\r\nDigging deeper I think the problems lie in `external.go` because in `scaling.go` the call to `GetReplicas` does not return an error when the function isn't found. This means the execution moves on into `SetReplicas` which is where the errors that we see bubble up from.\r\n\r\nI need to continue investigations but I think we may need to add an else here:\r\nhttps://github.com/openfaas/faas/blob/af0ccc9a4506b4450e5008df4ab14eaf2714216e/gateway/plugin/external.go#L79-L84\r\nso that if we don't get a 200 we return an error, which would see this code block exercised:\r\nhttps://github.com/openfaas/faas/blob/af0ccc9a4506b4450e5008df4ab14eaf2714216e/gateway/handlers/scaling.go#L41-L49"", ""Might be a bit hacky as I've not created mock http tests previously but tests to demonstrate the failure can be found here https://github.com/openfaas/faas/compare/master...rgee0:scaleInvestigation?expand=1\r\n`TestGetReplicasNonExistentFn()` Fails as we should expect an error out of `GetReplicas` if the function isn't found.  Instead we see a `nil` error and a struct returned which consequently causes a scale event to be attempted."", 'Derek assign: me', 'The approach sounds good to me. Please proceed with a PR. ']}"
898,cannot connect to openfaas on url: http://127.0.0.1:8080,https://github.com/openfaas/faas/issues/898,"{'description': 'https://github.com/openfaas/workshop/blob/master/lab1.md\r\nhttps://github.com/openfaas/workshop/blob/master/lab2.md\r\nI follow these, but when I  execute [faas-cli list] ，I got this message:""Cannot connect to OpenFaaS on URL: http://127.0.0.1:8080""\r\n![doc](https://user-images.githubusercontent.com/19262116/46652726-82a39a80-cbd6-11e8-8d05-30d9a3d414af.PNG)\r\n\r\nthe [docker service ls] command can list the services, alsothe port .but I can,t access it on the browser.\r\nwindows 10 \r\ndocker for windows win73\r\nI lookup the isssues :it says set the env ""OPENFAAS_URL=127.0.0.1:8080"",but it doesn,t work\r\n', 'comments': ['when I input [docker stack ps func], I got this :""ERROR : ""no suitable node (scheduling …""""', 'Your screenshot shows no replicas.\r\n\r\nHave you switched Docker to use Linux containers?', '@rgee0 no, I use the default windows containers,ok, I wil  try', 'Derek add label: support', '@rgee0  It worked, thanks a lot :).', 'Derek close', '@rgee0 / @ivanayov please can you review the pre-reqs for the workshop and see if there is a good place to add a > Note: about using ""Linux Containers""? ']}"
906,trying to call a function from another function.,https://github.com/openfaas/faas/issues/906,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nI'm trying to connect two functions to one another. The goal is to reach the function B via the function A.\r\nFunctions A and B are deployed and are working as expected (on the UI at http://ip:8080/ui). They are at http://localhost:8080/function/_ .\r\nBy calling in the server http://localhost:8080/function/B with cURL it works.\r\nBy calling in the UI http://ip:8080/ui the function A it calls http://localhost:8080/function/B but return itself.\r\nBut calling B function via http://ip:8080/function/B from the UI http://ip:8080/ui of the function A it works well and the results are displayed.\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\nCalling B function through A function using the localhost link should be possible and would return the B function response and the A function response.\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\nCalling B function through A function using the localhost link return the A function response two times.\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n**Situation**\r\nThe server is running on Ubuntu 16.04\r\nFunctions are based on the Python3 sample and are programmed in Python 3.4\r\n"", 'comments': ['Please checkout the documentation site and the workshop. https://github.com/openfaas/workshop/blob/master/lab4.md#create-workflows', 'Thanks for using OpenFaaS. Feel free to keep commenting. ', 'Hello @MineMS49 this is little confusing at first but in general better use the gateway `https://gateway:8080/function/..` to call one function from another rather than `localhost` or the external IP. More information could be found in [workshop lab4](https://github.com/openfaas/workshop/blob/f27ff19c87b0933c51799586d83d5e75cbd78eb2/lab4.md) we invoke one function from another there.\r\n\r\nHope that helps 🙂 ']}"
910,change base image of function,https://github.com/openfaas/faas/issues/910,"{'description': 'I am trying to create multiple functions in python. Size of image of each function is approximately 526MB.\r\nIs there a way to change the base image of the image created. So that the size of the final image can be reduced ? ', 'comments': ['@vijaysng are your functions are based on the official template? It is generally possible to create an own base image and if you use alpine as a base you might be able to reduce the overall size.\r\n\r\nAnother thing to highlight is that docker reuses layer. And if all images extend the same base image. It will only download the base image once and not multiple time', ""Hi @vijaysng I'm not sure where or how you're seeing this? For one thing I'd like to ask you to fill out the whole issue template instead of deleting it. It *helps us, help you*.\r\n\r\nI just used the official python3 template (which is based upon Alpine Linux) and it came out with the following:\r\n\r\n```\r\nfaas-cli new --lang python3 sample1\r\nfaas-cli build -f sample1.yml\r\ndocker images |grep sample1\r\n\r\nsample1                           latest              38967106d9cd        5 seconds ago       82.8MB\r\n```\r\n\r\nI'll close this issue since we have no useful information from you and to Simon's point - images are 1) layered (so you only ship deltas) and 2) you need to fill out the whole template.\r\n\r\nFeel free to keep commenting. "", 'Issue template https://github.com/openfaas/faas/blob/master/.github/ISSUE_TEMPLATE.md']}"
928,windows deploy_stack.ps1 does not setup basic auth secrets,https://github.com/openfaas/faas/issues/928,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nWindows `deploy_stack.ps1` should set the `basic-auth-user` and `basic-auth-password` secrets if absent.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nThe `deploy_stack.ps1` ignores the secrets.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nUpdate the Powershell script to prompt for the user/password if not already created.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Run `deploy_stack.ps1` on a Windows Docker Swarm with/without the http basic auth secrets created.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nCurrently using Windows 10.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n- using the script from the latest on master (at the time of raising the issue openfaas/faas@0a5e343c5de4acc697d89542a79d204edaf39c9)\r\n\r\n"", 'comments': ['Can you generate a secret so that we have some consistency? Does Powershell offer something similar to bash?', 'Yeah should be feasible.']}"
931,openfaas function is scaled down to zero when min and max replicas are set to 1,https://github.com/openfaas/faas/issues/931,"{'description': 'Hi,\r\n\r\nI have a problem with OpenFaaS when setting the min and max replicas to 1, to avoid scaling of the function.\r\n\r\nlabels:\r\n  com.openfaas.scale.min: ""1""\r\n  com.openfaas.scale.max: ""1""\r\n\r\nHowever the serving pod is scaled down to zero once in every minute.\r\n\r\n## Expected Behaviour\r\n\r\nThe serving pod of the function shouldn\'t be scaled down to zero.\r\n\r\n## Current Behaviour\r\n\r\nServing pod of the function is scaled down to zero in every minute\r\n\r\nOutput of kubectl get deployments -n openfaas-fn -w\r\nNAME     DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\r\nmyfunc   0     1     1     1     116m\r\nmyfunc   0     1     1     1     116m\r\nmyfunc   0     0     0     0     116m\r\nmyfunc   1     0     0     0     116m\r\nmyfunc   1     0     0     0     116m\r\nmyfunc   1     0     0     0     116m\r\nmyfunc   1     1     1     0     116m\r\nmyfunc   1     1     1     1     116m\r\nmyfunc   0     1     1     1     117m\r\nmyfunc   0     1     1     1     117m\r\nmyfunc   0     0     0     0     117m\r\nmyfunc   1     0     0     0     118m\r\nmyfunc   1     0     0     0     118m\r\nmyfunc   1     0     0     0     118m\r\nmyfunc   1     1     1     0     118m\r\nmyfunc   1     1     1     1     118m\r\n\r\n\r\n## Possible Solution\r\n\r\nI have investigated the code of OpenFaaS and found the bottom lines in faas/gateway/handlers/alerthandler.go:\r\n\r\n// CalculateReplicas decides what replica count to set depending on current/desired amount\r\nfunc CalculateReplicas(status string, currentReplicas uint64, maxReplicas uint64, minReplicas uint64, scalingFactor uint64) uint64 {\r\n\tnewReplicas := currentReplicas\r\n\tstep := uint64((float64(maxReplicas) / 100) * float64(scalingFactor))\r\n\r\n\tif status == ""firing"" {\r\n\t\tif currentReplicas == 1 {\r\n\t\t\tnewReplicas = step\r\n\t\t} else {\r\n\t\t\tif currentReplicas+step > maxReplicas {\r\n\t\t\t\tnewReplicas = maxReplicas\r\n\t\t\t} else {\r\n\t\t\t\tnewReplicas = currentReplicas + step\r\n\t\t\t}\r\n\t\t}\r\n\t} else { // Resolved event.\r\n\t\tnewReplicas = minReplicas\r\n\t}\r\n\r\n\treturn newReplicas\r\n}\r\n\r\nWhen calculating steps and it happens that maxReplicas is 1 and scaling factor is not set, so its value is 20% by default (according to https://docs.openfaas.com/architecture/autoscaling/) the step value is set to 0 after converting the whole calculation to uint64.\r\n\r\nAccording to the bottom lines, newReplcias are set to 0 in my case.\r\nif currentReplicas == 1 {\r\n   newReplicas = step\r\n\r\nSolution is to set newReplicas to 1 in case maxReplicas is 1 and steps is 0 when currentReplicas equals to 1.\r\n\r\n## Steps to Reproduce (for bugs)\r\nAppend the bottom lines to the function\'s yml file, and redeploy the function.\r\nlabels:\r\n  com.openfaas.scale.min: ""1""\r\n  com.openfaas.scale.max: ""1""\r\n\r\nAfter starting to call the function with curl or ab or whatever, the serving pod is scaled down to zero.\r\n\r\n## Context\r\nI wanted to try how OpenFaaS works without scaling.\r\n\r\n## Your Environment\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):  0.7.7\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 18.06.1-ce\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? FaaS-netes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Ubuntu 16.04, Kernel 4.4.0-134-generic\r\n', 'comments': [""Hello @szefoka . The faas-idler is responsible to this behaviour. In `values.yaml` file there is `faasIdler:` which should have `dryRun` set to true to not actually scale your functions down to 0 in case they are not invoked. Turn that on to true if it isn't."", 'Derek add label: question', 'Derek add label: support', 'Hi let me ping @Templum, Simon PTAL?\r\n\r\nMartin please can you see if you can reproduce this issue?\r\n\r\nAlex', ""> Hello @szefoka . The faas-idler is responsible to this behaviour. In `values.yaml` file there is `faasIdler:` which should have `dryRun` set to true to not actually scale your functions down to 0 in case they are not invoked. Turn that on to true if it isn't.\r\n\r\nHi @martindekov! Actually the value of dryRun was originally set to true, so it might be some other issue I think. \r\n"", 'I will try to reproduce it. However would like to know if faas idler is involved in the setup, as this could also play a role.', 'I have deployed the faas-idler with dryrun set to true. The behavior is the same for me with or without it.\r\n\r\nI have watched the logs of faas-idler I got this:\r\n\r\n{{200 myfunc} [1.540401506699e+09 2.301694915254237]}\r\n{{502 myfunc} [1.540401506699e+09 0]}\r\n2018/10/24 17:18:26 Skip: myfunc due to missing label\r\n\r\n{{200 myfunc} [1.540401536704e+09 2.301694915254237]}\r\n{{502 myfunc} [1.540401536704e+09 0]}\r\n2018/10/24 17:18:56 Skip: myfunc due to missing label\r\n\r\n{{200 myfunc} [1.540401566709e+09 3.7016949152542367]}\r\n{{502 myfunc} [1.540401566709e+09 0.003389830508474576]}\r\n2018/10/24 17:19:26 Skip: myfunc due to missing label\r\n\r\n{{200 myfunc} [1.540401596717e+09 4.098305084745762]}\r\n{{502 myfunc} [1.540401596717e+09 0.003389830508474576]}\r\n2018/10/24 17:19:56 Skip: myfunc due to missing label\r\n\r\nI looked into the code of the faas-idler (https://github.com/openfaas-incubator/faas-idler/blob/master/main.go), as I understand it checks if the ""com.openfaas.scale.zero"" label is set to true. If the value is false or not 1 the above log-lines are printed.\r\n\r\nI append \'com.openfaas.scale.zero: ""false""\' to the function yml, just to be sure, though scaling to zero also happened in the case of running faas-idler with dryRun set to true.', 'Thank you for providing the debug info. Please do you also have the logs from the gateway?', 'I cut the part of the log which is related to my function\'s scaling down to zero and then up to one.\r\n\r\n2018/10/24 20:58:13 Forwarded [POST] to /function/myfunc - [200] - 0.046548 seconds\r\n2018/10/24 20:58:13 Forwarded [POST] to /function/myfunc - [200] - 0.047080 seconds\r\n2018/10/24 20:58:13 Forwarded [POST] to /function/myfunc - [200] - 0.044991 seconds\r\n2018/10/24 20:58:13 Alert received.\r\n2018/10/24 20:58:13 {""receiver"":""scale-up"",""status"":""firing"",""alerts"":[{""status"":""firing"",""labels"":{""alertname"":""APIHighInvocationRate"",""function_name"":""myfunc"",""monitor"":""faas-monitor"",""service"":""gateway"",""severity"":""major"",""value"":""16.4""},""annotations"":{""description"":""High invocation total on "",""summary"":""High invocation total on ""},""startsAt"":""2018-10-24T20:58:08.324404523Z"",""endsAt"":""0001-01-01T00:00:00Z"",""generatorURL"":""http://prometheus-6c7d64d46b-hl5nx:9090/graph?g0.expr=sum+by%28function_name%29+%28rate%28gateway_function_invocation_total%7Bcode%3D%22200%22%7D%5B10s%5D%29%29+%3E+5\\u0026g0.tab=1""}],""groupLabels"":{""alertname"":""APIHighInvocationRate"",""service"":""gateway""},""commonLabels"":{""alertname"":""APIHighInvocationRate"",""function_name"":""myfunc"",""monitor"":""faas-monitor"",""service"":""gateway"",""severity"":""major"",""value"":""16.4""},""commonAnnotations"":{""description"":""High invocation total on "",""summary"":""High invocation total on ""},""externalURL"":""http://alertmanager-ccd8559-hvpdn:9093"",""version"":""4"",""groupKey"":""{}:{alertname=\\""APIHighInvocationRate\\"", service=\\""gateway\\""}""}\r\n\r\n2018/10/24 20:58:13 [Scale] function=myfunc 1 => 0.\r\n2018/10/24 20:58:13 Forwarded [POST] to /function/myfunc - [200] - 0.058671 seconds\r\n...\r\n2018/10/24 20:58:13 Forwarded [POST] to /function/myfunc - [200] - 0.066349 seconds\r\n2018/10/24 20:58:13 Forwarded [GET] to /system/function/myfunc - [200] - 0.002305 seconds\r\n2018/10/24 20:58:13 Forwarded [POST] to /function/myfunc - [200] - 0.051610 seconds\r\n...\r\n2018/10/24 20:58:16 Forwarded [POST] to /function/myfunc - [200] - 0.053221 seconds\r\n2018/10/24 20:58:16 Forwarded [GET] to /system/function/myfunc - [200] - 0.002099 seconds\r\n2018/10/24 20:58:16 Forwarded [POST] to /function/myfunc - [200] - 0.048294 seconds\r\n...\r\n2018/10/24 20:58:18 Forwarded [POST] to /function/myfunc - [200] - 0.047385 seconds\r\n2018/10/24 20:58:18 Forwarded [GET] to /system/function/myfunc - [200] - 0.001952 seconds\r\n2018/10/24 20:58:18 Forwarded [GET] to /system/functions - [200] - 0.005494 seconds\r\n2018/10/24 20:58:21 Forwarded [GET] to /healthz - [200] - 0.000476 seconds\r\n2018/10/24 20:58:21 Forwarded [GET] to /system/function/myfunc - [200] - 0.002725 seconds\r\n2018/10/24 20:58:21 Forwarded [GET] to /system/functions - [200] - 0.002115 seconds\r\n2018/10/24 20:58:23 Forwarded [GET] to /system/function/myfunc - [200] - 0.002897 seconds\r\n2018/10/24 20:58:25 Forwarded [GET] to /system/functions - [200] - 0.002473 seconds\r\n2018/10/24 20:58:26 Forwarded [GET] to /system/function/myfunc - [200] - 0.002498 seconds\r\n2018/10/24 20:58:28 Forwarded [GET] to /system/functions - [200] - 0.006393 seconds\r\n2018/10/24 20:58:28 Forwarded [GET] to /system/function/myfunc - [200] - 0.006327 seconds\r\n2018/10/24 20:58:31 Forwarded [GET] to /healthz - [200] - 0.000640 seconds\r\n2018/10/24 20:58:31 Forwarded [GET] to /system/function/myfunc - [200] - 0.002785 seconds\r\n2018/10/24 20:58:32 Forwarded [GET] to /system/functions - [200] - 0.003320 seconds\r\n2018/10/24 20:58:33 Forwarded [GET] to /system/function/myfunc - [200] - 0.003518 seconds\r\n2018/10/24 20:58:35 Forwarded [GET] to /system/functions - [200] - 0.003398 seconds\r\n2018/10/24 20:58:35 Forwarded [GET] to /system/functions - [200] - 0.002135 seconds\r\n2018/10/24 20:58:36 Forwarded [GET] to /system/function/myfunc - [200] - 0.002754 seconds\r\n2018/10/24 20:58:38 Forwarded [GET] to /system/function/myfunc - [200] - 0.004848 seconds\r\n2018/10/24 20:58:39 Forwarded [GET] to /system/functions - [200] - 0.009307 seconds\r\n2018/10/24 20:58:41 Forwarded [GET] to /healthz - [200] - 0.000443 seconds\r\n2018/10/24 20:58:41 Forwarded [GET] to /system/function/myfunc - [200] - 0.002679 seconds\r\n2018/10/24 20:58:42 Forwarded [GET] to /system/functions - [200] - 0.003117 seconds\r\n2018/10/24 20:58:43 Alert received.\r\n2018/10/24 20:58:43 {""receiver"":""scale-up"",""status"":""resolved"",""alerts"":[{""status"":""resolved"",""labels"":{""alertname"":""APIHighInvocationRate"",""function_name"":""myfunc"",""monitor"":""faas-monitor"",""service"":""gateway"",""severity"":""major"",""value"":""16.4""},""annotations"":{""description"":""High invocation total on "",""summary"":""High invocation total on ""},""startsAt"":""2018-10-24T20:58:08.324404523Z"",""endsAt"":""2018-10-24T20:58:38.324404523Z"",""generatorURL"":""http://prometheus-6c7d64d46b-hl5nx:9090/graph?g0.expr=sum+by%28function_name%29+%28rate%28gateway_function_invocation_total%7Bcode%3D%22200%22%7D%5B10s%5D%29%29+%3E+5\\u0026g0.tab=1""}],""groupLabels"":{""alertname"":""APIHighInvocationRate"",""service"":""gateway""},""commonLabels"":{""alertname"":""APIHighInvocationRate"",""function_name"":""myfunc"",""monitor"":""faas-monitor"",""service"":""gateway"",""severity"":""major"",""value"":""16.4""},""commonAnnotations"":{""description"":""High invocation total on "",""summary"":""High invocation total on ""},""externalURL"":""http://alertmanager-ccd8559-hvpdn:9093"",""version"":""4"",""groupKey"":""{}:{alertname=\\""APIHighInvocationRate\\"", service=\\""gateway\\""}""}\r\n\r\n2018/10/24 20:58:43 [Scale] function=myfunc 0 => 1.\r\n2018/10/24 20:58:43 Forwarded [GET] to /system/function/myfunc - [200] - 0.002687 seconds\r\n2018/10/24 20:58:46 Forwarded [GET] to /system/functions - [200] - 0.003025 seconds\r\n2018/10/24 20:58:46 Forwarded [GET] to /system/function/myfunc - [200] - 0.003477 seconds\r\n2018/10/24 20:58:48 Forwarded [GET] to /system/function/myfunc - [200] - 0.002289 seconds\r\n2018/10/24 20:58:49 Forwarded [GET] to /system/functions - [200] - 0.003028 seconds\r\n2018/10/24 20:58:51 Forwarded [GET] to /healthz - [200] - 0.000638 seconds\r\n2018/10/24 20:58:51 Forwarded [GET] to /system/function/myfunc - [200] - 0.002641 seconds\r\n2018/10/24 20:58:53 Forwarded [GET] to /system/function/myfunc - [200] - 0.002131 seconds\r\n2018/10/24 20:58:53 Forwarded [GET] to /system/functions - [200] - 0.002839 seconds\r\n2018/10/24 20:58:56 Forwarded [GET] to /system/functions - [200] - 0.002223 seconds\r\n2018/10/24 20:58:56 Forwarded [GET] to /system/function/myfunc - [200] - 0.002321 seconds\r\n2018/10/24 20:58:58 Forwarded [GET] to /system/function/myfunc - [200] - 0.003331 seconds\r\n2018/10/24 20:59:00 Forwarded [GET] to /system/functions - [200] - 0.005705 seconds\r\n2018/10/24 20:59:01 Forwarded [GET] to /healthz - [200] - 0.000642 seconds\r\n2018/10/24 20:59:01 Forwarded [GET] to /system/function/myfunc - [200] - 0.003134 seconds\r\n2018/10/24 20:59:03 Forwarded [GET] to /system/functions - [200] - 0.003607 seconds\r\n2018/10/24 20:59:03 Forwarded [GET] to /system/function/myfunc - [200] - 0.002101 seconds\r\n2018/10/24 20:59:05 Forwarded [GET] to /system/functions - [200] - 0.002820 seconds\r\n2018/10/24 20:59:06 Forwarded [GET] to /system/function/myfunc - [200] - 0.002785 seconds\r\n2018/10/24 20:59:07 Forwarded [GET] to /system/functions - [200] - 0.003209 seconds\r\n2018/10/24 20:59:08 Forwarded [GET] to /system/function/myfunc - [200] - 0.002848 seconds\r\n2018/10/24 20:59:10 Forwarded [GET] to /system/functions - [200] - 0.002861 seconds\r\n2018/10/24 20:59:11 Forwarded [GET] to /system/function/myfunc - [200] - 0.005427 seconds\r\n2018/10/24 20:59:11 Forwarded [GET] to /healthz - [200] - 0.000305 seconds\r\n2018/10/24 20:59:13 Forwarded [GET] to /system/function/myfunc - [200] - 0.002615 seconds\r\n2018/10/24 20:59:14 Forwarded [GET] to /system/functions - [200] - 0.003211 seconds\r\n2018/10/24 20:59:16 Forwarded [GET] to /system/function/myfunc - [200] - 0.002498 seconds\r\n2018/10/24 20:59:17 Forwarded [GET] to /system/functions - [200] - 0.002666 seconds\r\n2018/10/24 20:59:18 error with upstream request to: , Post http://myfunc.openfaas-fn.svc.cluster.local.:8080: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)\r\n2018/10/24 20:59:18 Forwarded [POST] to /function/myfunc - [502] - 60.000223 seconds\r\n2018/10/24 20:59:18 Forwarded [POST] to /function/myfunc - [200] - 0.050617 seconds\r\n2018/10/24 20:59:18 Forwarded [POST] to /function/myfunc - [200] - 0.050752 seconds\r\n2018/10/24 20:59:18 Forwarded [POST] to /function/myfunc - [200] - 0.048583 seconds\r\n2018/10/24 20:59:18 Forwarded [POST] to /function/myfunc - [200] - 0.046774 seconds\r\n2018/10/24 20:59:18 Forwarded [POST] to /function/myfunc - [200] - 0.052220 seconds\r\n2018/10/24 20:59:18 Forwarded [GET] to /system/function/myfunc - [200] - 0.002421 seconds\r\n2018/10/24 20:59:18 Forwarded [POST] to /function/myfunc - [200] - 0.050028 seconds\r\n\r\n', '@Martind were you able to reproduce this?', 'I am on it', ""@szefoka thank you for this report. You can disable scaling by scaling Alertmanager to 0 replicas. In the meantime we're going to look into this as a priority.\r\n\r\nAlex"", 'Thanks @alexellis this solved my problem temporarily.\r\nI\'m not sure if it would do the trick, but I think if I would modify the  CalculateReplicas function in /gateway/handlers/alerthandler.go, from this\r\n...\r\nif status == ""firing"" {\r\n\t\tif currentReplicas == 1 {\r\n\t\t\tnewReplicas = step\r\n\t\t}\r\n...\r\n\r\nto something like this\r\n\r\n...\r\nif status == ""firing"" {\r\n                if currentReplicas == 1 {\r\n                        if step == 0 {\r\n                                newReplicas = 1\r\n                        } else {\r\n                                        newReplicas = step\r\n                                }\r\n                }\r\n...\r\nwould solve this issue.\r\n\r\nThanks,\r\nDavid', 'Yeah I was able to replicate the issue with 2500+ requests. Thanks for sharing this with us @szefoka 🙂 ', 'Thanks for the quick fix! @alexellis :)', 'This was released in the 0.9.8 image available on the Docker Hub. ', 'Derek close: fixed in [this](https://github.com/openfaas/faas/commit/f5939c9a60872f23a393f5d2bc7af077d7dab90e) commit ', '@szefoka @Templum @ivanayov this introduced regression into OpenFaaS Cloud where we have a minimum replica count of 1 and max of 4 with proportional scaling of 20%. I believe it used to work before introducing this patch.\r\n\r\nReproduce error with:\r\n\r\n```\r\n\r\nfunc TestScaling_1Min_4Max_Step1(t *testing.T) {\r\n\tminReplicas := uint64(1)\r\n\tmaxReplicas := uint64(4)\r\n\tscalingFactor := uint64(50)\r\n\tcurrent := uint64(1)\r\n\r\n\twant := uint64(2)\r\n\r\n\tnewReplicas := CalculateReplicas(""firing"", current, maxReplicas, minReplicas, scalingFactor)\r\n\tif newReplicas != want {\r\n\t\tt.Logf(""Replicas - want: %d, got: %d"", want, newReplicas)\r\n\t\tt.Fail()\r\n\t}\r\n}\r\n\r\nfunc TestScaling_1Min_4Max_Step2(t *testing.T) {\r\n\tminReplicas := uint64(1)\r\n\tmaxReplicas := uint64(4)\r\n\tscalingFactor := uint64(50)\r\n\tcurrent := uint64(2)\r\n\r\n\twant := uint64(4)\r\n\r\n\tnewReplicas := CalculateReplicas(""firing"", current, maxReplicas, minReplicas, scalingFactor)\r\n\tif newReplicas != want {\r\n\t\tt.Logf(""Replicas - want: %d, got: %d"", want, newReplicas)\r\n\t\tt.Fail()\r\n\t}\r\n}\r\n```\r\n\r\nDo we believe it is correct for no autoscaling to take place between the range of 1 - 4 replicas? Clearly 20% of 1 is less than 1 so would round down.\r\n']}"
967,invoking subprocess in env fprocess,https://github.com/openfaas/faas/issues/967,"{'description': 'I am using my own `Dockerfile` and it is based on `template/python3/Dockerfile`.\r\n\r\nI am trying to use `subprocess.run` from `python` since I need to invoke another program.  However, stdout and stderr are set to -1 before invoking `subprocess.run`.  This causes the following traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File ""index.py"", line 25, in <module>\r\n    ret = handler.handle(st)\r\n  File ""/home/app/function/handler.py"", line 230, in handle\r\n    verbose)\r\n  File ""/home/app/function/handler.py"", line 129, in runCommand\r\n    check=False)\r\n  File ""/home/app/miniconda3/lib/python3.7/subprocess.py"", line 466, in run\r\n    with Popen(*popenargs, **kwargs) as process:\r\n  File ""/home/app/miniconda3/lib/python3.7/subprocess.py"", line 769, in __init__\r\n    restore_signals, start_new_session)\r\n  File ""/home/app/miniconda3/lib/python3.7/subprocess.py"", line 1447, in _execute_child\r\n    restore_signals, start_new_session, preexec_fn)\r\nTypeError: expected str, bytes or os.PathLike object, not int\r\n```\r\n\r\nAny suggestions other than, ""don\'t do this""?', 'comments': [""Hi\r\n\r\nCan you provide the source in a Git repo with a minimal example?\r\n\r\nPerhaps you could make a new function of type dockerfile and make your subprocess binary the fprocess so that the binary you're trying to run becomes a separate function?\r\n\r\nhttps://blog.alexellis.io/cli-functions-with-openfaas/\r\n\r\nAlex"", 'Let me put a repo together for sharing.  ', 'The sample program works <https://github.com/josephwinston/OpenFaaS-Subprocess>.  Now to find out why my example files.', 'Hi @josephwinston I noticed that you closed the issue? Did you resolve the problem you had and can you tell us more? \r\n\r\nAlex', 'Thanks for asking.  The problem was completely on my side.  In the middle of my argument list on of the arguments was an integer and *not* a string.', ""I would recommend against using `subprocess` since it may be hard to keep track of what processes you're creating - especially if the outer program crashes. What about using the blog post I sent over as an example and running the CLI commands in another image as their own function?"", 'I started with the resource you sent.  However,  here are the issues that I am trying to solve:\r\n\r\n- The data required by the function is a very large binary file.\r\n- The result is also a very large file that more times than not will be binary (parquet is the normal format)\r\n- The function may be written in a language like c# or even Fortran.  \r\n    - Note that <https://github.com/openfaas/templates/blob/master/template/csharp/Program.cs> only works for text\r\n- The existing functions/programs in c# and Fortran don\'t know how to read/write from stdin/stderr.  \r\n    - More than often, they expect a local file. \r\n \r\nBy having a driver in Python, it makes it ""easier"" to parse the input and then handle the I/O by reading the file from a HTTP server, invoking the existing code,  and then writing the file to another HTTP server. \r\n\r\nI\'ll be happy to change and follow <https://blog.alexellis.io/cli-functions-with-openfaas/>.  Let me know what approach I should take.  Also, I am willing to help with writing a binary handler for the c# if you think that this is the way forward.']}"
977,potential watchdog or async issue,https://github.com/openfaas/faas/issues/977,"{'description': '\r\n\r\n## Expected Behaviour\r\nWhen calling `my_func` to [`my_func`, `my_func`, ..] asynchronously `async-function/my_func` **via gateway** in **parallel**, all of them should start executing in parallel. \r\n\r\n## Current Behaviour\r\nWhen calling `my_func` to `my_func`, `my_func` asynchronously `async-function/my_func` **via gateway** in **parallel**, except one instance of `my_func` all other get stuck at `fprocess` forever\r\n#### Service Log\r\n```\r\n2018/11/23 05:30:13 Forking fprocess.\r\n2018/11/23 05:30:13 Query  \r\n2018/11/23 05:30:13 Path  /\r\n2018/11/23 05:30:14 stderr: 2018/11/23 05:30:13 tracing is disabled\r\n2018/11/23 05:30:13 [Request `bfrp0pdka1rnebl10ma0`] Received\r\n2018/11/23 05:30:13 [Request `bfrp0pdka1rnebl10ma0`] Intermidiate result from Node validate-query to Node detect-face retrived from intermediate-result-validate-query-detect-face\r\n2018/11/23 05:30:13 [Request `bfrp0pdka1rnebl10ma0`] Executing node detect-face\r\n2018/11/23 05:30:13 [Request `bfrp0pdka1rnebl10ma0`] Executing function `facedetect`\r\n2018/11/23 05:30:14 [Request `bfrp0pdka1rnebl10ma0`] Node detect-face completed successfully\r\n2018/11/23 05:30:14 [Request `bfrp0pdka1rnebl10ma0`] Intermidiate result from Node detect-face to validate-and-upload stored as intermediate-result-detect-face-validate-and-upload\r\n2018/11/23 05:30:14 [Request `bfrp0pdka1rnebl10ma0`] request for Node validate-and-upload is delayed\r\n\r\n2018/11/23 05:30:14 Duration: 0.608234 seconds\r\n2018/11/23 05:30:14 Forking fprocess.\r\n2018/11/23 05:30:14 Query  \r\n2018/11/23 05:30:14 Path  /\r\n```\r\n\r\nAs per the logs of `queue-worker` all request got submitted\r\n```bash\r\nPosting report - 200\r\nRequest for upload-pipeline-dag.\r\n[#51] Received on [faas-request]: \'sequence:44 subject:""faas-request"" data:""{\\""Header\\"":{\\""Accept\\"":[\\""application/json\\""],\\""Accept-Encoding\\"":[\\""gzip\\""],\\""Content-Length\\"":[\\""227\\""],\\""Content-Type\\"":[\\""application/json\\""],\\""User-Agent\\"":[\\""Go-http-client/1.1\\""],\\""X-Call-Id\\"":[\\""202ead08-130e-48c0-aaa8-9d687137ae3d\\""],\\""X-Start-Time\\"":[\\""1542951013486454342\\""]},\\""Host\\"":\\""gateway:8080\\"",\\""Body\\"":\\""eyJTaWduIjoiRDlEOThDN0VCQUE3MjY3QkNDNEYwMjgwRkM1QkE0MjczRjM2MUIwMEQ0MjIwNzQ5ODVBNDFBRTEzMzhGMUI2MSIsIklEIjoiYmZycDBwZGthMXJuZWJsMTBtYTAiLCJRdWVyeSI6ImZpbGU9Y2hyaXMuanBnIiwiRXhlY3V0aW9uU3RhdGUiOiJ7XCJ0eXBlXCI6XCJkYWdcIixcImRhZy1wb3NpdGlvblwiOlwiZGV0ZWN0LWZhY2VcIn0iLCJEYXRhIjoiIiwiQ29udGV4dFN0b3JlIjp7fX0=\\"",\\""Method\\"":\\""POST\\"",\\""Path\\"":\\""\\"",\\""QueryString\\"":\\""\\"",\\""Function\\"":\\""upload-pipeline-dag\\"",\\""CallbackUrl\\"":null}"" timestamp:1542951013487091400 \'\r\nWrote 1 Bytes\r\n200 OK\r\nPosting report - 200\r\n[#52] Received on [faas-request]: \'sequence:45 subject:""faas-request"" data:""{\\""Header\\"":{\\""Accept\\"":[\\""application/json\\""],\\""Accept-Encoding\\"":[\\""gzip\\""],\\""Content-Length\\"":[\\""224\\""],\\""Content-Type\\"":[\\""application/json\\""],\\""User-Agent\\"":[\\""Go-http-client/1.1\\""],\\""X-Call-Id\\"":[\\""763ca76e-d696-4930-83e7-3e26549277d8\\""],\\""X-Start-Time\\"":[\\""1542951013491267847\\""]},\\""Host\\"":\\""gateway:8080\\"",\\""Body\\"":\\""eyJTaWduIjoiRDlEOThDN0VCQUE3MjY3QkNDNEYwMjgwRkM1QkE0MjczRjM2MUIwMEQ0MjIwNzQ5ODVBNDFBRTEzMzhGMUI2MSIsIklEIjoiYmZycDBwZGthMXJuZWJsMTBtYTAiLCJRdWVyeSI6ImZpbGU9Y2hyaXMuanBnIiwiRXhlY3V0aW9uU3RhdGUiOiJ7XCJ0eXBlXCI6XCJkYWdcIixcImRhZy1wb3NpdGlvblwiOlwiY29sb3JpemVcIn0iLCJEYXRhIjoiIiwiQ29udGV4dFN0b3JlIjp7fX0=\\"",\\""Method\\"":\\""POST\\"",\\""Path\\"":\\""\\"",\\""QueryString\\"":\\""\\"",\\""Function\\"":\\""upload-pipeline-dag\\"",\\""CallbackUrl\\"":null}"" timestamp:1542951013493950001 \'\r\nRequest for upload-pipeline-dag.\r\n```\r\nThe process `./handler` keeps on running on a sleeping state\r\n```bash\r\ndocker exec -it ff333ad45d5e ps -aef\r\nPID   USER     TIME   COMMAND\r\n    1 app        0:00 ./fwatchdog\r\n  402 app        0:00 ./handler\r\n```\r\n`handler` process state\r\n```bash\r\ndocker exec -it ff333ad45d5e cat /proc/402/status\r\nName:\thandler\r\nUmask:\t0022\r\nState:\tS (sleeping)\r\nTgid:\t402\r\nNgid:\t0\r\nPid:\t402\r\nPPid:\t1\r\nTracerPid:\t0\r\nUid:\t100\t100\t100\t100\r\nGid:\t65533\t65533\t65533\t65533\r\nFDSize:\t64\r\nGroups:\t65533 \r\nNStgid:\t402\r\nNSpid:\t402\r\nNSpgid:\t1\r\nNSsid:\t1\r\nVmPeak:\t   11632 kB\r\nVmSize:\t   11632 kB\r\nVmLck:\t       0 kB\r\nVmPin:\t       0 kB\r\nVmHWM:\t    6588 kB\r\nVmRSS:\t    6588 kB\r\nRssAnon:\t    1192 kB\r\nRssFile:\t    5396 kB\r\nRssShmem:\t       0 kB\r\nVmData:\t    5864 kB\r\nVmStk:\t     132 kB\r\nVmExe:\t    3036 kB\r\nVmLib:\t       8 kB\r\nVmPTE:\t      40 kB\r\nVmPMD:\t      20 kB\r\nVmSwap:\t       0 kB\r\nHugetlbPages:\t       0 kB\r\nThreads:\t7\r\nSigQ:\t0/7867\r\nSigPnd:\t0000000000000000\r\nShdPnd:\t0000000000000000\r\nSigBlk:\t0000000000000000\r\nSigIgn:\t0000000000000000\r\nSigCgt:\tfffffffe7fc1feff\r\nCapInh:\t00000000a80425fb\r\nCapPrm:\t0000000000000000\r\nCapEff:\t0000000000000000\r\nCapBnd:\t00000000a80425fb\r\nCapAmb:\t0000000000000000\r\nSeccomp:\t2\r\nSpeculation_Store_Bypass:\tvulnerable\r\nCpus_allowed:\t3\r\nCpus_allowed_list:\t0-1\r\nMems_allowed:\t1\r\nMems_allowed_list:\t0\r\nvoluntary_ctxt_switches:\t6\r\nnonvoluntary_ctxt_switches:\t36\r\n```\r\n`fwatchdog` process state\r\n```bash\r\nName:\tfwatchdog\r\nUmask:\t0022\r\nState:\tS (sleeping)\r\nTgid:\t1\r\nNgid:\t0\r\nPid:\t1\r\nPPid:\t0\r\nTracerPid:\t0\r\nUid:\t100\t100\t100\t100\r\nGid:\t65533\t65533\t65533\t65533\r\nFDSize:\t64\r\nGroups:\t65533 \r\nNStgid:\t1\r\nNSpid:\t1\r\nNSpgid:\t1\r\nNSsid:\t1\r\nVmPeak:\t    7656 kB\r\nVmSize:\t    7656 kB\r\nVmLck:\t       0 kB\r\nVmPin:\t       0 kB\r\nVmHWM:\t    3736 kB\r\nVmRSS:\t    3736 kB\r\nRssAnon:\t     728 kB\r\nRssFile:\t    3008 kB\r\nRssShmem:\t       0 kB\r\nVmData:\t    3384 kB\r\nVmStk:\t     132 kB\r\nVmExe:\t    2248 kB\r\nVmLib:\t       8 kB\r\nVmPTE:\t      36 kB\r\nVmPMD:\t      20 kB\r\nVmSwap:\t       0 kB\r\nHugetlbPages:\t       0 kB\r\nThreads:\t8\r\nSigQ:\t0/7867\r\nSigPnd:\t0000000000000000\r\nShdPnd:\t0000000000000000\r\nSigBlk:\tfffffffe7bfa3a27\r\nSigIgn:\t0000000000000000\r\nSigCgt:\tfffffffe7fc1feff\r\nCapInh:\t00000000a80425fb\r\nCapPrm:\t0000000000000000\r\nCapEff:\t0000000000000000\r\nCapBnd:\t00000000a80425fb\r\nCapAmb:\t0000000000000000\r\nSeccomp:\t2\r\nSpeculation_Store_Bypass:\tvulnerable\r\nCpus_allowed:\t3\r\nCpus_allowed_list:\t0-1\r\nMems_allowed:\t1\r\nMems_allowed_list:\t0\r\nvoluntary_ctxt_switches:\t50\r\nnonvoluntary_ctxt_switches:\t144\r\n```\r\n\r\n## Possible Solution\r\nUnknown, any help will be very helpful\r\n\r\n## Steps to Reproduce (for bugs)\r\nBuild, Deploy and Invoke `upload-pipeline-dag` \r\nhttps://github.com/s8sg/faas-flow/tree/issue-21/example\r\n\r\nI\'m working on a much simple example (without faas-flow) to test this scenario\r\n\r\n## Context\r\nIn `faas-flow` for a `DAG` execution, `faas-flow` forward the request to itself with execution state. For a DAG node which has more than one outdegree call to multiple `faas-flow` is made in an async manner using `async-function/my_func` via gateway. \r\n\r\n`faas-flow` consider, once submitted one or many (parallel) `async` request for `faas-flow` via gateway, the request would result an execution of different instance of `faas-flow` and scale the `faas-flow` function if required. \r\n\r\nAlthough in this case once `faas-flow` submits  many (parallel) `async` request for `faas-flow` via gateway, one instance of a new `faas-flow` executes but other get forever stuck at `watchdog`\r\n  \r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```bash\r\n  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | \'_ \\ / _ \\ \'_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  b24c5763d9b61e0c04018a722f8f2f765498f18a\r\n version: 0.7.8\r\n\r\nGateway\r\n uri:     http://127.0.0.1:8080\r\n version: 0.9.7\r\n sha:     17a9b736fb5591eda75a58fff5f89c8a1ca68d17\r\n commit:  Update CONTRIBUTING.md\r\n\r\n\r\nProvider\r\n name:          faas-swarm\r\n orchestration: swarm\r\n version:       0.4.4 \r\n sha:           7dc04949e6f0394c22b4bdaaa50ec2777e584d80\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```bash\r\nClient: Docker Engine - Community\r\n Version:           18.09.0\r\n API version:       1.39\r\n Go version:        go1.10.4\r\n Git commit:        4d60db4\r\n Built:             Wed Nov  7 00:47:43 2018\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.0\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.4\r\n  Git commit:       4d60db4\r\n  Built:            Wed Nov  7 00:55:00 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n```\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm \r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOS\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n[faas-flow forward request handling](https://github.com/s8sg/faas-flow/blob/master/template/faas-flow/handler.go#L581)\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n', 'comments': ['Hi please could you create a simple shell script or bash command to reproduce the problem?\r\n\r\nThanks,\r\n\r\nAlex', 'Derek set title: Potential watchdog or async issue', ""@alexellis  After spending more time I figured out that its **not a valid issue of openfaas**. The handler process do start execute but as the log is not coming till the process has expired it makes it hard to debug. \r\n\r\nIt will be good if we can stream the logs from running handler process and print it with watchdog in the realtime. \r\n\r\nI'm closing the issue. ""]}"
989,starting using docker-swarm,https://github.com/openfaas/faas/issues/989,"{'description': ""Hello folks,\r\nI'm trying to follow along: https://docs.openfaas.com/deployment/docker-swarm/\r\n\r\n### Password\r\n\r\nCan't find it ~/.openfaas/config.yaml\r\n\r\n![screen shot 2018-12-01 at 7 55 20 pm](https://user-images.githubusercontent.com/6694151/49334397-1c6a4100-f5a3-11e8-8b6c-af9753b7d51d.jpg)\r\n\r\n### Sample function\r\n\r\nWhen running:\r\n\r\n```\r\nfaas deploy -f \\\r\n  https://raw.githubusercontent.com/openfaas/faas/master/stack.yml\r\n```\r\n\r\ngetting errors.\r\n\r\n![screen shot 2018-12-01 at 7 52 38 pm](https://user-images.githubusercontent.com/6694151/49334404-3c9a0000-f5a3-11e8-8184-3d0bdc81455d.jpg)\r\n\r\n![screen shot 2018-12-01 at 7 52 09 pm](https://user-images.githubusercontent.com/6694151/49334406-40c61d80-f5a3-11e8-97bc-9571c093d9f4.jpg)\r\n\r\n![screen shot 2018-12-01 at 7 58 59 pm](https://user-images.githubusercontent.com/6694151/49334417-95699880-f5a3-11e8-962b-0c4d1a5c32dc.jpg)\r\n\r\n### Basic stuff\r\n\r\nI know it's all basic stuff basic I can't seems to find how to start.\r\nRunning Docker for mac. Thanks!\r\n\r\n"", 'comments': ['When you ran:\r\n```\r\n$ git clone https://github.com/openfaas/faas && \\\r\n  cd faas && \\\r\n  ./deploy_stack.sh\r\n```\r\nYou will have been provided with some credentials which you would use with the CLI to log in to the gateway: \r\n```\r\necho -n <some_hash_secret> | faas-cli login --username=admin --password-stdin\r\n```\r\nThen you should have a `config.yaml`', 'This might help too -> https://docs.openfaas.com/deployment/troubleshooting/#i-forgot-my-gateway-password', 'Hi Andy, I assume you may be travelling to Barcelona for Dockercon so I\'ve tried this scenario out with the latest Docker for Mac Edge edition:\r\n\r\nhttps://gist.github.com/alexellis/4a239cb355c9c289f986ec5a2a957c10\r\n\r\nHere are my logs ^\r\n\r\nThe other thing to think about is whether you have ""Kubernetes"" enabled and are deploying using the Docker Compose Stack file to Kubernetes?\r\n\r\nI\'l close the issue, but please feel free to keep commenting. \r\n\r\nAlex', ""Hello Alex,\r\nMy first name is Pascal :-p\r\n\r\nNo, I won't be part of Dockercon Barcelona. \r\nI also don't use KB8 at all and stick to Swarm.\r\n\r\nThanks to your password-recovery trick, everything runs normally now!\r\n\r\nMy end goal is to use (only) the faas-cli. I have dozen and dozen of functions and I would love them to run on faas.\r\n\r\nThanks for this beautiful project!"", ""Thanks, glad you got what you needed and I'll try to unlearn your name as Andy 😄 \r\n\r\nIf you find our work useful, please consider supporting it work via https://www.openfaas.com/donate""]}"
990,ui: refresh image tag on periodic basis,https://github.com/openfaas/faas/issues/990,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe image tag should change when deploying a new version in the UI.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nThe state has changed in the cluster but is cached on the UI for efficiency and shows the older tag version. This was confusing for one of our users ""zeeque"" who reported this on Slack.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nWe just need to bust the cache or refresh the objects when we refresh the list of functions.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Deploy a function\r\n2. Update the tag\r\n3. Deploy it again\r\n\r\n<img width=""1559"" alt=""screenshot 2018-12-04 at 09 58 09"" src=""https://user-images.githubusercontent.com/6358735/49439408-d5559900-f7b8-11e8-8cc9-795e373bdddf.png"">\r\n', 'comments': ['Derek assign: me']}"
1000,fwatchdog with memory leak ,https://github.com/openfaas/faas/issues/1000,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nfwatchdog with memory leak \r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nI run fwatchdog by docker\r\nset up env variable with fprocess=""cat /etc/hostname""\r\nuse ab to stress test\r\nab -n 10000 -c 100 http://localhost:8080 (port watchdog listened to) \r\nafter stress testing, the memory cost was stable. \r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nThe memory cost was increased and not released normally \r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nref to [issue](https://github.com/golang/go/issues/20989), use timer.AfterFunc to replace timer.NewTimer will solve this issue and it works fine of my service.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. run fwatchdog by docker run command: ```docker run -it --name=watchdog -p 8080:8080 --entrypoint=sh {IMAGE} ```\r\n2. export fprocess=""cat /etc/hostname""\r\n3. fwatchdog\r\n4. outside the docker, use ab to do benchmark ```ab -n 10000 -c 100 http://localhost:8080```\r\n5. use ```docker stats watchdog``` could see the memory cost \r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nSince memory be occupied and does not be release, other containers might be crashed due to out of memory. \r\n\r\nSince I got the solution, I try to make a PR now. But it takes a little time to follow the guideline.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 18.09.0\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? Kubernetes / localhost\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Centos\r\n\r\n* Link to your project or a code example to reproduce issue: \r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n', 'comments': [""Thank you very much for the PR. I'll take a look at this after the Christmas holidays.\r\n\r\nDo you have more output data or screenshot before/after that you can share?\r\n"", '@alexellis Merry Christmas!\r\n\r\nHere is what my test steps:\r\n\r\n## original fwatchdog\r\n![before](https://user-images.githubusercontent.com/42954621/50421016-e5bbd980-0875-11e9-8895-097a0792e1b1.png)\r\n\r\n## use timer.AfterFunc:\r\n![after](https://user-images.githubusercontent.com/42954621/50420992-b9a05880-0875-11e9-923f-94f7cefab110.png)\r\n\r\n## here is the dockerfile I used:\r\n```\r\nFROM alpine:3.8\r\n\r\nADD https://github.com/openfaas/faas/releases/download/0.9.6/fwatchdog /usr/bin\r\n# uncomment to use built fwatchdog\r\n# COPY ./fwatchdog /usr/bin/fwatchdog\r\nRUN chmod +x /usr/bin/fwatchdog\r\n\r\nCOPY ./fwatchdog /usr/bin/fwatchdog\r\n# Define your binary here\r\nENV fprocess=""/bin/cat /etc/hostname""\r\n\r\nCMD [""fwatchdog""]\r\n```\r\n\r\nafter docker run -p 8080:8080 watchdog:tag,\r\nuse ab command:\r\n```\r\nab -n 10000 -c 100 localhost:8080/\r\n```\r\n\r\nThanks for ur quickly reply!\r\n', 'So are we looking at a difference of 3mb RAM? Alex', 'Since this is just a sample case for testing, the difference is not quite large.\r\n\r\nIn our production environment,  some function could cost upon 2G ram and reach the limitation we set for docker and it goes stable for about 35MB after the modification we made.\r\n\r\nOr another testing way is to benchmark with ab for about 100 times, the difference might go big.\r\n\r\nMike\r\n\r\n', ""Can you show me how to reproduce the issue?\r\n\r\nCan you say what you're running inside the container as your function? \r\n\r\nYou may be best using the [of-watchdog](https://github.com/openfaas-incubator/of-watchdog) instead. The classic watchdog will spawn one process per request by design so if each process takes 10mb RAM and you only have one replica and 300 concurrent requests you'll hit that limit. "", ""> Can you show me how to reproduce the issue?\r\n\r\nIt always happens after a period of time with many invocations.\r\n\r\n> Can you say what you're running inside the container as your function?\r\n\r\nThe most used behaviors of functions are to query database. \r\n \r\n> You may be best using the [of-watchdog](https://github.com/openfaas-incubator/of-watchdog) instead. The classic watchdog will spawn one process per request by design so if each process takes 10mb RAM and you only have one replica and 300 concurrent requests you'll hit that limit.\r\nThanks for your information, it looks great!\r\n\r\nSince we use faas-cli to build / deploy function, we use default templates with fwatchdog.\r\n\r\nI'll start to use ofwatchdog but for classic fwatchdog, this is still an existed problem.\r\n\r\nHow about change the default templates to use ofwatchdog by default?\r\n\r\n"", ""Let's see if we can reproduce the issue scientifically with taking a memory profile from `go test`?  https://dev.to/davidsbond/golang-debugging-memory-leaks-using-pprof-5di8\r\n\r\nhttps://www.integralist.co.uk/posts/profiling-go/\r\n\r\nWhat binary/language are you using for your DB queries? \r\n\r\nAlex\r\n\r\n"", ""> Let's see if we can reproduce the issue scientifically with taking a memory profile from `go test`? https://dev.to/davidsbond/golang-debugging-memory-leaks-using-pprof-5di8\r\n\r\n> https://www.integralist.co.uk/posts/profiling-go/\r\n\r\nActually this problem seems the same as this [issue](https://github.com/golang/go/issues/20989)\r\nThe reproduced steps I posted are the same mentioned in the above issue.\r\n \r\nAnd I totally agree about memory profile testing should be included in! 👍 \r\n \r\n> What binary/language are you using for your DB queries?\r\nWe use nodejs to query neo4j via a lib.\r\nBut I think we could reproduced follow the example listed  [issue](https://github.com/golang/go/issues/20989)\r\n\r\nMany thanks for ur help and I would see if I could do something for this, too.\r\n \r\n"", 'Derek close: merged']}"
1002,cant deploy functions:no such host,https://github.com/openfaas/faas/issues/1002,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nI was trying to deploy some sample functions \r\n\r\nit seems that someting wrong with gateway (I am not sure), please help me.\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n`faas-cli deploy -f https://raw.githubusercontent.com/openfaas/faas/master/stack.yml`\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n`Parsed: https://raw.githubusercontent.com/openfaas/faas/master/stack.yml\r\nDeploying: hubstats.\r\n\r\nIs FaaS deployed? Do you need to specify the --gateway flag?\r\nPut http://openfaas.endpoint.com:8080/system/functions: dial tcp: lookup openfaas.endpoint.com on 10.0.1.1:53: no such host\r\n`\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: ` version: 0.8.1` ):\r\n version: 0.8.1\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nClient: Docker Engine - Community\r\n Version:           18.09.0\r\n API version:       1.39\r\n Go version:        go1.10.4\r\n Git commit:        4d60db4\r\n Built:             Wed Nov  7 00:47:43 2018\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.0\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.4\r\n  Git commit:       4d60db4\r\n  Built:            Wed Nov  7 00:55:00 2018\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nSwarm \r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nmacOs\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n\r\n"", 'comments': ['Can you help us by providing the steps to reproduce, please?  Are you running OpenFaaS locally? Do you have an OPENFAAS_URL environment variable set?', '@rgee0 I was installing  openfass according to the lab2. trying to deploy function by fass-cli. how can i check my OPENFAAS_URL environment? I just do what doc said. ', 'Thanks.\r\n\r\nTry `unset OPENFAAS_URL` or `export OPENFAAS_URL=http://127.0.0.1:8080` and then run the deploy command again.\r\n', 'I init docker swarm again, and it worked. I deployed functions successful. when I set alternative location by `export OPENFAAS_URL=http://openfaas.endpoint.com:8080` \r\nthe error appears again.\r\n`$ faas-cli list`\r\n`Cannot connect to OpenFaaS on URL: http://openfaas.endpoint.com:8080`', '> Thanks.\r\n> \r\n> Try `unset OPENFAAS_URL` or `export OPENFAAS_URL=http://127.0.0.1:8080` and then run the deploy command again.\r\n@rgee0 \r\nIt worked! thank you so so so much!!!', ""I thought this was the case.  The command provided is meant as an example such that `openfaas.endpoint.com` should be removed and replaced with your specific endpoint.  In This instance it isn't at all necessary as you're running with the defaults."", 'Just curious, but what file / doc page says to put `openfaas.endpoint.com` ?', 'https://github.com/openfaas/workshop/blob/master/lab2.md#learn-about-the-cli']}"
1023,remove & shutdown incorrect order (for docker swarm),https://github.com/openfaas/faas/issues/1023,"{'description': 'Added functions & services may depend on the `func` stack such that it cannot be shut down without first removing those functions.\r\n\r\n## Expected Behaviour\r\n\r\nFollowing along the docs for setting up in Docker Swarm, then installing the demo funcs, the instructions at https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md#stop-and-remove-openfaas should work.\r\n\r\n## Current Behaviour\r\n\r\nInstead, `docker stack rm func` fails with an error about a dependency.\r\n\r\n## Possible Solution\r\n\r\nReverse the order of the steps. Remove services first, then remove the func stack.\r\n', 'comments': [""Please feel free to submit a PR to the documentation site openfaas/docs. I'll remove the text in this file you linked to and think make it redirect to the docs site.\r\n\r\nAlex"", 'Turns out this is already fixed in the docs. https://docs.openfaas.com/deployment/troubleshooting/\r\n\r\nThanks for letting us know.\r\n\r\nAlex']}"
1025,npm err! 404 not found: package from private npm registry,https://github.com/openfaas/faas/issues/1025,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nHello folks!\r\n\r\n## Expected Behaviour\r\nAllow privates NPM Repository in faas-cli build\r\n\r\n## Current Behaviour\r\n\r\nWe use a private npm registry for our Node.js packages.\r\nUnfortunately we get an error message when building our OpenFaas function:\r\n\r\n```bash\r\nnpm ERR! code E404\r\nnpm ERR! 404 Not Found: <npm-package>@^1.33.7\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /root/.npm/_logs/2019-01-11T13_50_17_699Z-debug.log\r\n```\r\n```bash\r\nError: Cannot find module '<NPM-PACKAGE>'\r\n 2019/01/11 13:30:08 Error reading stderr: EOF\r\n     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:603:15)\r\n     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:603:15)\r\n     at Function.Module._load (internal/modules/cjs/loader.js:529:25)\r\n     at Function.Module._load (internal/modules/cjs/loader.js:529:25)\r\n     at Modu\r\n     at Modu\r\n 2019/01/11 13:30:01 stderr: le.require (internal/modules/cjs/loader.js:657:17)\r\n 2019/01/11 13:29:41 stderr: le.require (internal/modules/cjs/loader.js:657:17)\r\n     at require (internal/modules/cjs/helpers.js:22:18)\r\n     at require (internal/modules/cjs/helpers.js:22:18)\r\n     at Object.<anonymous> (/home/app/function/handler.js:2:16)\r\n     at Object.<anonymous> (/home/app/function/handler.js:2:16)\r\n     at Module._compile (internal/modules/cjs/loader.js:721:30)\r\n     at Object.Module._ex\r\n 2019/01/11 13:29:41 stderr: tensions..js (internal/modules/cjs/loader.js:732:10)\r\n     at require (internal/modules/cjs/helpers.js:22:18)\r\n     at Module.load (internal/modules/cjs/loader.js:620:32)\r\n     at tryModuleLoad (internal/modules/cjs/loader.js:560:12)\r\n     at Object.<anonymous> (/home/app/function/handler.js:2:16)\r\n     at Function.Module._load (internal/modules/cjs/loader.js:552:3)\r\n     at Module._compile (internal/modules/cjs/loader.js:721:30)\r\n```\r\n\r\nThe problem is theoretically known, but practically somehow cannot be solved without help. :)\r\n\r\nWe get these two commands into the build process of faas-cli ?\r\n\r\n```bash\r\nnpm set registry https://<NPM-REGISTRY>\r\nnpm adduser --registry https://<NPM-REGISTRY>\r\n```\r\n\r\nUnfortunately our .npmrc, which is supposed to define something like this, is not used...\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n```bash\r\nnpm set registry https://<NPM-REGISTRY>\r\nnpm adduser --registry https://<NPM-REGISTRY>\r\n```\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Uses a private NPM package in a Node.js app\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```bash\r\n  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | '_ \\ / _ \\ '_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  5b36c50280d961d3aa248bd17f901f4ef2774447\r\n version: 0.8.1\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```bash\r\nClient:\r\n Version:           18.09.1\r\n API version:       1.39\r\n Go version:        go1.10.6\r\n Git commit:        4c52b90\r\n Built:             Wed Jan  9 19:35:31 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.1\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.6\r\n  Git commit:       4c52b90\r\n  Built:            Wed Jan  9 19:02:44 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n```\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nSwarm\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux\r\n* Link to your project or a code example to reproduce issue:\r\nLink only on request per PM\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': [""Oky after a short think... it is quite clear!\r\n\r\nI adjusted the dockerfile:\r\n```bash\r\n# COPY function node packages and install, adding this as a separate\r\n# entry allows caching of npm install\r\nWORKDIR /home/app/function\r\n\r\nCOPY function/.npmrc ./                         # <--------------------- :)\r\n\r\nCOPY function/*.json ./\r\nRUN npm i || :\r\n```\r\nAlso tested, works for me.\r\n\r\nI'll leave it there, maybe someone else could use it."", 'You could do a PR for the node template(s) in the [templates repo](https://github.com/openfaas/templates) :smile: ', ""@JohnOllhorn you'll likely want to `rm` your .npmrc once you've completed `npm i`""]}"
1031,investigate: nats streaming crash/lock-up,https://github.com/openfaas/faas/issues/1031,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe connection to the NATS Streaming Server in the gateway should stay up and available to serve asynchronous requests.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n@padiazg observed with Swarm on two occasions that NATS Streaming appeared to stop accepting new asynchronous requests. I have also noticed this with Kubernetes in OpenFaaS Cloud Community Cluster on one occasion.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nTasks:\r\n- [ ] Run NATS Streaming in HA mode or with persistence so that it can be started if an issue is detected without losing data. (https://github.com/openfaas/docs/issues/101)\r\n- [ ] Document the three HA NATS instructions sent over from the NATS team in the docs site via https://github.com/openfaas/docs/issues/101 - in addition we need to give users clear instructions for Kubernetes + Swarm\r\n- [ ] Investigate whether the gateway can reconnect if the NATS Streaming TCP connection is severed (this may need to be simulated by patching the gateway code) - this may be related to whether NATS is running with an in-memory filesystem or with persistence\r\n- [ ] Add re-connect to the gateway handler.go code (publisher)\r\n- [ ] Add re-connect handler to the nats-queue-worker code (subscriber)\r\n- [ ] Evaluate current set of NATS Streaming Prometheus exporters and whether their metrics can be used to create alerts in AlertManager for HipChat/PagerDuty etc.\r\n\r\nI don\'t believe you can restart a connection / subscription if the NATS Streaming Server is running in in-memory mode. See also: https://github.com/openfaas/nats-queue-worker/pull/33\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Unclear\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nIf this crashes then manual action is required and it is currently not easy to know whether it has crashed from a dashboard/alert. This could affect people relying on NATS Streaming in production like @padiazg / Vision.\r\n\r\nThe configuration of NATS Streaming is ""memory"" by default:\r\n\r\n- https://github.com/openfaas/faas/blob/master/docker-compose.yml#L79 \r\n- https://github.com/openfaas/faas-netes/blob/master/chart/openfaas/templates/nats-dep.yaml#L36\r\n\r\nPatricio has done some experimentation with MySQL as a backing store\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:', 'comments': ['The reason NATS crashes is unknow to me, yet. But the way to reproduce it for testing purposes is killing NATS with this:\r\n```bash\r\n$ docker kill $(docker ps -qf ""name=func_nats"")\r\n``` \r\nAfter that you will get the same results as when it crashes ""in the wild""\r\n\r\nThen you can get the stack back to work with this:\r\n```bash\r\ndocker kill $(docker ps -qf ""name=func_nats"") $(docker ps -qf ""name=func_queue-worker"") $(docker ps -qf ""name=func_gateway"")\r\n```', ""I have some success, I'm testing right now reconnecting logic, but if everything will be fine, I should have PR with solution in around 2h."", 'https://github.com/openfaas/nats-queue-worker/pull/49', 'Summary: What I did so far?\r\n- Opened [Pull Request: nats-queue-worker#49](https://github.com/openfaas/nats-queue-worker/pull/49) and addressed all comments, which resolves task: \r\n> Add re-connect to the gateway handler.go code (publisher)\r\n- Opened [Pull Request: nats-queue-worker#52](https://github.com/openfaas/nats-queue-worker/pull/52) and addressed all comments, which resolves task: \r\n> Add re-connect handler to the nats-queue-worker code (subscriber)`\r\n\r\nI also did a research related to prometheus exporters for NATS streaming, and till official NATS exporter wouldn\'t support NATS Streaming metrics (there is open PR for that: https://github.com/nats-io/prometheus-nats-exporter/pull/54) our best (and actually the only one) option is to use this exporter: https://gitlab.com/civist/nats-streaming-exporter\r\nI couldn\'t find anything else, and tested that if it\'s exporting the metrics. I have build and pushed my own docker image and deployed it to my local swarm cluster of OpenFaaS adding to docker-compose.yml:\r\n```\r\n    nats-streaming-prometheus-exporter:\r\n        image: bartsmykla/nats-streaming-exporter:0.0.1\r\n        networks:\r\n            - functions\r\n        command: ""/nats-streaming-exporter -nats-uri http://nats:8222""\r\n        deploy:\r\n            resources:\r\n                limits:\r\n                    memory: 125M\r\n                reservations:\r\n                    memory: 50M\r\n            placement:\r\n                constraints:\r\n                    - \'node.platform.os == linux\'\r\n        ports:\r\n            - 9275:9275\r\n```\r\nso if you want to test that exporter too, feel free to use my image: `bartsmykla/nats-streaming-exporter:0.0.1`', 'Thank you for the update Bart.\r\n\r\nWhich metrics could @padiazg make use of to alert on or observe the health of his NATS Streaming instance/cluster?', 'I think: `natsstreaming_up`, `natsstreaming_exporter_json_parse_failures`, `natsstreaming_subscriptions_pending`. Here is the full list from the exporter:\r\n```\r\n&Exporter{\r\n\t\tURI:     u,\r\n\t\tTimeout: timeout,\r\n\t\tup: prometheus.NewGauge(prometheus.GaugeOpts{\r\n\t\t\tNamespace: namespace,\r\n\t\t\tName:      ""up"",\r\n\t\t\tHelp:      ""Was the last scrape of nats-streaming successful."",\r\n\t\t}),\r\n\t\ttotalScrapes: prometheus.NewCounter(prometheus.CounterOpts{\r\n\t\t\tNamespace: namespace,\r\n\t\t\tName:      ""exporter_total_scrapes"",\r\n\t\t\tHelp:      ""Current total nats-streaming scrapes."",\r\n\t\t}),\r\n\t\tjsonParseFailures: prometheus.NewCounter(prometheus.CounterOpts{\r\n\t\t\tNamespace: namespace,\r\n\t\t\tName:      ""exporter_json_parse_failures"",\r\n\t\t\tHelp:      ""Number of errors while parsing JSON."",\r\n\t\t}),\r\n\t\tclientsTotal:              newDesc(""clients"", ""Number of currently connected clients."", nil),\r\n\t\tchannelsTotal:             newDesc(""channels"", ""Current number of channels."", nil),\r\n\t\tstoreMessagesTotal:        newDesc(""store_messages"", ""Current number of messages in the store."", nil),\r\n\t\tstoreMessagesBytes:        newDesc(""store_messages_bytes"", ""Total size of the messages in the store."", nil),\r\n\t\tsubscriptionsTotal:        newDesc(""subscriptions"", ""Number of subscriptions."", []string{""channel"", ""client""}),\r\n\t\tsubscriptionsPendingTotal: newDesc(""subscriptions_pending"", ""Number of pending messages."", []string{""channel"", ""client""}),\r\n\t\tsubscriptionsStalledTotal: newDesc(""subscriptions_stalled"", ""Number of stalled subscriptions."", []string{""channel"", ""client""}),\r\n\t\tmessagesTotal:             newDesc(""messages"", ""Number of messages."", []string{""channel""}),\r\n\t\tmessagesBytes:             newDesc(""messages_bytes"", ""Size of the messages."", []string{""channel""}),\r\n\t}\r\n```', 'Resolved through patches to gateway and queue-worker']}"
1063,unit tests fail on armhf ,https://github.com/openfaas/faas/issues/1063,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe gateway unit tests should pass on armhf (Raspberry Pi)\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nThey currently fail 100% of the time due to the Prometheus exporter integration tests due to a ""closed channel"" error. This happened after upgrading the Prometheus go client, but may be related to timing.\r\n\r\nYou can also reproduce the error on a regular PC intermittently', 'comments': ['From last run by @rdimitrov :\r\n```\r\n/... | grep -v integration | grep -v /vendor/ | grep -v /template/) -cover     && CGO_ENABLED=0 GOOS=linux go build --ldflags ""-s -w     -X github.com/openfaas/faas/gateway/version.GitCommitSHA=${GIT_COMMIT_SHA}    -X \\""github.com/openfaas/faas/gateway/version.GitCommitMessage=${GIT_COMMIT_MESSAGE}\\""    -X github.com/openfaas/faas/gateway/version.Version=${VERSION}""     -a -installsuffix cgo -o gateway .\r\n ---> Running in d4bacfddac9e\r\n?       github.com/openfaas/faas/gateway    [no test files]\r\nok      github.com/openfaas/faas/gateway/handlers   0.006s  coverage: 28.9% of statements\r\nPASS\r\ncoverage: 43.9% of statements\r\npanic: send on closed channel\r\ngoroutine 21 [running]:\r\ngithub.com/openfaas/faas/gateway/vendor/github.com/prometheus/client_golang/prometheus.(*metricMap).Describe(...)\r\n    /go/src/github.com/openfaas/faas/gateway/vendor/github.com/prometheus/client_golang/prometheus/vec.go:222\r\ngithub.com/openfaas/faas/gateway/metrics.(*Exporter).Describe(0xc420172240, 0xc420174360)\r\n    /go/src/github.com/openfaas/faas/gateway/metrics/exporter.go:45 +0xce\r\ncreated by github.com/openfaas/faas/gateway/metrics.Test_Describe_DescribesThePrometheusMetrics\r\n    /go/src/github.com/openfaas/faas/gateway/metrics/exporter_test.go:41 +0x17d\r\nFAIL    github.com/openfaas/faas/gateway/metrics    0.009s\r\nok      github.com/openfaas/faas/gateway/plugin 0.010s  coverage: 81.4% of statements\r\n?       github.com/openfaas/faas/gateway/queue  [no test files]\r\nok      github.com/openfaas/faas/gateway/requests   0.021s  coverage: 75.0% of statements\r\nok      github.com/openfaas/faas/gateway/scaling    0.037s  coverage: 24.6% of statements\r\nok      github.com/openfaas/faas/gateway/types  0.015s  coverage: 81.8% of statements\r\n?       github.com/openfaas/faas/gateway/version    [no test files]\r\nThe command \'/bin/sh -c license-check -path ./ --verbose=false ""Alex Ellis"" ""OpenFaaS Project"" ""OpenFaaS Authors"" ""OpenFaaS Author(s)""     && test -z ""$(gofmt -l $(find . -type f -name \'*.go\' -not -path ""./vendor/*""))""     && go test $(go list ./... | grep -v integration | grep -v /vendor/ | grep -v /template/) -cover     && CGO_ENABLED=0 GOOS=linux go build --ldflags ""-s -w     -X github.com/openfaas/faas/gateway/version.GitCommitSHA=${GIT_COMMIT_SHA}    -X \\""github.com/openfaas/faas/gateway/version.GitCommitMessage=${GIT_COMMIT_MESSAGE}\\""    -X github.com/openfaas/faas/gateway/version.Version=${VERSION}""     -a -installsuffix cgo -o gateway .\' returned a non-zero code: 1\r\nmake: *** [ci-armhf-build] Error 1\r\n```\r\n\r\nThis [`defer close(ch)`](https://github.com/openfaas/faas/blob/b4a550327d6bddfb5a5316636e19a288345296c3/gateway/metrics/exporter_test.go#L39) is in a race with the go routine started a couple of lines further down.\r\nYou have 3 reads from the channel before the exit of the test func (which will close the channel), but in the go routine you invoke the [`Describe`](https://github.com/openfaas/faas/blob/b4a550327d6bddfb5a5316636e19a288345296c3/gateway/metrics/exporter.go#L39) function, that invokes 5 other `Describe`s each writing something. Thus, the last 2 channel writes are in a race with the close of the channel.\r\n\r\n```\r\n\te.metricOptions.ServiceMetrics.Counter.Describe(ch)\r\n\te.metricOptions.ServiceMetrics.Histogram.Describe(ch)\r\n```\r\n\r\nWays to fix this:\r\n\r\n1. Don\'t close the channel.\r\n2. Don\'t use a go routine.\r\n3. Is this test doing what you need? Could be that it\'s outdated and in a need of rewriting.\r\n\r\nI am surprised that it actually happens to work so often. I would expect almost 100% crash rate on a modern machine.', ""I was able to workaround this by just removing `defer close(ch)`\r\n\r\n```\r\ndiff --git a/gateway/metrics/exporter_test.go b/gateway/metrics/exporter_test.go\r\nindex 9a23a3cd..487e1565 100644\r\n--- a/gateway/metrics/exporter_test.go\r\n+++ b/gateway/metrics/exporter_test.go\r\n@@ -36,7 +36,6 @@ func Test_Describe_DescribesThePrometheusMetrics(t *testing.T) {\r\n        exporter := NewExporter(metricsOptions, nil)\r\n\r\n        ch := make(chan *prometheus.Desc)\r\n-       defer close(ch)\r\n\r\n        go exporter.Describe(ch)\r\n```\r\n\r\n@rosti is right about the race condition, still don't know why it works on any other architecture."", 'Thank you, guys! 👍 \r\nTested your patch on ARMHF where it was failing on almost every build and it was working, so I created a PR based on your suggestions.', 'Derek close: fixed', 'Thank you all, @rosti 👏 👍 ']}"
1073,openfaas nodejs cronjob?,https://github.com/openfaas/faas/issues/1073,"{'description': ""Hi, guys,\r\nI have more of a question than a problem, but I don't know where to ask it.\r\n\r\nI need a way to get an asynchronous Nodejs in OpenFaas which is started by a cronjob and not by a request?! @_@\r\n\r\nIt would be also best if there would be a possibility to start these services automatically (cronjob) and to delete them after completion...\r\n\r\nIs there still the possibility to run several OpenFaas services parallel?\r\n\r\nIs this possible with OpenFaas?"", 'comments': ['Hi thanks for your interest in the project. Have you tried reading the docs? https://www.openfaas.com\r\n\r\nAlex', ""Hi @JohnOllhorn please see the docs page on this: https://docs.openfaas.com/reference/cron/#scheduling-function-runs\r\n\r\n@zeerorg also has a project he's working on https://github.com/zeerorg/cron-connector\r\n\r\nAlex"", 'Derek close: question answered']}"
1076,performance tuning: scale_from_zero,https://github.com/openfaas/faas/issues/1076,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nWhen a function is not in the scaling cache and concurrent requests arrive, we should lock on a Mutex so that we don\'t make too many calls to the back-end to query the current amount of replicas\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nWe could have a ""thundering herd"" situation where all 1000 +/- requests call to the back end until the cache is updated for subsequent calls.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nWe could use a RWMutex in the scaler or in the cache for each unique function name rather than one for the whole cache.\r\n\r\nhttps://github.com/openfaas/faas/blob/master/gateway/scaling/function_scaler.go#L42\r\n\r\nhttps://github.com/openfaas/faas/blob/master/gateway/scaling/function_cache.go#L49', 'comments': ['Hi @alexellis \r\nI tried to repro this one and logs like this\r\n```\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.004336s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.004380s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.012845s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.012889s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.013766s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.010717s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 [Scale] function=go-echo 0 => 1 successful - 5.687057 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.010781s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 [Scale] function=go-echo 0 => 1 successful - 5.686727 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.003448 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.003748 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.002102 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.001983 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.001967 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.001708 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.014082s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.014079s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 [Scale] function=go-echo 0 => 1 successful - 5.704287 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 [Scale] function=go-echo 0 => 1 successful - 5.704139 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.001374 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 Forwarded [GET] to /function/go-echo - [200] - 0.001679 seconds\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 GetReplicas took: 0.014460s\r\nfunc_gateway.1.tv6jt4q9cmk4@pan    | 2019/02/11 11:43:21 [Scale] function=go-echo 0 => 1 successful - 5.706875 seconds\r\n```\r\n\r\nDo you want, we only call GetReplicas once and only scaling one time (this log scale from 0 to 1, 5 times)?', '/lock: inactivity']}"
1086,runc processes for functions constantly spawning,https://github.com/openfaas/faas/issues/1086,"{'description': 'When adding and scaling functions to an OpenFaas deployment running on Docker Swarm, runc processes are constantly exeucting for each instance of each function, and containerd-shim is consistently using 0.7% CPU per container\r\n\r\n## Expected Behaviour\r\nIdle functions doing no work should use little to no CPU\r\n\r\n## Current Behaviour\r\nExtensive CPU is being used, even when functions are idle, about 1% of the processor per instance deployed\r\n\r\n## Possible Solution\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Deploy OpenFaas via Docker Swarm\r\n2. Deploy one or more functions to OpenFaas\r\n3. Scale functions above 1\r\n\r\n## Context\r\nThis issue is causing extreme performance degradation as half or more of CPU resources on each Swarm node is being consumed.by containerd-shim and runc.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\nNot using FaaS-CLI\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nDocker 18.09.01\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nSwarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nUbuntu 16.04\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\nNothing in the troubleshooting guide references this problem.  The functions are executing, just with reduced speed because other resources are being consumed.  Below are example lines from an auditd log, note that runc is running on the same docker container over and over, but `docker ps` shows the container continuously running (not like it is exiting and restarting).\r\n```\r\ntype=EXECVE msg=audit(1550080419.553:16698): argc=9 a0=""runc"" a1=""--root"" a2=""/var/run/docker/runtime-runc/moby"" a3=""--log"" a4=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e/log.json"" a5=""--log-format"" a6=""json"" a7=""state"" a8=""d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\ntype=CWD msg=audit(1550080419.553:16698):  cwd=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\ntype=EXECVE msg=audit(1550080420.089:16735): argc=9 a0=""runc"" a1=""--root"" a2=""/var/run/docker/runtime-runc/moby"" a3=""--log"" a4=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e/log.json"" a5=""--log-format"" a6=""json"" a7=""state"" a8=""d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\ntype=CWD msg=audit(1550080420.089:16735):  cwd=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\ntype=EXECVE msg=audit(1550080420.389:16771): argc=9 a0=""runc"" a1=""--root"" a2=""/var/run/docker/runtime-runc/moby"" a3=""--log"" a4=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e/log.json"" a5=""--log-format"" a6=""json"" a7=""state"" a8=""d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\ntype=CWD msg=audit(1550080420.389:16771):  cwd=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\ntype=EXECVE msg=audit(1550080422.541:16934): argc=9 a0=""runc"" a1=""--root"" a2=""/var/run/docker/runtime-runc/moby"" a3=""--log"" a4=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e/log.json"" a5=""--log-format"" a6=""json"" a7=""state"" a8=""d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\ntype=CWD msg=audit(1550080422.541:16934):  cwd=""/run/docker/containerd/daemon/io.containerd.runtime.v1.linux/moby/d648526189b7116c6c11a8b28d450eba4acff121a6a502c84e45a4c0b26aaf9e""\r\n```\r\n\r\nThis runs continuously until the service are scaled down to 0.\r\n', 'comments': [""I may have figured out at least part of the issue.  I removed the HEALTHCHECK from the Dockerfile that bulds these functions (it was based on the python3 template Dockerfile), and rebuilt, and there is no longer a containerd-shim issue.  This might be my environment, apparently our rack has I/O issues, and since the healthcheck is looking for a file it may have simply been stalling too much time on I/O. The runc executions I'm guessing are how the healthchecks are run by the underlying Docker engine.  This can probably be closed."", 'Derek close']}"
1091,ability to specify the port in the deploy script as an argument,https://github.com/openfaas/faas/issues/1091,"{'description': 'The `docker-compose.yml` file has the port for the UI hardcoded, so a small change to the `deploy_stack` file and `docker-compose.yml` will allow to dynamically change it without editing any file directly.\r\n\r\n## Expected Behaviour\r\nAn example for the suggested changes:\r\n\r\n```\r\n./deploy_stack.sh --port 80\r\n```\r\nThis will allow the UI to run on port 80 instead of 8080.\r\n\r\nAlso the same would be for `deploy_stack.armhf.sh`\r\n\r\n## Current Behaviour\r\nRight now `deploy_stack.armhf.sh` does not accept any argument, mean while `deploy_stack.sh` accept only accepts `--no-auth` and `--help`.\r\n\r\n## Possible Solution\r\n\r\n1. Edit the `deploy_stack.sh` to export the environment variable \r\n```\r\nexport DEFAULT_PORT=""8080""\r\n\r\nwhile [ ! $# -eq 0 ]\r\ndo\r\n  case ""$1"" in\r\n    --port | -p)\r\n      if [ ! -z ""$2"" ];\r\n      then\r\n        export DEFAULT_PORT=$2\r\n      fi\r\n      ;;    \r\n    --no-auth | -n)\r\n      export BASIC_AUTH=""false""\r\n      ;;\r\n    --help | -h)\r\n      echo ""Usage: \\n [default]\\tdeploy the OpenFaaS core services\\n --no-auth [-n]\\tdisable basic authentication.\\n --port [-p]\\tdefine a new exposed port for the UI.\\n --help\\tdisplays this screen""\r\n      exit\r\n      ;;\r\n  esac\r\n  shift\r\ndone\r\n```\r\n\r\n2. Edit the `docker-compose` files to use the environment variable \r\n```\r\nversion: ""3.3""\r\nservices:\r\n    gateway:\r\n        ports:\r\n            - ${DEFAULT_PORT}:8080\r\n```\r\n\r\n3. Edit `deploy_stack.armhf.sh` and pass the arguments \r\n```\r\nsh ./deploy_stack.sh $1 $2\r\n```\r\n\r\n## Context\r\nThis will help to change the port for the UI without any manually edit to the files, not sure if this is something people may find useful or not.\r\n\r\n## Your Environment\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): \r\n0.8.3\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n18.09.2\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nSwarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux/Mac\r\n\r\n* Link to your project or a code example to reproduce issue:\r\nhttps://github.com/linuxjuggler/faas/commit/b9fc73a1e370051f1528c127be9138373e3c0ce8\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n', 'comments': [""Hi @linuxjuggler, I am not sure this is something we want to do.  It might suggest that the gateway is ready to be exposed on a secure port like 443 when it isn't.  In a production deployment, it is recommended that the gateway be exposed via a load balancer like nginx, which can then change the public port to be 80 as well as supporting ssl and other features required to securely expose the gateway.\r\n\r\nIs there a specific use-case that you are trying to solve by changing the port?  \r\n\r\nEspecially for swarm, I think we would be better served by providing a walk through on customizing the deployment in the docs and making special notes about security concerns that need to be considered when making certain changes. "", 'Derek add label: wontfix\r\nDerek add label: revist\r\nDerek close', 'Derek remove label: wontfix Derek add label: revist Derek close', ""hey @LucasRoesler , thanks for the feedback\r\n\r\n> Is there a specific use-case that you are trying to solve by changing the port?\r\n\r\nThere is no special cause I am trying to solve here, except than manually editing the yaml files.\r\n\r\n> it is recommended that the gateway be exposed via a load balancer like nginx\r\n\r\nThis is what I just did, thanks for the note.\r\n\r\n> Especially for swarm, I think we would be better served by providing a walk through on customizing the deployment in the docs and making special notes about security concerns that need to be considered when making certain changes.\r\n\r\nTotally agree with you about that, for example, the docs do not explain where the CLI should installed, which is something am still trying to figure out.\r\n\r\nEither way, thank you very much again for the feedback 👍 \r\n\r\nAm going to close it, so it won't provide any false assumption for anyone else."", 'Derek add label: wontfix']}"
1092,scaleway: swarm with multiple nodes not working as expected,https://github.com/openfaas/faas/issues/1092,"{'description': 'Following the instructions to deploy OpenFaas on a swarm with multiple nodes returns ""Error pulling metrics from provider/backend. Status code: 502"" which can be read from the console tab within the browser developer tools.\r\n\r\n## Expected Behaviour\r\nThe UI should not have any problem, and the system should work.\r\n\r\n## Current Behaviour\r\n1. The UI returns a hidden error which can be read from the console, which indicates that the services have some problems communicating with each other.\r\n\r\n![screen shot 2019-02-19 at 10 32 57 am](https://user-images.githubusercontent.com/27624/52997507-caaeb580-3431-11e9-80f4-8f5b8646f232.png)\r\n\r\n2. The CLI will also throw an error when you try to log in:\r\n\r\n```\r\nServer returned unexpected status code: 500 - Error pulling metrics from provider/backend. Status code: 502\r\n```\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Create a small swarm with three nodes; they are all managers\r\n\r\n![screen shot 2019-02-19 at 9 43 19 am](https://user-images.githubusercontent.com/27624/52997680-46a8fd80-3432-11e9-9440-c68d09d20dc6.png)\r\n\r\nThere is a hardware firewall between them with the following rules:\r\n* Allow all Outbound connections.\r\n* Allow Inbound ports: 22, 8080, 53, 4789, 2377, 2376, 7946\r\n\r\n![screen shot 2019-02-19 at 11 09 15 am](https://user-images.githubusercontent.com/27624/52999442-d2248d80-3436-11e9-95a7-7031f525aaf9.png)\r\n\r\n\r\n\r\n2. Add a small VPS in front of them with nginx installed and configured as a load balancer (with SSL termination using CloudFlare) which will load the requests between the three managers.\r\n\r\n```\r\nupstream swarm {\r\n    server     x.x.x.x:8080;\r\n    server     x.x.x.x:8080;\r\n    server     x.x.x.x:8080;\r\n}\r\n\r\nserver {\r\n    listen     80;\r\n    listen     443 ssl http2 default_server;\r\n\r\n    server_name x.x.x.x;\r\n\r\n    ssl        on;\r\n    ssl_certificate         /etc/nginx/ssl/certificate.pem;\r\n    ssl_certificate_key     /etc/nginx/ssl/certificate.key;\r\n\r\n    location / {\r\n        proxy_pass http://swarm;\r\n    }\r\n}\r\n```\r\n3. Execute the deploy command `./deploy_stack.sh` and wait a few sec for all the services to run.\r\n\r\n![screen shot 2019-02-19 at 9 44 10 am](https://user-images.githubusercontent.com/27624/52997880-cdf67100-3432-11e9-87e4-e4d104caccbd.png)\r\n\r\n4. Check the UI and log in, everything should work great, except the error you will notice whenever you try to deploy a function, in my case I get ""bad gateway"" response from Cloudflare http://d.zah.me/n56q1y\r\n\r\n5. Look at the developer console you will notice the error:\r\n\r\n![screen shot 2019-02-19 at 10 32 57 am](https://user-images.githubusercontent.com/27624/52997507-caaeb580-3431-11e9-80f4-8f5b8646f232.png)\r\n\r\n6. You try to login via the CLI, and you get the error:\r\n\r\n```\r\nServer returned unexpected status code: 500 - Error pulling metrics from provider/backend. Status code: 502\r\n```\r\n\r\n7. Looking at the gateway logs you will get the follwoing message, which indicate that the gateway cant find `faas-swarm` service:\r\n\r\n```\r\nfunc_gateway.1.sb0elhkc4kdw@master    | 2019/02/19 06:39:59 Forwarded [GET] to /system/functions - [502] - 0.009134 seconds\u2028func_gateway.1.sb0elhkc4kdw@master    | 2019/02/19 06:40:01 Get http://faas-swarm:8080/system/functions: dial tcp: lookup faas-swarm on 127.0.0.11:53: no such host\u2028func_gateway.1.sb0elhkc4kdw@master    | 2019/02/19 06:40:03 error with upstream request to: /system/functions, Get http://faas-swarm:8080/system/functions: dial tcp: lookup faas-swarm on 127.0.0.11:53: no such host\r\n```\r\n\r\n8. Running the command `docker stack ps func` you will notice that `faas-swarm` and `gateway` are not on the same node\r\n\r\n![screen shot 2019-02-19 at 9 39 35 am](https://user-images.githubusercontent.com/27624/52998214-c8e5f180-3433-11e9-871a-f3a89b4d84db.png)\r\n\r\n`faas-swarm` on master 2, meanwhile `gateway` on master 1.\r\n\r\n**PS**: One thing I might need to test more further is having a swarm from one manager and two workers.\r\n\r\n## Context\r\nAm sure this is not how the system should work if I switch all of this to only a swarm from one node it will work without any problem since they will all be on the same node.\r\nThe [lab1](https://github.com/openfaas/workshop/blob/master/lab1.md) assumes that you are going to use a swarm from one node.\r\n\r\n## Your Environment\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n commit:  a141dedf94ffeed84412365fd591bdc8999c5a1b\r\n version: 0.8.3\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```Client:\r\n Version:           18.09.2\r\n API version:       1.39\r\n Go version:        go1.10.6\r\n Git commit:        6247962\r\n Built:             Sun Feb 10 04:13:50 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.2\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.6\r\n  Git commit:       6247962\r\n  Built:            Sun Feb 10 03:42:13 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux Ubuntu Xenial (16.04 LTS) (GNU/Linux 4.4.0-142-generic x86_64),\r\non a Scaleway VPS (https://github.com/scaleway/image-ubuntu), I am using a small version they have built specifically for small servers\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\nSteps to Reproduce section should have all the logs I\'ve collected\r\n', 'comments': ['Hi,\r\n\r\nThanks for your interest in OpenFaaS.\r\n\r\nI am unaware of any issues with Swarm or multiple node support.\r\n\r\nWhat I\'ve done is to spend some time to set up a 3-node cluster on Packet.net and take some screenshots to demonstrate that this worked without error:\r\n\r\n<img width=""1048"" alt=""screenshot 2019-02-19 at 08 17 41"" src=""https://user-images.githubusercontent.com/6358735/52999886-e0ff4600-341e-11e9-87bc-f017fc4f74d6.png"">\r\n\r\n<img width=""1670"" alt=""screenshot 2019-02-19 at 08 16 04"" src=""https://user-images.githubusercontent.com/6358735/52999887-e0ff4600-341e-11e9-86df-3f9ff296e20a.png"">\r\n\r\nHere\'s my thoughts:\r\n\r\nI can\'t reproduce any multi-node issue in Swarm with OpenFaaS, so it points to your environment:\r\n\r\nCould I make a suggestion? Perhaps using DigitalOcean\'s Kubernetes service would work out better for you? This is a cheap and effective service and their offering is reliable.\r\n\r\nWhat you may have is an issue with your cloud provider (Scaleway\'s kernel image). What Image did you use there? They have a ""Docker"" image which may work better.\r\n\r\nYour Nginx configuration could also be part of the problem, or the firewall rules you have picked.\r\n\r\nI\'m going to close this issue since it is not a problem with OpenFaaS, however if you can how that this issue is a problem with OpenFaaS we\'ll prioritise it and fix it.\r\n\r\n* Try DigitalOcean\r\n\r\nhttps://www.openfaas.com/blog/digitalocean-one-click/\r\nhttps://www.openfaas.com/blog/deploy-digitalocean-ansible/\r\nhttps://blog.alexellis.io/digitalocean-kubernetes-engine/\r\n\r\nI can suggest other clouds, but if you\'re using Scaleway, I assume that economy is important?\r\n\r\n* Use Scaleway support\r\n\r\n* Use the Docker Forum for support\r\n\r\nhttps://forums.docker.com\r\n\r\nGood luck\r\n\r\nAlex', ""Never mind guys, thanks for all the help.\r\n\r\nI'll go over all the notes that you have mentioned and see what is the issue.\r\n\r\nThanks again,\r\n\r\nHave a nice day"", ""I found the issue. The Firewall should have the port `53` open for both TCP/UDP \r\n\r\n![screen shot 2019-02-19 at 12 17 07 pm](https://user-images.githubusercontent.com/27624/53003638-7959f280-3440-11e9-99b8-1a372e0752fd.png)\r\n\r\n![screen_shot_2019-02-19_at_12_22_26_pm](https://user-images.githubusercontent.com/27624/53003944-29c7f680-3441-11e9-8c08-bb34383c1c1f.png)\r\n\r\n\r\nWhich is something the docs didn't mention, the only thing it has related to [swarm ports](https://docs.openfaas.com/deployment/docker-swarm/#12-join-any-workers-you-need), and I suggest that the docs say more information about the required ports for the system to work.\r\n\r\nSorry, @alexellis  if I was rude to you or anyone.\r\n\r\nHave a nice day."", 'Great to see that you figured it out 👍 The OpenFaaS docs link to the Swarm documentation that details the ports needed etc. Maybe this will help another user in the future. \r\n\r\nAlex', 'Derek lock: resolved']}"
1109,chunked response from function is blocked,https://github.com/openfaas/faas/issues/1109,"{'description': 'Dear maintainers,\r\n\r\nI created an issue to of-watchdog repository (https://github.com/openfaas-incubator/of-watchdog/issues/49).\r\nAnd I think openfaas itself also has similar issues.\r\n\r\n----\r\n\r\n\r\nI wrote my template that is similar to https://github.com/openfaas-incubator/python-flask-template/tree/master/template/python3-flask.\r\n\r\nThe different from the original is that my template uses stream response (or, chunked response) as follows.\r\n\r\n```py\r\n@app.route(""/"", defaults={""path"": """"}, methods=[""POST"", ""GET""])\r\n@app.route(""/<path:path>"", methods=[""POST"", ""GET""])\r\ndef main_route(path):\r\n    ...\r\n    def gen():\r\n        yield ""1""\r\n        time.sleep(1)\r\n        yield ""2""\r\n        time.sleep(1)\r\n        yield ""3""\r\n\r\n    return Response(gen())\r\n```\r\n\r\nWhen I invoke a function from the template, the function does not return response chunk by chunk.\r\nIt blocks 3 seconds, and then, returns whole the response (1, 2 and 3) all at once.\r\n\r\n## Expected Behaviour\r\nFunction returns response chunk by chunk.\r\n\r\n## Current Behaviour\r\nFunction blocks 3 seconds, and then, returns whole the response all at once.\r\n\r\n## Possible Solution\r\nThe following code may block until whole the response returned.\r\n\r\nhttps://github.com/openfaas/faas/blob/04d240aac26acdaf49863dbab768b4f5cb311d84/gateway/handlers/forwarding_proxy.go#L130\r\n\r\nAnd I found a hint to solve this issue in httputil package\'s ReverseProxy.copyBuffer method.\r\n\r\nhttps://golang.org/src/net/http/httputil/reverseproxy.go#L335\r\n\r\ncopyBuffer method reads response little by little and writes to maxLatencyWriter\r\n\r\nhttps://golang.org/src/net/http/httputil/reverseproxy.go#L366\r\n\r\nand maxLatencyWriter flushes periodically.\r\n\r\nhttps://golang.org/src/net/http/httputil/reverseproxy.go#L418\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. fetch this template https://github.com/openfaas-incubator/python-flask-template/tree/master/template/python3-flask\r\n2. edit the template as described above\r\n3. create new function from the template\r\n4. build, push, deploy and invoke the function\r\n\r\n## Your Environment\r\nDocker version 18.09.1, build 4c52b90\r\nDocker swarm\r\nLinux (vagrant, vm.box = ""bento/centos-7.4"")\r\n\r\nThank you.', 'comments': [""Hi,\r\n\r\nThanks for your interest in OpenFaaS.\r\n\r\nI see that returning chunked-encoding is actually supported and not blocked, it just gets buffered before being returned to you.\r\n\r\n> Function blocks 3 seconds, and then, returns whole the response all at once.\r\n\r\nIn this example your client should be blocked for two seconds, not 3 given you have `sleep(1)` only twice.\r\n\r\nThe example given is a contrived example. Can you explain your business use-case which specifically needs a chunked-encoding to stream to the caller? Just to be up-front about this, it's unlikely to change, but I'd be curious to know more.\r\n\r\nIf you have long-running functions my advice would be to use the asynchronous processing in OpenFaaS. \r\n\r\nhttps://docs.openfaas.com/deployment/troubleshooting/#asynchronous-functions\r\n\r\nI'll close the issue, but please keep commenting.\r\n\r\nAlex""]}"
1110,node hmac validation,https://github.com/openfaas/faas/issues/1110,"{'description': 'Hey everyone!\r\n\r\nI just wrote a tiny library to do the Hmac checking for the functions using Node.JS (The examples that I found use Python) and included some (hopefully) useful documentation for future reference\r\n\r\nFeel free to use it and change it as you want!\r\nhttps://github.com/cabrerabywaters/faas-node-gatekeeper', 'comments': [""That's really cool. Could you submit it to the community.md file in the projects section?\r\n\r\nAre you connected on Slack yet too? https://docs.openfaas.com/community\r\n\r\nThanks,\r\n\r\nAlex"", '@alexellis \r\nSure will do it right away\r\nNot yet on slack, will go do it now ;) Thanks']}"
1116,can't access ui openfaas portal,https://github.com/openfaas/faas/issues/1116,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\nMy problem I can\'t access to UI\r\nI can\'t deploy function\r\n\r\n\r\nI init docker swarm with \r\n`docker swarm init --advertise-addr 10.0.0.8`\r\nDeploy stack \r\n`./deploy_stack.sh --no-auth`\r\n\r\n```\r\n22:35 $ docker service ls\r\nID                  NAME                MODE                REPLICAS            IMAGE                         PORTS\r\n75ojg0yf2aor        func_alertmanager   replicated          0/1                 prom/alertmanager:v0.16.1\r\nsjczbm8a6wkw        func_faas-swarm     replicated          0/1                 openfaas/faas-swarm:0.6.1\r\ncj4k830hut2t        func_gateway        replicated          0/1                 openfaas/gateway:0.11.1       *:8080->8080/tcp\r\ntahzu915p5w9        func_nats           replicated          0/1                 nats-streaming:0.11.2\r\nbpv1z9cmj6yh        func_prometheus     replicated          0/1                 prom/prometheus:v2.7.1        *:9090->9090/tcp\r\nka3vj2k8fcqp        func_queue-worker   replicated          0/1                 openfaas/queue-worker:0.7.1\r\n``` \r\n\r\n```\r\nID                  NAME                IMAGE                     NODE                DESIRED STATE       CURRENT STATE            ERROR                              PORTS\r\nt1gmabs12wfd        func_gateway.1      openfaas/gateway:0.11.1                       Running             Pending 10 minutes ago   ""no suitable node (scheduling …""\r\n```\r\n\r\n`22:35 $ faas-cli deploy -f https://raw.githubusercontent.com/openfaas/faas/master/stack.yml`\r\n`Put http://127.0.0.1:8080/system/functions: dial tcp 127.0.0.1:8080: connect: connection refuse`\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\n22:11 $ faas-cli version\r\n  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | \'_ \\ / _ \\ \'_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  a141dedf94ffeed84412365fd591bdc8999c5a1b\r\n version: 0.8.3\r\n```\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```\r\n22:08 $ docker version\r\nClient:\r\n Version:           18.09.3\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        774a1f4\r\n Built:             Thu Feb 28 06:53:11 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.2\r\n  API version:      1.39 (minimum version 1.24)\r\n  Go version:       go1.10.6\r\n  Git commit:       6247962\r\n  Built:            Sun Feb 10 04:28:48 2019\r\n  OS/Arch:          windows/amd64\r\n  Experimental:     false\r\n\r\n22:12 $ docker info\r\nContainers: 5\r\n Running: 0\r\n Paused: 0\r\n Stopped: 5\r\nImages: 2\r\nServer Version: 18.09.2\r\nStorage Driver: windowsfilter\r\n Windows:\r\nLogging Driver: json-file\r\nPlugins:\r\n Volume: local\r\n Network: ics l2bridge l2tunnel nat null overlay transparent\r\n Log: awslogs etwlogs fluentd gelf json-file local logentries splunk syslog\r\nSwarm: active\r\n NodeID: a4b5sev082n4wt725w20mt3vj\r\n Is Manager: true\r\n ClusterID: g8cjbjr06fz0f85a0xmry5zvx\r\n Managers: 1\r\n Nodes: 1\r\n Default Address Pool: 10.0.0.0/8\r\n SubnetSize: 24\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 10\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n  Force Rotate: 0\r\n Autolock Managers: false\r\n Root Rotation In Progress: false\r\n Node Address: 10.0.75.1\r\n Manager Addresses:\r\n  10.0.75.1:2377\r\nDefault Isolation: hyperv\r\nKernel Version: 10.0 17134 (17134.1.amd64fre.rs4_release.180410-1804)\r\nOperating System: Windows 10 Pro Version 1803 (OS Build 17134.590)\r\nOSType: windows\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 15.88GiB\r\nName: DESKTOP-3T10SA6\r\nID: CM23:4PLG:B2NQ:NA4X:M5W3:ANSQ:4QHK:SDZH:EBL5:QUBU:IJ3R:NJ2K\r\nDocker Root Dir: C:\\ProgramData\\docker\r\nDebug Mode (client): false\r\nDebug Mode (server): true\r\n File Descriptors: -1\r\n Goroutines: 143\r\n System Time: 2019-03-04T22:12:35.1714479+01:00\r\n EventsListeners: 0\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\nProduct License: Community Engine\r\n\r\n```\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMicrosoft Windows 10 Professionnel\r\nVersion\t10.0.17134 Numéro 17134\r\n\r\n', 'comments': [""Hi,\r\n\r\nFrom the output you posted I believe you have your Docker configured to run Windows containers which is why this is not working for you. Please switch into Linux mode and try again. \r\n\r\nIf that's not the case I'll reopen the issue. \r\n\r\nAlex"", 'Derek add label: support']}"
1120,alartmanager always pending but not fire,https://github.com/openfaas/faas/issues/1120,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nHello. im just deploy a new OpenFaaS with yaml to my kubernetes cluster, and I created a function using go template from Templates named go-fn.  I deploy it with followed command:\r\n![image](https://user-images.githubusercontent.com/39589657/54064232-6b341080-424d-11e9-8d5b-22261131477d.png)\r\n\r\nThen I tested it with the command followed to test auto-scaling:\r\n![image](https://user-images.githubusercontent.com/39589657/54064248-89017580-424d-11e9-9c8a-4369ac9dc84a.png)\r\n\r\nFrom Promethus, I can observed Alerts, but its states stayed pending but not fired:\r\n![image](https://user-images.githubusercontent.com/39589657/54064222-5ce5f480-424d-11e9-9dc4-fda042b03697.png)\r\n\r\nFrom Grafana.\r\n![image](https://user-images.githubusercontent.com/39589657/54064305-00370980-424e-11e9-8ca4-77c3a66f9145.png)\r\n\r\nIs anything I made a mistake? thank you\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nFire alert from Promethus, and go-fn replicas auto-scaling to more than 1.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nalert  statys pending and no auto-scaling.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\nCLI:\r\n commit:  a141dedf94ffeed84412365fd591bdc8999c5a1b\r\n version: 0.8.3\r\n\r\nGateway\r\n uri:     http://127.0.0.1:31112\r\n version: 0.11.1\r\n sha:     c394b09ae65177b3c6948b2c22b890068a8e6283\r\n commit:  Bump to nats-queue-worker 0.7.0\r\n\r\n\r\nProvider\r\n name:          faas-netes\r\n orchestration: kubernetes\r\n version:       0.7.0 \r\n sha:           ab9b56c0760eadba05762fa53dbe99d890bc9e19\r\n\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nServer:\r\n Engine:\r\n  Version:          18.06.3-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.10.3\r\n  Git commit:       d7080c1\r\n  Built:            Wed Feb 20 02:28:17 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n  k8s\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n  CentOS\r\n\r\n\r\n"", 'comments': ['It seems loop 10000 is too short, when I change it to 100k it works. ', 'Thanks for your interest. Glad you could work this out on your own too.\r\n\r\n--\r\nJoin Slack:\r\nhttps://docs.openfaas.com/community']}"
1121,prometheus config: scrape gateway on port 8082,https://github.com/openfaas/faas/issues/1121,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nWe should get Prometheus to scrape the gateway on port 8082 due to 0.12.0 moving the port to make it internal.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nUsers cannot yet upgrade until we release this change.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nUpdate the config file. @viveksyngh "", 'comments': []}"
1124,scale up policy error,https://github.com/openfaas/faas/issues/1124,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\nHello, I made some tests these days and I found scale up policy seems not worked very well. \r\nFor example:It is a template function with golang\r\n![image](https://user-images.githubusercontent.com/39589657/54183722-c9782200-44df-11e9-8704-83078ee4afa1.png)\r\n\r\nwhen function runing, grafana shows that:\r\n![image](https://user-images.githubusercontent.com/39589657/54184039-9c783f00-44e0-11e9-884c-029f3ba2c315.png)\r\n\r\nyou can find scale down invoked even if qps stays at a high level.\r\nI also checked the logs from container gateway, it shows replicas scale down from 5 to 1\r\n![image](https://user-images.githubusercontent.com/39589657/54184586-f9c0c000-44e1-11e9-9d53-1e03ef81c8ab.png)\r\n\r\nfrom code:\r\n![image](https://user-images.githubusercontent.com/39589657/54184849-92efd680-44e2-11e9-8808-ceb51171bb2b.png)\r\n\r\nIm not sure the reason of the issue, I will try to print the status value to find out if it is a bug.\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nscale down not invoked \r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nfunc replicas  scale down from 5 to 1.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. \r\n2.\r\n3.\r\n4.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\nFaaS-CLI version ( Full output from: faas-cli version ):\r\nCLI:\r\ncommit: a141dedf94ffeed84412365fd591bdc8999c5a1b\r\nversion: 0.8.3\r\nGateway\r\nuri: http://127.0.0.1:31112\r\nversion: 0.11.1\r\nsha: c394b09\r\ncommit: Bump to nats-queue-worker 0.7.0\r\n\r\nProvider\r\nname: faas-netes\r\norchestration: kubernetes\r\nversion: 0.7.0\r\nsha: ab9b56c0760eadba05762fa53dbe99d890bc9e19\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nServer:\r\nEngine:\r\nVersion: 18.06.3-ce\r\nAPI version: 1.38 (minimum version 1.12)\r\nGo version: go1.10.3\r\nGit commit: d7080c1\r\nBuilt: Wed Feb 20 02:28:17 2019\r\nOS/Arch: linux/amd64\r\nExperimental: false\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nk8s\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nCentOS 7.4\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': ['I add the print and log shows:\r\n![image](https://user-images.githubusercontent.com/39589657/54187487-9ede9700-44e8-11e9-9c9c-0ab414c84bc0.png)\r\n\r\nDoes it caused by the default alert rule ""APIHighInvocationRate"" ?', 'I change the default alert rule as followed:\r\n![image](https://user-images.githubusercontent.com/39589657/54262682-c6496880-45a9-11e9-8c58-d67c7b63d699.png)\r\n\r\nIt will send alert continusly after invoke function once.\r\n\r\nPart of the gateway logs, it seems AlertManager continues send resolved and fire notification to gateway:\r\n> 2019/03/13 07:45:08 Alert received.\r\n2019/03/13 07:45:08 {""receiver"":""scale-up"",""status"":""firing"",""alerts"":[{""status"":""resolved"",""labels"":{""alertname"":""APIHighInvocationRate"",""function_name"":""go-fn"",""monitor"":""faas-monitor"",""service"":""gateway"",""severity"":""major"",""value"":""111.00328868199985""},""annotations"":{""description"":""High invocation total on "",""summary"":""High invocation total on ""},""startsAt"":""2019-03-13T07:40:53.324404523Z"",""endsAt"":""2019-03-13T07:43:53.324404523Z"",""generatorURL"":""http://prometheus-66b6685ffd-tzww4:9090/graph?g0.expr=sum+by%28function_name%29+%28gateway_functions_seconds_sum%29+%3E+0\\u0026g0.tab=1""},{""status"":""firing"",""labels"":{""alertname"":""APIHighInvocationRate"",""function_name"":""go-fn"",""monitor"":""faas-monitor"",""service"":""gateway"",""severity"":""major"",""value"":""111.09178184899983""},""annotations"":{""description"":""High invocation total on "",""summary"":""High invocation total on ""},""startsAt"":""2019-03-13T07:41:53.324404523Z"",""endsAt"":""2019-03-13T07:47:23.324404523Z"",""generatorURL"":""http://prometheus-66b6685ffd-tzww4:9090/graph?g0.expr=sum+by%28function_name%29+%28gateway_functions_seconds_sum%29+%3E+0\\u0026g0.tab=1""}],""groupLabels"":{""alertname"":""APIHighInvocationRate"",""service"":""gateway""},""commonLabels"":{""alertname"":""APIHighInvocationRate"",""function_name"":""go-fn"",""monitor"":""faas-monitor"",""service"":""gateway"",""severity"":""major""},""commonAnnotations"":{""description"":""High invocation total on "",""summary"":""High invocation total on ""},""externalURL"":""http://alertmanager-6b69d64c7c-2jwpq:9093"",""version"":""4"",""groupKey"":""{}:{alertname=\\""APIHighInvocationRate\\"", service=\\""gateway\\""}""}\r\n2019/03/13 07:45:08 [handleAlerts] Alert is &{firing scale-up [{resolved {APIHighInvocationRate go-fn}} {firing {APIHighInvocationRate go-fn}}]}:\r\n2019/03/13 07:45:08 GetReplicas took: 0.004406s\r\n2019/03/13 07:45:08 status=resolved, step=1\r\n2019/03/13 07:45:08 [Scale] function=go-fn 3 => 1.\r\n2019/03/13 07:45:08 GetReplicas took: 0.002665s\r\n2019/03/13 07:45:08 status=firing, step=1\r\n2019/03/13 07:45:08 [Scale] function=go-fn 1 => 2.\r\n2019/03/13 07:45:08 error scaling HTTP code 500, http://127.0.0.1:8081/system/scale-function/go-fn\r\n2019/03/13 07:45:08 [error scaling HTTP code 500, http://127.0.0.1:8081/system/scale-function/go-fn]\r\n2019/03/13 07:45:08 Forwarded [POST] to /system/alert - [500] - 0.022379 seconds\r\n\r\n\r\n> ', ""Hi thank you for your interest in the project.\r\n\r\nWe've done a lot of testing on the auto scaling and continue to review it over time. We don't consider a bash loop appropriate for performance testing so this was outlined in our documentation around 2 years ago so that anyone in the community had a good reference on how to set up an environment and what tools to use. Hope you find this information below useful. \r\n\r\nMore here in the docs:\r\n\r\nhttps://docs.openfaas.com/architecture/performance/\r\n\r\nExample with proper tool - hey:\r\n\r\nhttps://github.com/openfaas/workshop/blob/master/lab9.md\r\n\r\n\r\nAlex"", 'Hi, alex. Thank you for your reply.\r\nIn fact it is not a performance testing. \r\n\r\nI followed the steps what described in Lab 9:\r\nhttps://github.com/openfaas/workshop/blob/master/lab9.md\r\n\r\nIn Monitor for alerts session,\r\n\r\n> Now stop the bash script and you will see the replica count return to 1 replica after a few seconds.\r\n\r\nBut in my occasion, the replica return to 1 replica when curl sending continuesly. you can find at the grafana pic before. ', ""Please treat this as a performance testing exercise and follow my recommendations.\r\n\r\nYou need to use `hey`, not a curl loop, I'm very very clear about this in the lab.\r\n\r\nAlex"", 'https://github.com/openfaas/workshop/blob/master/lab9.md#trigger-scaling-of-a-go-function', 'Hello Alex, Thanks for your help.\r\nI just tested with hey. Yes, you are right. During the test there is no scale down invoked. \r\n![image](https://user-images.githubusercontent.com/39589657/54323659-3f41d200-4635-11e9-812b-2a60df63ff27.png)\r\n\r\nBut have you ever tested with bash loop? do you know the reason why the ""resolved"" notification sended by the AlertManager during the bash loop testing? \r\n\r\nThank you.\r\n']}"
1127,watchdog: content-length environment variable not consistent naming,https://github.com/openfaas/faas/issues/1127,"{'description': '## Expected Behaviour\r\nContent-Length header value should be exported as an environment variable `Http_Content_Length`\r\n\r\n## Current Behaviour\r\nContent-Length header value should be exported as an environment variable `Http_ContentLength`. This is not consistent with other http headers, where the convention is to use the header name with `-` replaced with `_`. See:\r\n\r\n```\r\nHttp_Accept=application/json, text/plain, */*\r\nHttp_Cookie=arp_scroll_position=287\r\nHttp_Referer=http://localhost:8080/ui/\r\nHttp_Accept_Language=en-GB,en;q=0.9\r\nHttp_Content_Type=text/plain\r\nHttp_Origin=http://localhost:8080\r\nHttp_X_Forwarded_Host=localhost:8080\r\nHttp_Connection=keep-alive\r\nHttp_User_Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36\r\nHttp_Accept_Encoding=gzip, deflate, br\r\nHttp_X_Call_Id=21a000bd-8c96-4925-bb4d-038469ab253c\r\nHttp_X_Forwarded_For=10.255.0.2:56402\r\nHttp_X_Start_Time=1552672677370023500\r\nHttp_Method=POST\r\nHttp_ContentLength=-1\r\nHttp_Path=/\r\nHttp_Host=env:8080\r\n```\r\n\r\n\r\n## Possible Solution\r\nTo enable backwards compatibility keep the existing `Http_ContentLength` environment variable.\r\n\r\nAdd new `Http_Content_Length` environment variable\r\n\r\n## Todo\r\n\r\nDecide how to depreciate `Http_ContentLength` ?\r\n\r\n', 'comments': [""SGTM.\r\n\r\nFor the deprecation publish both names and in the future we'll deprecate the older one. \r\n\r\nDo you have bandwidth for this and if not could you find someone? \r\n\r\n* https://github.com/openfaas/faas/tree/master/watchdog\r\n* https://github.com/openfaas-incubator/of-watchdog\r\n\r\nAlex"", ""@alexellis it's on my list"", ""@alexellis @ewilde of-watchdog already has `Http_Content_Length`: https://github.com/matipan/of-watchdog/blob/master/main.go#L270-L273 \r\nSo we don't need to change anything there. I validated deploying a new function that prints the contents of `Http_Content_Length` and it does have the correct value.""]}"
1131,auto-scale doesn't work,https://github.com/openfaas/faas/issues/1131,"{'description': ""<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nI open the switch of scale from zero, and install and deploy faas-idler.\r\n\r\nWhen I use \r\n```\r\n    curl -X POST http://domain.com:port/async-function/nodeinfo -d ''\r\n```\r\nmy k8s will start a pod, so that the function will work.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nWhen I use \r\n```\r\n    curl -X POST http://domain.com:port/async-function/nodeinfo -d ''\r\n```\r\nThe pod doesn't scale, and the queue worker get a i/o timeout.\r\n\r\n\r\nbut when I use\r\n```\r\n    curl -X POST http://domain.com:port/function/nodeinfo -d ''\r\n```\r\nThe pod scale to 1. \r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nI think this is a bug....(sorry...)\r\n\r\nI can use any function before check their available replica. But \r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. open scale from zero.deploy openfaas-idler \r\n2. deploy sample function nodeinfo ( output CPU hostname information )\r\n3. \r\n```\r\n    curl -X POST http://domain.com:port/async-function/nodeinfo -d ''\r\n```\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nasync-invoke:\r\nwhen pod was ` pod>1 `, the auto-scale works. but when `pod=0` auto-scale doesn't work.\r\nsync-invoker is OK\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n"", 'comments': [""I'll look into this issue"", 'Scale from zero is not supported for asynchronous invocations of functions at present and issues exist to track that already.\r\n\r\nThis feature was logged 8 months ago but nobody has committed to working on it. See below:\r\n\r\nhttps://github.com/openfaas/nats-queue-worker/issues/32\r\n\r\nIf you expect to invoke functions asynchronously then I would suggest that you do not mark them as valid for scaling to zero.\r\n\r\nFeel free to +1 the issue linked. \r\n\r\nAlex']}"
1132,non-helm deployment unable to load /etc/openfaas/basic-auth-user,https://github.com/openfaas/faas/issues/1132,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nAttempting to enable basic_auth on API gateway using kubectl\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nGateway pod is in state of CrashLoopBackOff\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nDunno\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.Set namespaces ...\r\n```\r\nkubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml\r\n```\r\n\r\n2. Create secrets ...\r\n```\r\nkubectl -n openfaas create secret generic basic-auth \\\r\n--from-literal=basic-auth-user=myusername \\\r\n--from-literal=basic-auth-password=mypassword\r\n```\r\n\r\n3. Set basic_auth to true\r\n```\r\ngit diff yaml/gateway-dep.yml\r\ndiff --git a/yaml/gateway-dep.yml b/yaml/gateway-dep.yml\r\nindex d0dac48..cbcddf4 100644\r\n--- a/yaml/gateway-dep.yml\r\n+++ b/yaml/gateway-dep.yml\r\n@@ -44,7 +44,7 @@ spec:\r\n         - name: upstream_timeout  # Must be smaller than read/write_timeout\r\n           value: ""60s""\r\n         - name: basic_auth\r\n-          value: ""false""\r\n+          value: ""true""\r\n         - name: secret_mount_path\r\n           value: ""/etc/openfaas""\r\n         - name: scale_from_zero\r\n```\r\n\r\n4. Apply yaml ...\r\n```\r\nkubectl apply -f ./yaml\r\n```\r\n\r\n5. Check pods ...\r\n```\r\nkubectl get pods -n openfaas\r\nNAME                            READY   STATUS             RESTARTS   AGE\r\nalertmanager-5df696f54d-zcjvf   1/1     Running            0          104s\r\ngateway-5f6b6b5f6c-l42h2        1/2     CrashLoopBackOff   4          102s\r\nnats-765f98bd59-gtxsl           1/1     Running            0          103s\r\nprometheus-776597d547-xwrt6     1/1     Running            0          103s\r\nqueue-worker-554f887d87-pcp5d   1/1     Running            1          102s\r\n```\r\n\r\n6. Check logs ...\r\n```\r\nkubectl logs gateway-5f6b6b5f6c-l42h2 -c gateway -n openfaas\r\n2019/03/20 03:09:58 HTTP Read Timeout: 1m5s\r\n2019/03/20 03:09:58 HTTP Write Timeout: 1m5s\r\n2019/03/20 03:09:58 Binding to external function provider: http://127.0.0.1:8081/\r\n2019/03/20 03:09:58 unable to load /etc/openfaas/basic-auth-user\r\npanic: unable to load /etc/openfaas/basic-auth-user\r\n\r\ngoroutine 1 [running]:\r\nlog.Panicf(0xc420022780, 0x2c, 0x0, 0x0, 0x0)\r\n        /usr/local/go/src/log/log.go:333 +0xda\r\nmain.main()\r\n        /go/src/github.com/openfaas/faas/gateway/server.go:47 +0x25cf\r\n```\r\n\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n commit:  bcff3a6bc8d066ba26233a0b5b0e2338476988e1\r\n version: 0.8.5\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nn/a\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes cluster v1.13.2 on DigitalOcean\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nKubernetes nodes:\r\nDebian GNU/Linux 9 (stretch)   4.19.0-0.bpo.1-amd64\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n', 'comments': ['Can you try the steps detailed here:\r\n\r\nhttps://github.com/openfaas/faas-netes/tree/master/yaml#10-enable-basic-auth-on-gateway', 'It works! Many thanks\n\n-Alton\n\nOn Wed, Mar 20, 2019 at 12:39 AM Richard Gee <notifications@github.com>\nwrote:\n\n> Can you try the steps detailed here:\n>\n>\n> https://github.com/openfaas/faas-netes/tree/master/yaml#10-enable-basic-auth-on-gateway\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openfaas/faas/issues/1132#issuecomment-474719996>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AF5kJb_PZU5pU3RXHkB490tv8hzxlx92ks5vYeWvgaJpZM4b-NSG>\n> .\n>\n', 'it was in the [README.md](https://github.com/openfaas/faas-netes/tree/master/yaml#10-enable-basic-auth-on-gateway) all this time.\r\n\r\nmaybe this link should be added to the docs at https://docs.openfaas.com/reference/authentication/ ... for non-helm users like me\r\n\r\nmany thanks for all your help\r\n', 'Derek close', 'Happy to help @altoning 👍 ', '> it was in the [README.md](https://github.com/openfaas/faas-netes/tree/master/yaml#10-enable-basic-auth-on-gateway) all this time.\r\n> \r\n> maybe this link should be added to the docs at https://docs.openfaas.com/reference/authentication/ ... for non-helm users like me\r\n> \r\n> many thanks for all your help\r\n\r\n@altoning propose it on the docs repo, please.', '@rgee0 - done. i added proposal / pull request to docs repo.\r\n\r\nsee https://github.com/openfaas/docs/pull/139', ""@altoning what's the reason that you couldn't use helm? If you are concerned about tiller, you can use helm to template YAML files with the things you want turned on and then apply that:\r\n\r\nhttps://docs.openfaas.com/deployment/kubernetes/#tiller-less-helm-install\r\n\r\nThis is the supported way of enabling basic auth rather than hacking on the YAML files. What do you think?\r\n\r\nAlex"", ""i'm 2 months new to kubernetes and have been avoiding helm charts because\nsome people have been warning me about security issues with tiller.\n\nlast friday i finally caved in and started using helm for cert-manager. i'm\nkinda liking it now.\n\ni'll look into tiller-less helm. sounds interesting\n\nOn Mon, Mar 25, 2019 at 10:35 AM Alex Ellis <notifications@github.com>\nwrote:\n\n> @altoning <https://github.com/altoning> what's the reason that you\n> couldn't use helm? If you are concerned about tiller, you can use helm to\n> template YAML files with the things you want turned on and then apply that:\n>\n> https://docs.openfaas.com/deployment/kubernetes/#tiller-less-helm-install\n>\n> This is the supported way of enabling basic auth rather than hacking on\n> the YAML files. What do you think?\n>\n> Alex\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openfaas/faas/issues/1132#issuecomment-476302915>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AF5kJTZt7Pt_5MM8sJ59RzIhX1t0hrS_ks5vaQjfgaJpZM4b-NSG>\n> .\n>\n""]}"
1139,connection refused to 127.0.0.1:8080,https://github.com/openfaas/faas/issues/1139,"{'description': 'I\'m following the labs - I\'ve completed [the first one](https://github.com/openfaas/workshop/blob/master/lab1.md) and am trying to start [the second one](https://github.com/openfaas/workshop/blob/master/lab2.md). However, hitting http://127.0.0.1:8080/ just throws an ""Unable to connect"" error.\r\n\r\n`docker service ls`:\r\n```\r\nID                  NAME                MODE                REPLICAS            IMAGE                         PORTS\r\nkwkm7t05r9kp        func_alertmanager   replicated          1/1                 prom/alertmanager:v0.16.1\r\ndtzuvj1373nn        func_faas-swarm     replicated          1/1                 openfaas/faas-swarm:0.6.1\r\nf9t5tr21gcf0        func_gateway        replicated          1/1                 openfaas/gateway:0.11.1       *:8080->8080/tcp\r\nxjclkl2cfimz        func_nats           replicated          1/1                 nats-streaming:0.11.2\r\nnnbkff33cvrp        func_prometheus     replicated          1/1                 prom/prometheus:v2.7.1        *:9090->9090/tcp\r\npz1usrhbjh9c        func_queue-worker   replicated          1/1                 openfaas/queue-worker:0.7.1\r\n```\r\n\r\nbut hitting it isn\'t working:\r\n```\r\nλ curl http://127.0.0.1:8080/\r\ncurl: (7) Failed to connect to 127.0.0.1 port 8080: Connection refused\r\n```\r\n\r\nI searched for existing issues... I found #507 which sounded related, but it doesn\'t seem to be the same issue (as my Docker server version isn\'t very old)\r\n\r\n## Your Environment\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\nCLI:\r\n commit:  96f159fc3e85a6782461c9dde77cbf88308aa21d\r\n version: 0.8.6\r\n```\r\n\r\n* Docker version `docker version`:\r\n```\r\nClient: Docker Engine - Community\r\n Version:           18.09.2\r\n API version:       1.39\r\n Go version:        go1.10.8\r\n Git commit:        6247962\r\n Built:             Sun Feb 10 04:12:31 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          18.09.2\r\n  API version:      1.39 (minimum version 1.12)\r\n  Go version:       go1.10.6\r\n  Git commit:       6247962\r\n  Built:            Sun Feb 10 04:13:06 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nWindows 10, version 1809', 'comments': ['Trying to do some more debugging...\r\n`docker stack ps func` shows one failed process:\r\n```\r\nλ docker stack ps func\r\nID                  NAME                  IMAGE                         NODE                    DESIRED STATE       CURRENT STATE         ERROR\r\n   PORTS\r\n0rxbpvzn1guq        func_prometheus.1     prom/prometheus:v2.7.1        linuxkit-00155d2e1101   Running             Running 3 hours ago\r\n\r\nzh5xdgihyn6z        func_queue-worker.1   openfaas/queue-worker:0.7.1   linuxkit-00155d2e1101   Running             Running 3 hours ago\r\n\r\nd85mcplwzcdn        func_gateway.1        openfaas/gateway:0.11.1       linuxkit-00155d2e1101   Running             Running 3 hours ago\r\n\r\n4yprvqa306qw        func_nats.1           nats-streaming:0.11.2         linuxkit-00155d2e1101   Running             Running 3 hours ago\r\n\r\nzdvp8d9vzftj        func_faas-swarm.1     openfaas/faas-swarm:0.6.1     linuxkit-00155d2e1101   Running             Running 3 hours ago\r\n\r\n9yzumvxbkjhc        func_gateway.1        openfaas/gateway:0.11.1       linuxkit-00155d2e1101   Shutdown            Failed 3 hours ago    ""task: non-zero exit (1)""\r\n\r\n1tnxnorphem3        func_alertmanager.1   prom/alertmanager:v0.16.1     linuxkit-00155d2e1101   Running             Running 3 hours ago\r\n```\r\n\r\nLogs for that one say ""nats: no servers available for connection"":\r\n```\r\nλ docker service logs 9yzumvxbkjhc\r\nfunc_gateway.1.9yzumvxbkjhc@linuxkit-00155d2e1101    | 2019/03/26 02:52:17 HTTP Read Timeout: 5m5s\r\nfunc_gateway.1.9yzumvxbkjhc@linuxkit-00155d2e1101    | 2019/03/26 02:52:17 HTTP Write Timeout: 5m5s\r\nfunc_gateway.1.9yzumvxbkjhc@linuxkit-00155d2e1101    | 2019/03/26 02:52:17 Binding to external function provider: http://faas-swarm:8080/\r\nfunc_gateway.1.9yzumvxbkjhc@linuxkit-00155d2e1101    | 2019/03/26 02:52:17 Async enabled: Using NATS Streaming.\r\nfunc_gateway.1.9yzumvxbkjhc@linuxkit-00155d2e1101    | 2019/03/26 02:52:17 Opening connection to nats://nats:4222\r\nfunc_gateway.1.9yzumvxbkjhc@linuxkit-00155d2e1101    | 2019/03/26 02:52:17 Connect: nats://nats:4222\r\nfunc_gateway.1.9yzumvxbkjhc@linuxkit-00155d2e1101    | 2019/03/26 02:52:19 nats: no servers available for connection\r\n```\r\n\r\nDeleted the stack and tried to redeploy:\r\n```\r\ndanlo@W2KS8CK1024 MINGW64 /c/src/faas (master)\r\n$ docker stack rm func\r\nRemoving service func_alertmanager\r\nRemoving service func_faas-swarm\r\nRemoving service func_gateway\r\nRemoving service func_nats\r\nRemoving service func_prometheus\r\nRemoving service func_queue-worker\r\nRemoving config func_prometheus_config\r\nRemoving config func_prometheus_rules\r\nRemoving config func_alertmanager_config\r\nRemoving network func_functions\r\n\r\ndanlo@W2KS8CK1024 MINGW64 /c/src/faas (master)\r\n$ ./deploy_stack.sh --no-auth\r\nAttempting to create credentials for gateway..\r\nError response from daemon: rpc error: code = AlreadyExists desc = secret basic-auth-user already exists\r\nError response from daemon: rpc error: code = AlreadyExists desc = secret basic-auth-password already exists\r\n[Credentials]\\n already exist, not creating\r\n\r\nDisabling basic authentication for gateway..\r\n\r\nDeploying OpenFaaS core services\r\nCreating network func_functions\r\nCreating config func_prometheus_rules\r\nCreating config func_alertmanager_config\r\nCreating config func_prometheus_config\r\nCreating service func_nats\r\nCreating service func_queue-worker\r\nCreating service func_prometheus\r\nCreating service func_alertmanager\r\nCreating service func_gateway\r\nCreating service func_faas-swarm\r\n```\r\n\r\nNow `docker stack ps func` doesn\'t have any errors any more:\r\n```\r\nID                  NAME                  IMAGE                         NODE                    DESIRED STATE       CURRENT STATE                ERROR\r\n  PORTS\r\nm97bh2zh6j9p        func_faas-swarm.1     openfaas/faas-swarm:0.6.1     linuxkit-00155d2e1101   Running             Running 30 seconds ago\r\n\r\nhd1jxs93sacs        func_gateway.1        openfaas/gateway:0.11.1       linuxkit-00155d2e1101   Running             Running 45 seconds ago\r\n\r\nq0yvs9877gij        func_alertmanager.1   prom/alertmanager:v0.16.1     linuxkit-00155d2e1101   Running             Running 50 seconds ago\r\n\r\nyxvzrfuety4c        func_prometheus.1     prom/prometheus:v2.7.1        linuxkit-00155d2e1101   Running             Running about a minute ago\r\n\r\nu9msz5evmkni        func_queue-worker.1   openfaas/queue-worker:0.7.1   linuxkit-00155d2e1101   Running             Running about a minute ago\r\n\r\nso6q9qx08znl        func_nats.1           nats-streaming:0.11.2         linuxkit-00155d2e1101   Running             Running about a minute ago\r\n```\r\n\r\nBut the UI is still failing:\r\n```\r\n$ curl http://localhost:8080/\r\ncurl: (7) Failed to connect to localhost port 8080: Connection refused\r\n```', ""So apparently there's something weird with Docker's NAT on Windows: https://github.com/docker/for-win/issues/204\r\n\r\nWhat I ended up doing was finding the Docker NAT IP range using `ipconfig`:\r\n```\r\nEthernet adapter vEthernet (DockerNAT):\r\n\r\n   Connection-specific DNS Suffix  . :\r\n   IPv4 Address. . . . . . . . . . . : 10.0.75.1\r\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\r\n   Default Gateway . . . . . . . . . :\r\n```\r\n\r\nIt seems like Docker isn't properly forwarding port `8080` to the container's port 8080, but directly hitting the container (`http://10.0.75.2:8080/`) works!\r\n\r\nDoes this always happen on Windows? I wonder if the docs should call it out more clearly..."", ""It's working fine after restarting Docker... Sorry for the noise here."", 'Hello.\r\nThis happened to me as well. Thank you for explaining the need to restart docker.', ""There's no need to restart Docker after running a Docker container. That would defeat the point of it. If you have issues raise your own ticket. "", 'Derek lock']}"
1142,open faas for actions on google client library node.js or alexa alexa skills kit sdk for node.js ,https://github.com/openfaas/faas/issues/1142,"{'description': 'Open FaaS for Actions on Google Client Library Node.js or Alexa Skills Kit SDK for Node.js\r\n\r\nI am trying to use Google Action libraries (Node.js) - https://github.com/actions-on-google/actions-on-google-nodejs and Alexa Skills kit SDK for (Node.js) -https://github.com/alexa/alexa-skills-kit-sdk-for-nodejs-  to develop my actions to Google Assistant and Skills for Alexa in Open FaaS. But Google\'s documentation only shows how to do it for Google Functions, AWS lambda or Node.js Express.\r\n\r\n\r\nMy code inn OpenFaaS is:\r\n\r\nhandler.js\r\n-------------------\r\n""use strict""\r\n\r\n\r\nconst bodyParser = require(\'body-parser\');\r\nconst {\r\n    dialogflow,\r\n    Image,\r\n    Table,\r\n    Carousel,\r\n    List,\r\n    DeepLink,\r\n    BasicCard,\r\n    Button,\r\n    LinkOutSuggestion,\r\n    Suggestions,\r\n    actionssdk\r\n   } = require(\'actions-on-google\');\r\n  \r\nconst assistant = dialogflow({debug: true});\r\n\r\nmodule.exports = (assistant, callback) => {\r\n  \r\nconsole.error(""assistant-------------"",assistant)  \r\n\r\nassistant.intent(\'Default Welcome Intent\', (conv, input , option) => {\r\n\r\nconv.ask(""Hi"");\r\n\r\n})\r\n\r\n    callback(undefined, assistant);\r\n}\r\n\r\nError:\r\n--------------------\r\nTypeError: assistant.intent is not a function\r\nat module.exports (/home/app/function/handler.js:32:11)\r\nat getStdin.then.val (/home/app/index.js:12:5)\r\nat <anonymous>\r\nat process._tickCallback (internal/process/next_tick.js:188:7)\r\n --------------------------\r\n\r\nHas someone tried the libraries with OpenFaas?\r\n\r\nThank you.\r\n\r\n\r\n\r\n', 'comments': ['Hi thanks for your interest. You can access professional support from myself (email me) or community support on Slack.  \r\n\r\nGitHub is for issues with the project or for tracking features. \r\n\r\nRegards,\r\n\r\nAlex']}"
1144,faas is not accessible on mac,https://github.com/openfaas/faas/issues/1144,"{'description': '<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\nI am following this document - https://docs.openfaas.com/deployment/docker-swarm/\r\nWhen I try to deploy a function on my mac, its not able to detect FaaS in my local.\r\n`$ faas-cli store deploy figlet`\r\n\r\nBelow is the error:\r\n```\r\nWARNING! Communication is not secure, please consider using HTTPS. Letsencrypt.org offers free SSL/TLS certificates.\r\n\r\nIs FaaS deployed? Do you need to specify the --gateway flag?\r\nPost http://127.0.0.1:8080/system/functions: EOF\r\n\r\nFunction \'figlet\' failed to deploy with status code: 500\r\n```\r\nI am able to access the application from the browser at ""http://127.0.0.1:8080"". I provided the credentials from ""~/.openfaas/config.yml""\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Followed the document ""https://docs.openfaas.com/deployment/docker-swarm/""\r\n2. Got error while running the command `faas-cli store deploy figlet`\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\nCLI:\r\n commit:  96f159fc3e85a6782461c9dde77cbf88308aa21d\r\n version: 0.8.6\r\n\r\nGateway\r\n uri:     http://127.0.0.1:8080\r\n version: 0.11.1\r\n sha:     c394b09ae65177b3c6948b2c22b890068a8e6283\r\n commit:  Bump to nats-queue-worker 0.7.0\r\n\r\n\r\nProvider\r\n name:          faas-swarm\r\n orchestration: swarm\r\n version:       0.6.1 \r\n sha:           3cac0ccc2e8bb7f567739a33f7d414cdb58440aa\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```\r\nClient:\r\n Version:\t18.03.0-ce\r\n API version:\t1.37\r\n Go version:\tgo1.9.4\r\n Git commit:\t0520e24\r\n Built:\tWed Mar 21 23:06:22 2018\r\n OS/Arch:\tdarwin/amd64\r\n Experimental:\tfalse\r\n Orchestrator:\tswarm\r\n\r\nServer:\r\n Engine:\r\n  Version:\t18.03.0-ce\r\n  API version:\t1.37 (minimum version 1.12)\r\n  Go version:\tgo1.9.4\r\n  Git commit:\t0520e24\r\n  Built:\tWed Mar 21 23:14:32 2018\r\n  OS/Arch:\tlinux/amd64\r\n  Experimental:\tfalse\r\n```\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOS\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* Please also follow the [troubleshooting guide](https://github.com/openfaas/faas/blob/master/guide/troubleshooting.md) and paste in any other diagnostic information you have:\r\n\r\n', 'comments': [""OpenFaaS most certainly works on Docker for Mac. \r\n\r\nI'm going to close this issue but please feel free to keep commenting. in the issue template there is a link to the troubleshooting guide and you should go through that before raising an issue. \r\n\r\nAlex"", 'Derek close']}"
1149,is there a way to set auto scale down to zero?,https://github.com/openfaas/faas/issues/1149,"{'description': 'I could not find the way. Could someone tell me? Thanks.\r\n\r\n', 'comments': ['Derek lock', ""Given that you've completely deleted and ignored the issue template I'm closing this issue.\r\n\r\n```\r\n<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [ ] Searched [past issues](/issues)\r\n```\r\n\r\nBy following this you can answer your own question. It's in the documentation.""]}"
1155,invitation to slack,https://github.com/openfaas/faas/issues/1155,"{'description': ""Hello\r\n\r\nI've been invited to openfaas on slack, I'm wondering why I have been invited?\r\n\r\nThank you.\r\n\r\n"", 'comments': [""Hi you're welcome to email me your query. This tracker is for issues with the code only.\r\n\r\nAlex""]}"
1178,revisiting the discussion on mounting volumes in functions,https://github.com/openfaas/faas/issues/1178,"{'description': 'Hello,\r\nThe discussion in this thread: https://github.com/openfaas/faas/issues/320 is pretty interesting, but I\'ve been pondering some of the arguments.\r\n\r\nNow I can generally sympathise with the take from @alexellis and others that some use cases for this might be considered ""an anti-pattern for functions which are short-lived and stateless. This will encourage stateful behavior and assumptions."" however I do also think that\'s slightly presumptuous, because not all volumes are the same and not all use cases necessarily have volumes mounted read/write\r\n\r\nA scenario that I am thinking of might include a function that makes use of a machine learning model. Now in this case the function might of itself have short lived and stateless behaviour but that behaviour could depend upon a potentially very large, perhaps multi GB, model.\r\n\r\nNow clearly one could argue that an approach might be to build the function containing said model, however that then results in a very large container which **might** be OK if the lifecycles of the model and function are intrinsically linked, but I rather suspect that there are advantages to them being rather more decoupled in many circumstances and certainly in my organisation the lifecycles of model creation and usage would seem to be somewhat orthogonal which points to a number of advantages in being able to create a model as a volume and have a function mount the volume.\r\n\r\nSo, TBH, I think that there is more nuance to this discussion than simply volume mounts = stateful = antipattern. I think that there are a number of equally good arguments for keeping containers as small as possible - these things are rarely totally black or white and I think that the danger of making a framework overly opinionated one way or the other risks making it unnecessarily unsuitable for a number of use cases.\r\n\r\nNone of this is to say that I disagree with the principals that have been espoused and I\'m certainly a big fan of the 12FA and serverless manifestos, I\'m just suggesting that when you build a compelling framework you\'ll inevitably find stakeholders trying to make creative use of it and it\'s worth bearing that in mind.', 'comments': ['Duplicate of #320', ""Thanks for your thoughts @fadams \r\n\r\nWhat is your specific business use-case? Can you run us through it?\r\n\r\nI'm going to close the issue since we already have one tracking it and don't have persistent volumes / claims on the roadmap. "", ""I thought that I'd explained the specific use-case above namely that functions based on machine learning can often depend on extremely large models of multi-giga byte size and that it is pretty much just as much of an anti-pattern to be pushing around multi-GB containers as it is mounting volumes and moreover it is very often the case that the lifecycles of model creation and model usage in ML are quite different so having the model stored as a read only volume mounted to a relatively small container tends to make logical sense.\r\n\r\nThis does **not** equate to the function in question necessarily having stateful behaviour.\r\n\r\nGiven that functions in OpenFaaS seem to be visible as K8s pods I'd have assumed that it wouldn't be a *technically* huge issue and not including them seems to be more of a philosophical issue.\r\n\r\nThat's OK, but I think that there are definitely a number of legitimate use-cases in this space that I'd say merit some reasonable discussion and even if its not in the roadmap. I think discussion around this is useful too because other people might may well be facing similar situations and discussion might help identify potential alternative approaches.\r\n\r\nLike some of the contributors in the original thread I'm spending an undue amount of time and energy trying to convince my management that a serverless architecture is the way we should be going and it makes life a whole lot easier when one is able to field compelling responses to this type of question.\r\n\r\nAnother observation that I'd make is that whilst efficiency is fine you do seem to be awfully quick at closing issues/questions. TBH I very much doubt that too many people end up engaging in discussions marked as closed (I only stumbled across https://github.com/openfaas/faas/issues/320 serendipitously by accident whilst searching for something else). I'd say that an open source project is as much about fostering a community as it is about the code and closing off issues this quickly where a number of stakeholders have expressed legitimate interest in the topic comes across as a bit, well, dismissive really.""]}"
1192,prometheus,https://github.com/openfaas/faas/issues/1192,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [ ] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': [""@xumingxue You've only created an issue with the blank template. Please either edit, and complete the template with your information/question, or close this issue. Thank you"", '/add label: invalid']}"
1194,gvisor discussion,https://github.com/openfaas/faas/issues/1194,"{'description': 'I was having a discussion with @burtonr on Slack about implementing Gvisor with OpenFaas. Could be interesting as it would allow for privileged containers while still being semi-secure. Does anyone have specific thoughts on this idea?', 'comments': ['Hi @pavanagrawal123,\r\n\r\nTo my knowledge, you can add gVisor to your Kubernetes deployment transparently. Go ahead and let us know how you get on.\r\n\r\nIn terms of the other thing you said:\r\n\r\n> it would allow for privileged containers while still being semi-secure. Does anyone have specific thoughts on this idea?\r\n\r\nCan you tell me more about how you think that would work and what problem it would solve for you?', 'Derek close: due to inactivity. @pavanagrawal123 feel free to discuss further on Slack']}"
1207,mqtt connector,https://github.com/openfaas/faas/issues/1207,"{'description': ""I'm looking to run OpenFaaS and trigger functions from MQTT topics (they already exist, so the name of the topics has to be completely custom). I've been doing a lot of searches and I can't find much details on any MQTT connectors for OpenFaas. MQTT is displayed in one picture in the docs, but the only relevant information I can find is to set up a connector with Kafka, but that's rather overkill for my use case, I'm looking for a simple setup that I can run on Raspberry Pi.\r\n\r\n**So my question is, how would I trigger a function from a MQTT topic?**\r\n"", 'comments': ['Hi @HakanL,\r\n\r\nThe connectors that are available from the project and community are displayed in the docs under ""triggers"" https://docs.openfaas.com/reference/triggers/\r\n\r\nYou\'ll also see a link for how to build an MQTT connector using the OpenFaaS connector-sdk. I would suggest you either use this to build your own or reach out to OpenFaaS Ltd if you\'d like to comission the work via alex@openfaas.com\r\n\r\nDoes this answer the question?\r\n\r\nAlex\r\n\r\n', 'Derek add label: support', 'Derek add label: question', ""Yea that's the information I found too, but since I saw MQTT in the picture there I was surprised that nobody had implemented a connector like that before, it seems like it would be a very common use case (I may be wrong on that of course), thinking maybe I overlooked or misunderstood something. I'll look at the Connector SDK, thanks for pointing me in the right direction and I think we can close this question/issue."", 'Let me know how you want to proceed. ', ""I'll close the question since it's been answered now. Feel free to keep commenting or join Slack to chat to the community. "", 'You may find this interesting which is an MQTT broker written in Python:\r\n\r\nhttps://github.com/alexellis/iot-sensors-mqtt-openfaas/blob/master/mqtt-broker/app.py', ""@HakanL I'm also interested in an MQTT connector, and have found https://github.com/eclipse/paho.mqtt.rust which is MQTT->Redis"", ""@robmarkcole I wrote a connector for MQTT, but there's more work needed to update the readme, etc before it's ready to be put up here."", '@HakanL waiting for your connector, not ready yet? :(', 'If anyone has a pressing business need for this please do get in touch with me so see how we can help. ', '> @HakanL waiting for your connector, not ready yet? :(\r\n\r\nI started building it, but the business need changed so I never finished, sorry :(', 'I have created a simple MQTT connector: [f43i4n/faas-mqtt-connector](https://github.com/f43i4n/faas-mqtt-connector)\r\nIt currently only has basic MQTT functionality and few configuration options, but it may fulfil your needs or you could create a PR to improve the connector.', ""Here's our official MQTT connector, it was required for a commercial project and so it gave a good reason to build it for the community.\r\n\r\nhttps://github.com/openfaas-incubator/mqtt-connector\r\n\r\nConnecting drone event data to Postgres / Mapbox:\r\n\r\nhttps://github.com/packet-labs/iot"", ""@f43i4n is there anything in your connector that you'd like to contribute back? Can our new connector do everything you needed? cc @HakanL @amirmhp98 @robmarkcole"", ""I'm no longer working on the project that needed this, but based on a quick glance it seems what you've released should work. Thanks!""]}"
1235,move to multi-arch images for prometheus and alertmanager,https://github.com/openfaas/faas/issues/1235,"{'description': 'Prometheus and alertmanager have published Multi arch images, Move armv7 images from arm tag to multi arch tags.\r\n\r\n## Checklist:\r\n- [x] x86_64(https://github.com/openfaas/faas/commit/9690987319a9906d2863c93eee8634f78e6aa0b6)\r\n- [x] armhf (https://github.com/openfaas/faas/commit/9690987319a9906d2863c93eee8634f78e6aa0b6)\r\n- [x] arm64 (https://github.com/openfaas/faas/commit/9690987319a9906d2863c93eee8634f78e6aa0b6)\r\n\r\n## Possible Solution\r\nEdit `docker-compose.armhf.yml` and edit the tags.', 'comments': [""Hi @zeerorg you'll need to cover .arm64 too and also the regular docker-compose.yml so that we are on the same version on all YAML files. "", ""Is there anything further required here?  Seems all three compose variants were moved to multi arch under (https://github.com/openfaas/faas/commit/9690987319a9906d2863c93eee8634f78e6aa0b6)\r\n\r\nI'll close it and reopen if the answer comes back as yes.""]}"
1243,invocationcount is always 0,https://github.com/openfaas/faas/issues/1243,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nWhen I get the function information through `/system/function/{functionName}`, `invocationCount` is always 0.\r\nBut when I get the function information through `/system/functions`, I can get the correct value.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n0.13.7\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['Hi just to let you know that this is as designed\r\n\r\nThe invocation count is available through the list API. \r\n\r\nAlex', '@alexellis Hi, thank you for answering my question, but what is the reason for this? \r\nIf there are a lot of functions, I have to get a list in order to get invocationCount. Is it too expensive?', 'I would recommend retrieving your metrics from Prometheus, especially if you are querying a lot of data.\r\n\r\nWe may update the rest API so that it outputs null instead of zero ', '@alexellis just FYI, I tripped over this as well. Not that I want to get the invocationCount through the gateway API, but I was testing the scaling to zero and some other things after an upgrade of openfaas in our cluster and I thought the invocationCount is no longer working, because I was looking only at the responses from `/system/function/{functionName}` 🙈. \r\n\r\nI really wonder though, why the detailed view of a function actually should have less information than the list API in your opinion. I mean, typically  index endpoints have the same or less details than the specific endpoints.']}"
1274,the fuction will be pended when it trys to scale,https://github.com/openfaas/faas/issues/1274,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](https://github.com/issues)\r\n\r\n\r\n## Expected Behaviour\r\nThe output of the script will be shown one by one and will not stop until it comes to 1000.\r\n\r\n\r\n## Current Behaviour\r\nThe output was stop at a certain number when the function try to scale maked as Not Ready for several second and then continued to run.\r\n\r\n## Possible Solution\r\nBecause the problem is that I only use one node to build up OpenFass, but when I add another nodes in the swarm, it seems that the master doesn\'t distribute the task to the other work nodes.\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Deploy a function \r\nmy code of function\r\n```python\r\nimport json\r\nimport random\r\n\r\ndef handle(req):\r\n    r = req\r\n    with open(\'./function/idioms_dict.json\', \'r\') as f:\r\n        words = json.load(f)\r\n\r\n    return r\r\n\r\n```\r\n2. run the script\r\n```shell\r\nfor i in {0..1000};\r\ndo\r\n  echo -n ""$i"" | faas-cli invoke idoim-follow && echo;\r\ndone;\r\n```\r\n3. It will be bended when it comes to around 340.\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\nCLI:\r\n commit:  b42d0703b6136cac7b0d06fa2b212c468b0cff92\r\n version: 0.8.11\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n Docker  18.09.2\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\nDocker Swarm\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nMacOS 10.14.5\r\n\r\n\r\n', 'comments': [""Hi I'm going to close this issue because load testing is explained in the documentation.\r\n\r\nhttps://docs.openfaas.com/architecture/performance/\r\n\r\nAlex""]}"
1280,no ~/.openfaas dir nor faas_pass.txt - gateway access errs with code 500 ,https://github.com/openfaas/faas/issues/1280,"{'description': 'I cloned and moved the faas dir to an external partition , it runs but when having to cat password i cant find the .openfaas dir anywhere , I have ~/template + functions \r\nfaas-cli made use of /tmp and installed at /usr/local/bin\r\n\r\nfaas linked to >/usr/local/bin/faas-cli \r\n faas stack deploys but i get an error on gateway; Get : unsupported protocol scheme """"\r\n\r\nI also tried changing the url/ip on the stack_arm.yml to point to a node but that didn\'t work , instead after failing to launch the gateway container three times it pointed towards another node \r\nI changed back to xdefault 127.0.0.1 :8080 \r\nafterall it would be accessible on any node \r\nSwarm mode is already up and running so it isnt launched by faas .. \r\n\r\n$ faas-cli secret list\r\nWARNING! Using --password is insecure, consider using: cat ~/faas_pass.txt | faas-cli login -u user --password-stdin\r\nCalling the OpenFaaS server to validate the credentials...\r\n\r\nWARNING! Communication is not secure, please consider using HTTPS. Letsencrypt.org offers free SSL/TLS certificates.\r\nServer returned unexpected status code: 500 - Get : unsupported protocol scheme """" \r\n\r\nI have a local regisrty-arm and i\'m also logged into Dockerhub acc /repo\r\nwondering if that has something to do with the need for SSL\r\n\r\n \r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\nversion: 0.9.0\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n19.0.3\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm x4 on /HypriotOs + /Portainer\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nraspbian  4.19.57-v7+\r\npi3B x4\r\nPortainer \r\nI had tried installing Openfaas via its own App template store but failed \r\nauth issues among others\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\nlogs gateway :\r\n\r\n2019/08/09 04:24:53 HTTP Read Timeout: 5m5s\r\n2019/08/09 04:24:53 HTTP Write Timeout: 5m5s\r\n2019/08/09 04:24:53 Binding to external function provider: http://faas-swarm:8080/  <? \r\nset in docker-compose.armhf.yml - docs never mentioned editing it , just stack_arm.yml\r\n2019/08/09 04:24:53 Async enabled: Using NATS Streaming.\r\n2019/08/09 04:24:53 Opening connection to nats://nats:4222\r\n2019/08/09 04:24:53 Connect: nats://nats:4222\r\n2019/08/09 04:24:53 nats: no servers available for connection\r\n\r\nI deleted the images and will be starting fresh but still i can\'t find ~/.openfaas nor password/secret \r\nnot even in the $pwd/faas /mnt/extstorage  point \r\n--no-auth flag ?', 'comments': ['Can you complete the issue as per the issue template and link to any guide you might be following, please?', ""hi thankx for quick reply\r\nhttps://docs.openfaas.com/deployment/docker-swarm/\r\nhttps://docs.openfaas.com/deployment/troubleshooting/#i-forgot-my-gateway-password \r\nhttps://blog.alexellis.io/quickstart-openfaas-cli/\r\n\r\ni'm wondering if the fact that the external drive is in ntfs ,rather than ext4 might have something to do with it. i have had no issue running tones on images from it before though ..."", 'I moved fass dir to ~/faas \r\nremoved the previous images and redeployed anew ,seems like the creds are still seen by the install script and still no ~/.openfass dir or faas_pass.txt \r\n\r\n$ ./deploy_stack.sh\r\nAttempting to create credentials for gateway..\r\nError response from daemon: rpc error: code = AlreadyExists desc = secret basic-auth-user already exists\r\nError response from daemon: rpc error: code = AlreadyExists desc = secret basic-auth-password already exists\r\n[Credentials]\r\n already exist, not creating\r\n\r\nEnabling basic authentication for gateway..\r\n\r\nDeploying OpenFaaS core services for ARM\r\nCreating service func_gateway\r\nCreating service func_basic-auth-plugin\r\nCreating service func_faas-swarm\r\nCreating service func_nats\r\nCreating service func_queue-worker\r\nCreating service func_prometheus\r\nCreating service func_alertmanager\r\n\r\nmaybe had to remove the secret first too from secrets, duuh!', ""it worked \r\n\r\ni moved faas dir to home created ~/.openfaas , removed the secret from portainer's secrets list \r\nredeployed and am now logged in ui \r\n - i used --no-auth flag but it still wet ahead and created the creds \r\n"", 'Hi 👋 thanks for using OpenFaaS.\r\n\r\nI would recommend redeploying with the authentication turned on\r\n\r\nUse these instructions to find your password - https://docs.openfaas.com/deployment/troubleshooting/#i-forgot-my-gateway-password\r\n\r\nThe issue template has a link to this guide, and one of the checkboxes states ""I have read the troubleshooting guide"" 😄 I guess you may have missed that.\r\n\r\nHave fun\r\n\r\nAlex', 'Hi all,\r\n\r\nI installed OpenFass on a raspberry docker swarm\r\nI followed this\r\n$ git clone https://github.com/alexellis/faas/\r\n$ cd faas\r\n$ ./deploy_stack.sh\r\n\r\n\r\nAttempting to create credentials for gateway..\r\nx5s3cii94b5h1rwhjabva4hjr\r\ncwpyvwvof553mix7gt8gcbhiq\r\n[Credentials]\r\n username: admin \r\n password: xxxx\r\n echo -n xxxx | faas-cli login --username=admin --password-stdin\r\n\r\nEnabling basic authentication for gateway..\r\n\r\nDeploying OpenFaaS core services for ARM\r\nCreating network func_functions\r\nCreating config func_prometheus_rules\r\nCreating config func_alertmanager_config\r\nCreating config func_prometheus_config\r\nCreating service func_prometheus\r\nCreating service func_alertmanager\r\nCreating service func_gateway\r\nCreating service func_basic-auth-plugin\r\nCreating service func_faas-swarm\r\nCreating service func_nats\r\nCreating service func_queue-worker\r\n\r\n\r\nWhen I try to use the web console I get:\r\nGet : unsupported protocol scheme """"\r\n\r\nfrom fans-cli\r\n $ faas-cli secret list\r\nWARNING! Communication is not secure, please consider using HTTPS. Letsencrypt.org offers free SSL/TLS certificates.\r\nServer returned unexpected status code: 500 - Get : unsupported protocol scheme """"\r\n\r\nI tried also to create folder  ~/.openfaas  but it don\'t work.\r\nPlease what I can do to fix?', 'Please create a new issue completing all the template fields. This is to provide use with the minimum amount of info needs for us to be able to help. Thanks.', 'Derek lock']}"
1287,swagger/openapi: syntax error in /system/logs and logentry definition,https://github.com/openfaas/faas/issues/1287,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nWhen following the instructions as described in https://github.com/openfaas/faas/tree/master/api-docs, the Swagger Editor should render the API documentation without errors\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nSwagger editor shows this message:\r\n\r\n![swagger](https://user-images.githubusercontent.com/759624/63323924-331a1900-c327-11e9-843d-144daae7a34c.png)\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nFix the indentation in the description of the `/system/logs` endpoint and rename `property` to `properties` in the `LogEntry` definition\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Head over to the [Swagger editor](editor.swagger.io)\r\n2. Now click File -> Import URL\r\n3. Type in https://raw.githubusercontent.com/openfaas/faas/master/api-docs/swagger.yml and click OK\r\n\r\n## Additional ideas of improvement\r\n\r\n- I'd suggest adding a tool such as [spectral](https://github.com/stoplightio/spectral) to the CI build pipeline to lint the api spec\r\n- I see in #1246 that you do not plan to use the spec for generating SDKs but if other people want to do it, it would make sense to handle the warnings (such as missing `operationId`) as well.\r\n"", 'comments': [""Hi @nlochschmidt \r\n\r\nThank you for finding this. I can't think how we let this error slip through, but I've notified the author based upon `git blame`. Going forward, this error-checking would reduce the risk of errors being introduced again.\r\n\r\nspectral appears to be a JavaScript tool and I would rather not having to mandate Node.js for development of OpenFaaS, so can we run it in a Docker container perhaps?\r\n\r\nIf you are happy to fix the error in the Swagger I will be standing by to merge it.\r\n\r\nThank you again for picking this up.\r\n\r\nAlex"", 'Will do. \r\n\r\nRegarding the linter: It\'s quite easy to run the linter in docker as there is an official docker image from Stoplight. Basically it would work like this:\r\n\r\n```sh\r\ndocker run -it --rm -v ""$APIDOC_DIR"":""$APIDOC_DIR"" stoplight/spectral lint ""$APIDOC_DIR/swagger.yml""\r\n```\r\n\r\nThe return code will be non-zero in case of errors, I haven\'t tried yet if warnings lead to non-zero exit code as well, but would hope not.', 'As you can see I have opened an MR for the api docs. I would open a second one for the linter if I get around to understand how the `ci.sh` works :wink:', 'I had a look into the OpenAPI linter ""spectral"" but it seems like warnings cause the same non-zero exit code (1) as errors and there is an open issue for this in spectral: https://github.com/stoplightio/spectral/issues/368\r\n\r\nTwo options:\r\n1.) fix all the warnings (see [spectral-warnings.txt](https://github.com/openfaas/faas/files/3525732/spectral-warnings.txt))\r\n2.) exclude all those rulesets from the linter that cause warnings\r\n\r\n', '@nichochen can this be closed now?', 'The issue has been resolved.']}"
1350,rate limit,https://github.com/openfaas/faas/issues/1350,"{'description': 'When I use OpenFaas Portal to invoke functions I see some rate limit headers being sent. Where do they come from? Is there a rate limiter that can be configured?', 'comments': ['Oh sorry. They are coming from the function.', ""Out of curiosity what was your function and what was doing rate-limiting inside it?\r\n\r\nAlex\r\n\r\nFor further questions, please don't open issues, but contact the community on Slack."", '/msg: slack', '--\nJoin Slack to connect with the community\nhttps://docs.openfaas.com/community\n']}"
1360,multi-arch image script is incorrectly detecting images on docker hub,https://github.com/openfaas/faas/issues/1360,"{'description': 'Multi-arch image script is incorrectly detecting images on Docker Hub\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe script on this line, should determine whether an image exists on the Docker Hub before attempting to build.\r\n\r\nhttps://github.com/openfaas/faas/blob/master/contrib/publish-arm.sh#L51\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nIt returns ""true"" as in the image exists even for those which do not.\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nSee if the API changed, try the line in isolation, fix and then send a PR. ', 'comments': ['I can take a look at this', 'Testing the script needs to be done on Linux or RPi, perhaps `docker run -ti ubuntu` would be suitable for debugging?\r\n\r\nPerhaps the issue is that `Not found` is now lowercase in the Docker HUB API? They recently pushed changes to enable robot accounts.\r\n\r\nFor a tag that doesn\'t exist: 0.19.0\r\n\r\n```\r\nexport TAG=0.19.0\r\nexport ARM_VERSION=armhf\r\nTAG_PRESENT=$(curl -s ""https://hub.docker.com/v2/repositories/${IMAGE}/tags/${TAG}-${ARM_VERSION}/"" | grep -Po \'""detail"": *""[^""]*""\' | grep -o \'Not found\')\r\necho $TAG_PRESENT\r\n\r\n\r\nexport TAG=0.19.0\r\nexport ARM_VERSION=armhf\r\nTAG_PRESENT=$(curl -s ""https://hub.docker.com/v2/repositories/${IMAGE}/tags/${TAG}-${ARM_VERSION}/"" | grep -o \'not found\')\r\necho $TAG_PRESENT\r\nnot found\r\n```\r\n\r\nFor a tag that does from: https://hub.docker.com/r/openfaas/gateway/tags\r\n\r\nI am also seeing 2x `//` symbols, which seems to be causing an issue\r\n\r\n```\r\nexport TAG=0.17.0\r\nexport ARM_VERSION=armhf\r\nTAG_PRESENT=$(curl -s ""https://hub.docker.com/v2/repositories/${IMAGE}/tags/${TAG}-${ARM_VERSION}/"" | grep -o \'not found\')\r\necho $TAG_PRESENT\r\nnot found\r\necho ""https://hub.docker.com/v2/repositories/${IMAGE}tags/${TAG}-${ARM_VERSION}/"" \r\nhttps://hub.docker.com/v2/repositories//tags/0.17.0-armhf/\r\n```\r\n\r\nRemoving that slash:\r\n\r\n```\r\nTAG_PRESENT=$(curl -s ""https://hub.docker.com/v2/repositories/${IMAGE}tags/${TAG}-${ARM_VERSION}/"" | grep -o \'not found\')\r\necho $TAG_PRESENT\r\nnot found\r\necho ""https://hub.docker.com/v2/repositories/${IMAGE}tags/${TAG}-${ARM_VERSION}/"" \r\nhttps://hub.docker.com/v2/repositories/tags/0.17.0-armhf/\r\n\r\n```', ""Thanks @Waterdrips, I'll leave it with you."", 'In the future, please add to your commit message or PR the text ""Closes: #X""']}"
1367,remove unnecessary step from dockerfile ,https://github.com/openfaas/faas/issues/1367,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\nKeep steps in dockefile as less as possible for optimization.\r\n\r\n\r\n## Current Behaviour\r\nUnnecessary step in Dockerfile\r\n\r\n\r\n## Possible Solution\r\nRemove the single line from the Dockerfile.\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\nhttps://github.com/G-prog/faas/blob/master/auth/basic-auth/Dockerfile#L25\r\n"", 'comments': []}"
1387,all invoking are concentrated on in one replica,https://github.com/openfaas/faas/issues/1387,"{'description': ""<!-- Due dilligence -->\r\nWhen I tested the default auto-scaling feature, I found that even though the number of replicas increased, all invoking were executed in one replica.\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nInvoking should be distributed across all replicas when the number of replicas increased.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nAll invoking are concentrated on in one replica.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Deploy a simplest function. \r\n2. Invioke a lot of functions in a short time.\r\n```\r\nfor i in {1..10000}\r\ndo\r\n  sleep 0.1 \\\r\n  && curl http://127.0.0.1:8080/function/<function-name>\r\n  && echo\r\ndone\r\n```\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\n  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | '_ \\ / _ \\ '_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  b7a67fe8d6a02aef35caae615ba56333e7337bfe\r\n version: 0.9.5\r\n\r\nGateway\r\n uri:     http://gateway.openfaas.svc.test.yafex.net:8080\r\n version: 0.18.2\r\n sha:     1c9e12237046fccc3e23b9ca79d0c904157e89ad\r\n commit:  Updated basic auth plugin faas provider\r\n\r\n\r\nProvider\r\n name:          faas-netes\r\n orchestration: kubernetes\r\n version:       0.9.8\r\n sha:           dafba3b68dc68fa4122f478f92ab5be9916b8f58\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nDocker 18.09.1\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes (FaaS-netes)\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n```\r\n$ faas logs hello-php\r\n2019-11-25T08:13:33Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:13:33 Duration: 0.016095 seconds\r\n2019-11-25T08:13:33Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:13:33 Forking fprocess.\r\n2019-11-25T08:13:33Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:13:33 Query\r\n2019-11-25T08:13:33Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:13:33 Path  /\r\n2019-11-25T08:13:33Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:13:33 Duration: 0.013145 seconds\r\n.....\r\n2019-11-25T08:17:18Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:17:18 Duration: 0.012164 seconds\r\n2019-11-25T08:17:18Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:17:18 Forking fprocess.\r\n2019-11-25T08:17:18Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:17:18 Query\r\n2019-11-25T08:17:18Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:17:18 Path  /\r\n2019-11-25T08:17:18Z hello-php (hello-php-6f86f6684b-wtj7g) 2019/11/25 08:17:18 Duration: 0.018175 seconds\r\n...\r\n```\r\nAll the logs come from the same pod, although the number of replicas increases to the maximum\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['Please feel free to read the documentation for deploying OpenFaaS on Kubernetes which covers [this topic](https://github.com/openfaas/faas-netes/tree/master/chart/openfaas#endpoint-load-balancing).', 'Links have been added to the troubleshooting and production docs pages at https://docs.openfaas.com to help anyone else who lands here. ', '@alexellis   Thanks.']}"
1390,open faas using google container registry,https://github.com/openfaas/faas/issues/1390,"{'description': 'Hi, \r\nare we able to use Google Container Registry instead of Docker Hub for the registry? \r\n\r\nRegards, \r\nMing', 'comments': ['yes, we do this regularly at my work. \r\n\r\nIf your registry is public, then it will work without any additional configuration.  \r\n\r\nIf your registry is not public, then if you are using kubernetes, you need to add a ImagePullSecret to your cluster and use that with your functions _or_ add it to the ServiceAccount used by OpenFaaS.  You can find some documentation about this process in the docs here https://docs.openfaas.com/deployment/kubernetes/#use-a-private-registry-with-kubernetes', ""thanks for the quick response. \r\nAlright, will give that a try and see if there's any issues. \r\n"", '/msg: slack', '--\nJoin Slack to connect with the community\nhttps://docs.openfaas.com/community\n', 'Please use Slack for technical support going forward. Thank you for your interest in the project. ']}"
1404,"simple ""hello world"" project: ""exec format error"" - node + php [armhf]",https://github.com/openfaas/faas/issues/1404,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nIt should be possible to deploy custom functions to an OpenFaas running on an armhf like Raspberry PI 4.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nOpenFaas is running. Public functions (e.g. certinfo) do work.\r\nDeploying custom functions with `php7` or `node-armhf` doesnt work.\r\n\r\n    pi@openfaas-01:~ $ sudo kubectl logs deploy/hello-node-world -n openfaas-fn\r\n    standard_init_linux.go:211: exec user process caused ""exec format error""\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Setup standard OpenFaas on RPI4\r\n2. Create a custom function\r\n3. Build + Push to private registry\r\n4. Add registry credentials to `/var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl`\r\n5. Add the registry as ""unsafe"" (http endpoint) to `/var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl` (not sure if relevant)\r\n6. Deploy the function to your OpenFaas\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nI\'am not  new to Docker. But I\'am new to OpenFaas / Faas at all.\r\n\r\nFirst I tried build + deploy from my WIN10 laptop, but now I do build on GitLab CI directly so the container is created in Linux. Thought that may help, but it didn\'t.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n```\r\n  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | \'_ \\ / _ \\ \'_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  0ab4012784510381e2b90c031ede3d77197b10b1\r\n version: 0.11.0\r\n\r\nGateway\r\n uri:     http://openfaas-01:31112\r\n version: dev\r\n sha:     672b7c48b7fcefbc974c69abab06555ab21e9db5\r\n commit:  Add tiers\r\n\r\n\r\nProvider\r\n name:          faas-netes\r\n orchestration: kubernetes\r\n version:       dev\r\n sha:           b4b112e1342979590eadd2d4471530f45734a46e\r\n```\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:37 2019\r\n OS/Arch:           windows/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\nKubernetes, setup through `k3sup`.\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nLaptop: WIN10  \r\nGitLab: Debian Linux  \r\nRaspberry: Debian 10\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\nJust run `faas-cli new my-function --lang php7` or `faas-cli new my-function --lang node-armhf`\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n```\r\npi@openfaas-01:~ $ echo test this | faas invoke hello-node-world -g 127.0.0.1:31112\r\n\r\nPost http://127.0.0.1:31112/function/hello-node-world: EOF\r\nCannot connect to OpenFaaS on URL: http://127.0.0.1:31112\r\n```\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': [""Hi the PHP7 image is not designed for armhf and the node-armhf template must be used to build on the device. I'd suggest making yourself familiar with the documentation and feel free to ask for technical support on Slack. \r\n\r\nThanks for your interest. "", 'You may also find this note useful https://www.openfaas.com/deployment/kubernetes/', '/msg: slack', '--\nJoin Slack to connect with the community\nhttps://docs.openfaas.com/community\n', 'Thanks @alexellis. With your Information I figured out how to update my CI to build on armhf (I had a spare RPI 3 which now acts as as GitLab runner) and now I am able to deploy custom functions. Very nice. Thanks for your work.\r\n\r\nI really thought PHP7 should work on armhf for this PR https://github.com/openfaas/templates/pull/148\r\n\r\nThanks for the fast reply, you helped a lot. If I am stable with OpenFaas, maybe I will commit some templates. <3', ""You're welcome.\r\n\r\nPlease consider sponsoring my time to support the project through GitHub. \r\n\r\nhttps://insiders.openfaas.io/\r\n\r\nYou can also join slack and discuss arm further in the dedicated channel. ""]}"
1405,save the date 🎂 - openfaas 3rd birthday!,https://github.com/openfaas/faas/issues/1405,"{'description': ""Join us for the OpenFaaS 3rd birthday with an online Community Meeting.\r\n\r\nWe'll have demos from #TeamServerless and an update on the year so far.\r\n\r\n![QAfn79n- jpg-large](https://user-images.githubusercontent.com/6358735/71088225-de33c580-2195-11ea-802d-0b1268bca410.jpeg)\r\n\r\n## Date: 18th Dec 2019 @ 1700 GMT+0\r\n\r\nJoin the event via Google Calendar\r\n\r\nhttps://calendar.google.com/event?action=TEMPLATE&tmeid=cjBtOHZicmpuaG9kczZ0cXRsOWEwNWI4cHMgb3BlbmZhYXMuY29tX2xvb2g2cW1kNTI1MXJyNGt0bjd0aTgwNHBrQGc&tmsrc=openfaas.com_looh6qmd5251rr4ktn7ti804pk%40group.calendar.google.com\r\n\r\nOr on the day, via Zoom - \r\n\r\nhttps://zoom.us/j/727801872\r\n\r\nMeeting ID: 727 801 872\r\n\r\nPlease +1 👍 if you're attending\r\n\r\nAnd checkout [GitHub Sponsors for OpenFaaS to support Open Source in 2020.](https://insiders.openfaas.io/)"", 'comments': ['I\'m getting an error clicking on the calendar link saying ""could not find event"".', 'Let me try again.', 'Calendar is public as is the event. ', 'Catch up with the recording -> https://www.openfaas.com/blog/birthday-teamserverless/']}"
1407,gateway ui assumes openfaas-fn is the default namespace,https://github.com/openfaas/faas/issues/1407,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n \r\nIf I deploy openfaas and set the default function namespace to something that is not `openfass-fn` the gateway UI will not be able to deploy any functions.  it returns an error\r\n\r\n```\r\nunable create Deployment: namespaces ""openfaas-fn"" not found\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/891889/70986312-f20bf880-20bd-11ea-9707-7bbb7171b264.png)\r\n\r\nThis error is correct, but not expected. \r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nThe UI should request the list of namespaces and use the first one in the list as the default.\r\n\r\nThis of course requires that the api return the configured default as the first value\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nThe ui can not deploy functions unless you explicitly deploy with the `openfaas-fn` namespace.\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Deploy on kubernetes with the latest helm chart `openfaas-5.3.8` but set `namespace=not-default-openfaas` and `functionNamespace=not-default-openfaas-fn`\r\n2. Open the gateway ui\r\n3. Try to deploy `NodeInfo`\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nfaas-netes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nosx\r\n\r\n\r\n', 'comments': ['/assign: me', 'Ref: https://github.com/openfaas/faas-netes/issues/511', '>The UI should request the list of namespaces and use the first one in the list as the default.\r\n\r\n@LucasRoesler and @alexellis do we think this is ok? the backend isnt returning my ""default"" namespace first?\r\n\r\n', '@Waterdrips i think we can update he providers to always put the default namespace first', '/close\r\n\r\nthis should have been closed by #1409 but i put the same issue (#1408 ) in the close section twice']}"
1410,functions scaled to zero during execution,https://github.com/openfaas/faas/issues/1410,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nIf scaling-to-zero is enabled and a function is invoked after being scaled to zero for some time, it can happen that during execution of the function, it is scaled back down again, resulting in a 502 (bad gateway) error.\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nScaling to zero should never happen while a function is currently running.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nThe faasIdler checks in a defined interval if it can scale functions to zero. As far as I understand, it uses metrics from prometheus to check for the latest invocation of a function and scales it down if the defined inactivity duration is exceeded. However, it seems as if the metrics are only updated **after** an execution, which can lead to a downscaling if during the function execution the faasIdler does its regular check. See following example with logs.\r\n\r\nCurrent default values for faasIdler are:\r\ninactivityDuration: 15m\r\nreconcileInterval: 1m\r\n\r\nSo each minute faasIdler will check if it can scale a function down to zero which was inactive for at least 15m. \r\n\r\nLet's say some function was indeed inactive for a period longer than these 15m, so it is was correctly scaled down to zero some time in the past. At 14:22:18 (see following gateway logs) the function is invoked again so a scaling up to one replica is triggered. After 5 sec the scale up was successful and the function is executed (it needs about 30sec to finish). However, at 14:22:36 the faasIdler does its every minute check and as the last invocation (before the currently running one) was far in the past, it triggers again a scale to zero. As a result the running function fails seconds later with a 502 error.\r\n\r\n```bash\r\n2019/12/18 14:22:18 [Scale 0] function=mandant1-print-3 0 => 1 requested\r\n\r\n...\r\n\r\n2019/12/18 14:22:23 [Scale] function=mandant1-print-3 0 => 1 successful - 5.503548 seconds\r\n\r\n...\r\n\r\n2019/12/18 14:22:36 Forwarded [POST] to /system/scale-function/mandant1-print-3 - [202] - 0.010112 seconds\r\n\r\n...\r\n\r\n2019/12/18 14:22:39 error with upstream request to: , Post http://mandant1-print-3.openfaas-fn.svc.cluster.local:8080: dial tcp 10.100.135.123:8080: connect: connection refused\r\n2019/12/18 14:22:39 Forwarded [POST] to /function/mandant1-print-3 - [502] - 15.500122 seconds\r\n```\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nWithout knowing enough about the concrete implementation possible solutions could be:\r\n1) invocation information should be stored in prometheus at the start of a function, so faasIdler does not scale it down while it is still running\r\n2) faasIdler or gateway should check if a function is currently running before scaling it down\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Install Openfaas, e.g. in local Minikube and enable faasIdler (`dryRun: false`)\r\n2. Create a function (which should have a reasonable execution time, e.g. use a `sleep(20s)`) with scale-to-zero enabled (set label `com.openfaas.scale.zero: true`) and wait till the faasIdler has scaled it down to zero\r\n3. Check the faasIdler logs to find out when the every minute check roughly happens (e.g. always at xx:xx:36)\r\n4. Trigger the function shortly before the next faasIdler check, so it should still be running when the check happens\r\n5. Function will be scaled down and fail\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nScaling to zero is a great feature and one we really would like to use in production, especially as some of our functions are only invoked a few times a day. However, with the current behaviour we experience regularly failing functions. \r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\nFor reproduction we used the following env, but the bug originally appeared with slightly older versions of Openfaas running in GKE.\r\n- Minikube v1.5.2 with Kubernetes v1.15.4 on Windows10 (hyperv)\r\n\t- docker (in minikube vm) 18.09.9\r\n- Openfaas installed via Helm chart version 5.3.10\r\n\t- openfaas/gateway:0.18.6\r\n\t- openfaas/faas-netes:0.9.15\r\n\t- openfaas/faas-idler:0.2.1\r\n\r\n"", 'comments': ['Please can you move this to https://github.com/openfaas-incubator/faas-idler ?\r\n\r\nThanks for your interest and report. ', '@alexellis GitHub allows you to move an issue to a different repo ', ""@stefanprodan I'm well aware of that, but what you may have missed is that the faas-idler is in a different organisation, something that's not supported yet. 🤔  The only option for org to org transfers is what I've asked for. ""]}"
1413,function invocation incorrect for multiple namespaces,https://github.com/openfaas/faas/issues/1413,"{'description': '## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n- [x] Checked UI output, CLI output, both consistently wrong\r\n- [x] Checked https://github.com/openfaas/faas and https://github.com/openfaas/faas-netes codebase\r\n\r\n## Expected Behaviour\r\nI have wordcount function in `openfaas-fn` and in `another-ns` namespaces\r\n\r\nI invoke the wordcount function multiple times in both namespaces in my web UI portal. The invocation count in the web UI shows the correct number of invocations in both namespaces. And the CLI also shows same correct count as the web UI portal when function is invoked from web UI portal. When CLI invokes the function using `$ faas invoke wordcount` or using `$ faas invoke wordcount -n <namespace>`, the count is shown correctly in both CLI and web UI portal\r\n\r\n## Current Behaviour\r\n\r\nI invoked the wordcount function multiple times in both namespaces in my web UI portal. But the invocation count in the web UI doesn\'t increase, it shows the same count, in both namespaces. And the CLI also shows same count as the web UI portal when invoked from web UI portal. But when CLI invokes the function using `$ faas invoke wordcount` , the count increases in both CLI and web UI portal\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. install openfaas in k8s with k3sup. this installs with openfaas-fn as the default namespace for functions. login to the gateway in the cli\r\n\r\n2. deploy functions in openfaas-fn using this \r\n\r\n```\r\n$ faas deploy -f https://raw.githubusercontent.com/openfaas/faas/master/stack.yml\r\n```\r\n\r\n3. add another namespace in k8s\r\n```\r\n$ kubectl create ns another-ns\r\n$ kubectl annotate namespace/another-ns openfaas=""1""\r\n$ # check namespaces list\r\n$ faas namespaces\r\n```\r\n4. deploy wordcount function in the new namespace using the below yaml file\r\n\r\n```\r\n# stack.yml\r\nprovider:\r\n  name: openfaas\r\n  gateway: http://127.0.0.1:8080  # can be a remote server\r\n\r\nfunctions:\r\n  wordcount:\r\n    lang: dockerfile\r\n    image: functions/alpine:latest\r\n    fprocess: ""wc""\r\n    skip_build: true\r\n    namespace: another-ns\r\n```\r\n\r\n```\r\n$ faas deploy -f stack.yml\r\n```\r\n\r\n5. Go to the web UI portal, invoke the function in `openfaas-fn` namespace and in `another-ns` namespace\r\n\r\nYou will notice that the count doesn\'t increase in the UI, and it doesn\'t increase in the CLI too, when doing `$ faas list` or `$ faas list -n openfaas-fn` or `$ faas list -n another-ns`\r\n\r\n6. Invoke the function using the CLI\r\n\r\n```\r\n$ faas invoke wordcount\r\n...\r\n$ faas list\r\n...\r\n```\r\n\r\nAlso check web UI portal. the count shows up now, increases, but is the number of CLI invocations\r\n\r\n7. Invoke the function using the CLI but with namespace flag. You will notice count doesn\'t increase and is wrong\r\n\r\n```\r\n$ faas invoke wordcount -n openfaas-fn\r\n...\r\n$ faas invoke wordcount -n another-ns\r\n...\r\n$ faas list\r\n$ faas list -n openfaas-fn\r\n$ faas list -n another-ns\r\n...\r\n\r\n```\r\n\r\n## Context\r\nI was just trying out openfaas. Noticed that my invocation count shows up wrong\r\n\r\n## Your Environment\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\nCLI:\r\n commit:  73004c23e5a4d3fdb7352f953247473477477a64\r\n version: 0.11.3\r\n\r\nGateway\r\n uri:     http://127.0.0.1:8080\r\n version: 0.18.7\r\n sha:     59b7839236098820e73ed25301258b722c3d33e4\r\n commit:  Change how and when we fetch and parse namespace info\r\n\r\n\r\nProvider\r\n name:          faas-netes\r\n orchestration: kubernetes\r\n version:       0.9.15\r\n sha:           41c33f9f7c29e8276bd01387f78d6f0cff847890\r\n```\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```\r\n# minikube vm docker\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea838\r\n Built:             Wed Nov 13 07:22:05 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea838\r\n  Built:            Wed Nov 13 07:28:45 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          commit: d736ef14f0288d6993a1845745d6756cfc9ddd5a\r\n  GitCommit:\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOS Catalina. v 10.15.2\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\nProvided it all above 😄 \r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\nInitially I kind of assumed that the invocation count comes from prometheus, later it turned out to be the truth. So, I was seeing Grafana and Prometheus and seeing the metrics for invocation count. This is what Prometheus shows when I try what I have described above:\r\n\r\n<img width=""1429"" alt=""prometheus metrics"" src=""https://user-images.githubusercontent.com/12808424/71312135-81facb00-244d-11ea-8523-8d8e101b6243.png"">\r\n\r\nYou can see below how the CLI shows the number as `6` for `wordcount` function, in both namespaces. My default is `openfaas-fn` when nothing is provided\r\n\r\n<img width=""734"" alt=""Screen Shot 2019-12-21 at 9 28 46 PM"" src=""https://user-images.githubusercontent.com/12808424/71312141-87f0ac00-244d-11ea-9fbd-9f72bcfecba5.png"">\r\n\r\nIn prometheus, the metric which has the value 6 is this:\r\n\r\n```\r\ngateway_function_invocation_total{app=""gateway"",code=""200"",function_name=""wordcount"",instance=""172.17.0.17:8082"",job=""kubernetes-pods"",kubernetes_namespace=""openfaas"",kubernetes_pod_name=""gateway-6c94b87f84-xhqzb"",pod_template_hash=""6c94b87f84""}\t6\r\n```\r\n\r\nIf you notice the `function_name` label value, it\'s `wordcount`. This is the count for the number of invocations from the CLI with `$ faas invoke wordcount`\r\n\r\nAnd there are two other metrics with different values, which relate to `wordcount` function\r\n\r\n```\r\ngateway_function_invocation_total{app=""gateway"",code=""200"",function_name=""wordcount.another-ns"",instance=""172.17.0.17:8082"",job=""kubernetes-pods"",kubernetes_namespace=""openfaas"",kubernetes_pod_name=""gateway-6c94b87f84-xhqzb"",pod_template_hash=""6c94b87f84""}\t11\r\ngateway_function_invocation_total{app=""gateway"",code=""200"",function_name=""wordcount.openfaas-fn"",instance=""172.17.0.17:8082"",job=""kubernetes-pods"",kubernetes_namespace=""openfaas"",kubernetes_pod_name=""gateway-6c94b87f84-xhqzb"",pod_template_hash=""6c94b87f84""}\t22\r\n```\r\n\r\nNotice the `function_name` label values, it\'s `wordcount.another-ns` and `wordcount.openfaas-fn`. This is the count of invocations that happened when I invoked in web UI. \r\n\r\nBut it doesn\'t show up as that though, it shows up as 6\r\n\r\n<img width=""1440"" alt=""Screen Shot 2019-12-21 at 9 34 11 PM"" src=""https://user-images.githubusercontent.com/12808424/71312150-93dc6e00-244d-11ea-93a1-d419e00a6e7e.png"">\r\n<img width=""1440"" alt=""Screen Shot 2019-12-21 at 9 34 00 PM"" src=""https://user-images.githubusercontent.com/12808424/71312152-9939b880-244d-11ea-90ef-00b3e3ed92e2.png"">\r\n\r\nOn checking a bit of code for how the metrics comes, some assumptions and intuitions based on input and output and how it\'s all related and connecting the dots, this is what I can say:\r\n\r\nThe key difference is how the request goes to the gateway. When I do a CLI invocation\r\n\r\n```\r\n$ faas invoke wordcount\r\n```\r\n\r\ngateway log is like\r\n\r\n```\r\ngateway-6c94b87f84-xhqzb gateway 2019/12/21 16:08:10 Forwarded [POST] to /function/wordcount - [200] - 0.019437 seconds\r\n```\r\n\r\nand for following invocations\r\n\r\n```\r\n$ faas invoke wordcount -n openfaas-fn\r\n```\r\n\r\nor invoking in web UI portal in `openfaas-fn` namespace\r\n\r\nthe gateway log is like\r\n\r\n```\r\ngateway-6c94b87f84-xhqzb gateway 2019/12/21 16:07:04 Forwarded [POST] to /function/wordcount.openfaas-fn - [200] - 0.033784 seconds\r\n```\r\n\r\nfor `another-ns`\r\n\r\n```\r\n$ faas invoke wordcount -n another-ns\r\n```\r\n\r\nor invoking in web UI portal in `another-ns` namespace\r\n\r\nthe gateway log is like\r\n\r\n```\r\ngateway-6c94b87f84-xhqzb gateway 2019/12/21 16:10:22 Forwarded [POST] to /function/wordcount.another-ns - [200] - 0.017615 seconds\r\n\r\n```\r\n\r\nThe invocation count is shown using the response from the gateway for list functions API. Checking the code, gateway uses the following code to find the invocation count using the prometheus metrics data\r\n\r\nhttps://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L155\r\n\r\nhttps://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L53-L55\r\n\r\nhttps://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L64\r\n\r\nhttps://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L91\r\n\r\nYou can see how the metric label\'s function name and the function name from the provider (? not sure about the term 😅) are matched, without considering namespace. So, seeing the above prometheus metrics data, naturally the value `6` will come, no matter what namespace the user is looking at in CLI or web ui portal.\r\n\r\nSo, that\'s one issue, reading of the invocations count data. I think to fix it - just adding the namespace along with name like `<name>.<namespace>` should work. And a test for it too!\r\n\r\nNext issue is, how did the wrong data even get into prometheus in the first place? There are three sets of invocation counts, but only two namespaces. The metric with label `function_name=wordcount` is not a correct one, there should always be a namespace to be specific about which namespace the count refers to, even though if there\'s just one. I guess I\'m right about this, considering every function Must be in a namespace and it\'s very clear that multiple namespaces is supported, namespace must be part of the label value. Do correct if I\'m missing something 😅\r\n\r\nAnd checking the code, the gateway is what exposes the metrics at port 8082. And prometheus scrapes these metrics.\r\n\r\nLooking at the metrics data, the metrics seem to be right for web UI portal invocations and for CLI invocations with namespace flag, except for the one with `function_name=wordcount` label, which got created from CLI invocations without namespace flag. This is how the gateway logs look for such a case\r\n\r\n```\r\ngateway-6c94b87f84-xhqzb gateway 2019/12/21 16:08:10 Forwarded [POST] to /function/wordcount - [200] - 0.019437 seconds\r\n```\r\n\r\nNow why does this log matter? The url path in this matters, which is `/function/wordcount`\r\n\r\nMy guess based on the code - when requests are made, they go through these parts of the code\r\n\r\nhttps://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L204-L206\r\n\r\nhttps://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L110\r\n\r\n`functionNotifiers` is here and has prometheus in it\r\n\r\nhttps://github.com/openfaas/faas/blob/03dc8824d2074d0852fe7123e41ac5baef5709a1/gateway/server.go#L83\r\n\r\nAnd the notify call is made here\r\n\r\nhttps://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/forwarding_proxy.go#L69\r\n\r\nAnd for prometheus, the implementation is here\r\n\r\nhttps://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L49\r\n\r\nand this is where the service name is obtained \r\n\r\nhttps://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L51\r\n\r\nhttps://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L76\r\n\r\nAnd here is where the metric is created for prometheus to scrape\r\n\r\nhttps://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/handlers/notifiers.go#L59-L61\r\n\r\nThis is all good, but I think the service name will be `wordcount` when url is `/function/wordcount`, but it will be `wordcount.openfaas-fn` when url is `/function/wordcount.openfaas-fn`, and so metric also will be wrong.\r\n\r\nThe following is speculation - Have to check CLI code for this.\r\n\r\nTo fix this, I think the CLI has to make calls with namespace in the url path like `/function/wordcount.openfaas-fn` if `openfaas-fn` is the default namespace. I think this is not happening, but it still works because behind the scenes, even with `/function/wordcount`, as the default namespace function is taken up somehow and it all works, but to make the invocation count work, we might have to pull in namespaces and use the first one as the default [according to this idea](https://github.com/openfaas/faas/issues/1407#issuecomment-566583230) and then use that for the request\r\n\r\nI\'ll check CLI code next to understand better 😄 and also check web UI portal code, and then post more here about my findings', 'comments': ['@LucasRoesler @Waterdrips PTAL ', '/set title: Function invocation incorrect for multiple namespaces', 'Hi @karuppiah7890 i also noticed this the other day and was thinking about the correct fix.  I think the most direct way top to fix this can be found in the scaling handler https://github.com/openfaas/faas/blob/b9a3476bcaa741f9e60bc6e9c5c2561424daeb23/gateway/handlers/scaling.go#L33\r\n\r\nWe should pass the default namespace to the PrometheusNotifier struct https://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/server.go#L75-L77  so that it knows what the default namespace is.  Similar to how we do it here https://github.com/openfaas/faas/blob/238ce1be23c327bcb0dc1c1b83e3c623d65850d2/gateway/server.go#L94\r\n\r\nAnd then using the same methods as in the scaling handler, we can then set the metric correctly.\r\n\r\nAdditionally, the `AddMetricsHandler` will need to be updated, once we are consistently setting the namespace.  We either need to add the namespace to prometheus query https://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L53-L55 or we need to pass the namespace to the mixing https://github.com/openfaas/faas/blob/df97efafae36ce7093ad353e3e6acc0e93d6300e/gateway/metrics/add_metrics.go#L78 so it can filter the metrics for the requested namespace. \r\n\r\nThe namespace would need to be selected from the GET parameters and looks like this https://github.com/openfaas/faas-netes/blob/7a645a75749a130da130fc8fc77884e712fbac5e/handlers/reader.go#L25-L31 This of course requires constructing the handler so that it knows the default namespace, passing it here https://github.com/openfaas/faas/blob/b9a3476bcaa741f9e60bc6e9c5c2561424daeb23/gateway/metrics/add_metrics.go#L17\r\n\r\nThe two changes _should_ fix the issue of saving and the selecting the correct metric per namespace, including the default namespace. I think this is the shortest and easiest way to fix the behavior.  Long term, we might also want to consider adding the namespace to the prometheus labels.\r\n\r\nIn summary:\r\n1. pass the default namespace to `PrometheusNotifier`\r\n2. pass the default namespace to `AddMetricsHandler`\r\n3. During notify, ensure that the function name is formatted as `<function name>.<namespace>`, inserting the default namespace as needed\r\n4. during the metrics mixin, make sure that we filter the metrics correctly by reading the requested namespace from the GET parameters and then filtering thee query/response from prometheus\r\n\r\n', ""A fix is being worked on by @viveksyngh in https://github.com/openfaas/faas/pull/1488 - I'm not sure if it follows the above 1:1, but we are reviewing it.""]}"
1422,http_content_length can't be negative,https://github.com/openfaas/faas/issues/1422,"{'description': '<!-- Due dilligence -->\r\nWhenever there is a body in request env variable shows `Http_Content_Length=-1` (if empty shows 0).\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\nI was expecting to see the length of body, especially for text (not binary)\r\n\r\n## Current Behaviour\r\nAlways shows -1\r\n\r\n## Possible Solution\r\n\r\nProbably change https://github.com/openfaas/faas/blob/master/watchdog/handler.go#L238\r\nto `%s` (though it\'s int64 type). I guess, I can submit bug fix bit later.\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. `faas-cli deploy --name env --fprocess=""env"" --image=""functions/alpine:latest""`\r\n2. (if needed) port-forward your cli\r\n3. `curl \'http://127.0.0.1:31112/function/env/\' -X POST -d """" | grep -I length`  And see 0 (or `echo """" | faas-cli invoke env` \r\n4.  `curl \'http://127.0.0.1:31112/function/env/\' -X POST -d ""Alice "" | grep -I length ` And see -1\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\nCLI:\r\n commit:  0ab4012784510381e2b90c031ede3d77197b10b1\r\n version: 0.11.0\r\n\r\nGateway\r\n uri:     http://127.0.0.1:31112\r\n version: 0.18.7\r\n sha:     59b7839236098820e73ed25301258b722c3d33e4\r\n commit:  Change how and when we fetch and parse namespace info\r\n\r\n\r\nProvider\r\n name:          faas-netes\r\n orchestration: kubernetes\r\n version:       0.9.15\r\n sha:           41c33f9f7c29e8276bd01387f78d6f0cff847890\r\nYour faas-cli version (0.11.0) may be out of date. Version: 0.11.3 is now available on GitHub.\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 19.03.5\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? k8s on DO.\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Mac\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide]\r\n\r\nit\'s in classic-watchdog. Afaik everything goes toward of-watchdog and thus issue should be fixed there. \r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': [""Hi this is as expected, it's set to -1 whenever the content is being sent by the client in chunked mode.\r\n\r\nWhat is the actual issue you appear to be having? This appears to be rather abstract. "", '@alexellis so it’s a misleading, I’d be rather expecting for it to have a real value. \r\nThus, a developer can rely on that. Anyway, for a developer watchdog is a ‘black box’.', ""I asked before, but I'll ask again.\r\n\r\nWhat are you trying to do? What's the problem you're trying to solve?"", 'I would like to help you solve whatever issue you are facing, rather than getting into the details of the watchdog. You\'re seeing correct behaviour. The gateway doesn\'t buffer requests in memory, but passes them on setting the header ""Content-Type: chunked"", if you see Content-Type -1 then you need to ignore the content length, since it is unknown.\r\n\r\nTo help disambiguate I\'ve updated the README for the watchdog and added a new env `Http_Transfer_Encoding`, if it\'s set then you can be sure you should ignore the content length.\r\n\r\nIf you let me know what you\'re specifically trying to do, then maybe I can help you?']}"
1427,unable to login after successful install,https://github.com/openfaas/faas/issues/1427,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nI'm starting with openfaas. Installed docker on my machine and successfully installed openfaas in my machine. Unfortunately I am unable to login with the credentials from my terminal.\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nI would like to login with my credentials.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nUnable to login.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. install docker\r\n2. initialize docker swarm\r\n3. run openfaas install script\r\n4. try login\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nJust trying openfaas\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): 0.11.3\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 0.18.0\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? Docker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Linux Mint Tina\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['For some reason it just worked after some time! I thought that was automatic, but took some time.', 'No worries, please join Slack for technical support. We just use GitHub for issues in the code and for planning features. ']}"
1429,secret mounted file - stricter permissions ,https://github.com/openfaas/faas/issues/1429,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nA library that we use expects configuration files with secrets in them to have permissions '600' or '400'. \r\n\r\nIt would be nice for the default permissions for secrets exposed to be that, or make them configurable. \r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nThe secrets exposed by faas have '640' on a readonly filesystem, so we can't even chmod them before using the in the handler. \r\n\r\nThe workaround is to copy them and chmod them at the beginning of the handler. Which is not the right way to do it. \r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n```\r\nCLI:\r\n commit:  25cada08609e00bed526790a6bdd19e49ca9aa63\r\n version: 0.8.14\r\n```\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea838\r\n Built:             Wed Nov 13 07:29:52 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea838\r\n  Built:            Wed Nov 13 07:28:22 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n\r\n```\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? Kubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Linux Ubuntu\r\n\r\n"", 'comments': ['Hi 👋 thanks for your interest in the project. Does ""a library"" constitute ssh? Can you give concrete examples please, we should have repro instructions.\r\n\r\nAlex\r\n\r\ncc @LucasRoesler ', ""We're using https://pypi.org/project/cwclientlib/ \r\n\r\nFor a extract let me try, in handler : \r\n\r\n```python\r\nimport os\r\nfrom cwclientlib import cwproxy_for\r\n    \r\ndef handle(req):\r\n    os.environ['CWCLCONF'] = '/var/openfaas/secrets/cwclient-conf'\r\n    client = cwproxy_for('example')\r\n```\r\n\r\nI know that psql from postgresql has similar restrictions when reading `.pgpass` "", 'Changing this behavior will need to be implemented in each provider, e.g. in faas-netes, we would to update this line of code https://github.com/openfaas/faas-netes/blob/0fe88f3a672c45335e644854f44811a1db287d69/k8s/secrets.go#L226, setting the `DefaultMode` property\r\n> // Mode bits to use on created files by default. Must be a value between 0 and 0777\r\n\r\nIt seems reasonable that secrets are read only, in general', ""Seems reasonable. We haven't had any other users report this as of yet.\r\n\r\nThanks for documenting the work-around and let's gauge the interest-level?"", 'No further interest has been expressed. Locking', '/lock: inactivity']}"
1471,faas node: context.succeed is not a function,https://github.com/openfaas/faas/issues/1471,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nI followed https://docs.openfaas.com/cli/templates/\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\nNo errors:\r\n```\r\n    context\r\n        .succeed(result)\r\n        .status(201)\r\n```\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n```\r\nTypeError: context.succeed is not a function\r\n    at module.exports (/home/app/function/handler.js:25:10)\r\n    at /home/app/index.js:25:20\r\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)\r\n```\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. handler.js\r\n```\r\n\'use strict\'\r\n\r\nmodule.exports = (event, context) => {\r\n    let err;\r\n    const result = {\r\n        status: ""Received input: "" + JSON.stringify(event.body),\r\n    };\r\n\r\n    context\r\n        .succeed(result)\r\n        .status(201)\r\n}\r\n```\r\n\r\n2. test.yml\r\n```\r\nversion: 1.0\r\nprovider:\r\n  name: openfaas\r\n  gateway: http://127.0.0.1:8080\r\nfunctions:\r\n  auth-token:\r\n    lang: node\r\n    handler: ./auth-token\r\n    image: derekc/auth-token:latest\r\n    environment:\r\n      write_debug: true\r\n```\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\nfaas-cli version\r\n  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | \'_ \\ / _ \\ \'_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  ea687659ecf14931a29be46c4d2866899d36c282\r\n version: 0.11.8\r\n\r\nGateway\r\n uri:     http://127.0.0.1:8080\r\n version: 0.18.11\r\n sha:     326cc7a9b9235276ecf38430c49a5707a429c6c8\r\n commit:  Add featured videos section to community file\r\n\r\n\r\nProvider\r\n name:          faas-swarm\r\n orchestration: swarm\r\n version:       0.8.2 \r\n sha:           47988f8ba284678f3eb86eb62f75f72bafeec4d9\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```\r\ndocker version\r\nClient: Docker Engine - Community\r\n Version:           19.03.5\r\n API version:       1.40\r\n Go version:        go1.12.12\r\n Git commit:        633a0ea\r\n Built:             Wed Nov 13 07:22:34 2019\r\n OS/Arch:           darwin/amd64\r\n Experimental:      false\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.5\r\n  API version:      1.40 (minimum version 1.12)\r\n  Go version:       go1.12.12\r\n  Git commit:       633a0ea\r\n  Built:            Wed Nov 13 07:29:19 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          v1.2.10\r\n  GitCommit:        b34a5c8af56e510852c35414db4c1f4fa6172339\r\n runc:\r\n  Version:          1.0.0-rc8+dev\r\n  GitCommit:        3e425f80a8c931f88e6d94a8c831b9d5aa481657\r\n docker-init:\r\n  Version:          0.18.0\r\n  GitCommit:        fec3683\r\n```\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n`Docker Swarm`\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n`MaxOS`\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n`as above`\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['I am trying to \r\n- determine if POST or GET was invoked\r\n- manipulate the response headers', 'managed to solve my own problem...\r\nuse `lang: node8-express` in the yml file\r\n\r\nthen I can see the event contains:\r\n```javascript\r\n{\r\n    ""event"": {\r\n        ""body"": {\r\n            ""app_id"": ""123"",\r\n            ""app_secret"": ""456""\r\n        },\r\n        ""headers"": {\r\n            ""host"": ""auth-token:8080"",\r\n            ""user-agent"": ""PostmanRuntime/7.22.0"",\r\n            ""transfer-encoding"": ""chunked"",\r\n            ""accept"": ""*/*"",\r\n            ""accept-encoding"": ""gzip, deflate, br"",\r\n            ""cache-control"": ""no-cache"",\r\n            ""content-type"": ""application/json"",\r\n            ""postman-token"": ""89fcfab0-55c9-4f8f-b486-d0616b83e4bf"",\r\n            ""x-call-id"": ""f6076922-3776-4f59-a298-7a691ae97950"",\r\n            ""x-forwarded-for"": ""10.0.0.2:58076"",\r\n            ""x-forwarded-host"": ""127.0.0.1:8080"",\r\n            ""x-start-time"": ""1583600481071409400""\r\n        },\r\n        ""method"": ""POST"",\r\n        ""query"": {},\r\n        ""path"": ""/""\r\n    }\r\n}\r\n```\r\n\r\nI got that from this video \r\nhttps://www.youtube.com/watch?v=uZPXwuKxsEU\r\n', 'Hi @dcolley the issue was that you were using the wrong template.\r\n\r\nYou should not use Node.js 8, that repo has been archived. The LTS version of Node.js is 12, use the `node12` template instead, which is documented in the link you shared at docs.openfaas.com\r\n\r\nAlex']}"
1475,powershell core editions cannot properly run deploy_stack.ps1,https://github.com/openfaas/faas/issues/1475,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\nCurrently, .NET Core does not support System.Web.dll which causes `[System.Web.Security.Membership]::GeneratePassword(14, 5)` to fail.\r\n\r\nWhen running the script with a `Core` edition of PowerShell such as `6.0.0` or `7.0.0` the script runs but fails to generate a password. The script continues to completion with no way to access the UI or CLI since the password is unknown/no-set.\r\n\r\n## Expected Behaviour\r\nIt is expected that when running `deploy_stack.ps1` in `any` version of PowerShell that the script will run successfully. \r\n\r\n## Current Behaviour\r\nIn this case, PowerShell Core cannot use the `system.web.security` assembly, therefore, cannot run `$password = [System.Web.Security.Membership]::GeneratePassword(24,5)`.\r\n\r\nThe script runs through until completion but does not successfully set the password to be used.\r\n\r\nHere is the output of the script running in `7.0.0`.\r\n\r\n```powershell\r\nPS>.\\deploy_stack.ps1\r\nInvalidOperation: C:\\Working\\faas\\deploy_stack.ps1:30\r\nLine |\r\n  30 |      $password = [System.Web.Security.Membership]::GeneratePassword(24 …\r\n     |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to find type [System.Web.Security.Membership].\r\n\r\nMethodInvocationException: C:\\Working\\faas\\deploy_stack.ps1:36\r\nLine |\r\n  36 |          $hash = $sha256.ComputeHash([System.Text.Encoding]::UTF8.GetB …\r\n     |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling ""GetBytes"" with ""1"" argument(s): ""Array cannot be null. (Parameter \'chars\')""\r\n\r\nMethodInvocationException: C:\\Working\\faas\\deploy_stack.ps1:38\r\nLine |\r\n  38 |          $secret = [System.BitConverter]::ToString($hash).Replace(\'-\', …\r\n     |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling ""ToString"" with ""1"" argument(s): ""Value cannot be null. (Parameter \'value\')""\r\n\r\nAttempting to create credentials for gateway..\r\n```\r\n\r\n## Possible Solution\r\n* The `best` solution is to determine an alternate method to generate (securely) a random password without requiring `system.web.dll` do to lack of support for `Core` PowerShell editions. \r\n\r\n* A temporary solution would be to add `#Requires -PSEdition Desktop` to at least notify the end-user that using a `Core` version of PowerShell will not work. It currently `appears` to complete but there is no way to log in.\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Open `PowerShell Core` (`6.0.0`, `7.0.0`, etc.)\r\n2. Run `deploy_stack.ps1` (using default parameters)\r\n\r\n## Context\r\nSimply trying to run default installation/deployment of OpenFaas via Docker Swarm.\r\n\r\n\r\n## Your Environment\r\n\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): 0.1.6\r\n```\r\n======================================\r\n======= Sonra Intelligence Ltd =======\r\n=======    FaaS Python SDK     =======\r\n=======     version 0.1.6      =======\r\n======================================\r\n```\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 19.03.5\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Windows\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem: `./deploy_stack.ps1`\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n```powershell\r\nPS>.\\deploy_stack.ps1\r\nInvalidOperation: C:\\Working\\faas\\deploy_stack.ps1:30\r\nLine |\r\n  30 |      $password = [System.Web.Security.Membership]::GeneratePassword(24 …\r\n     |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Unable to find type [System.Web.Security.Membership].\r\n\r\nMethodInvocationException: C:\\Working\\faas\\deploy_stack.ps1:36\r\nLine |\r\n  36 |          $hash = $sha256.ComputeHash([System.Text.Encoding]::UTF8.GetB …\r\n     |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling ""GetBytes"" with ""1"" argument(s): ""Array cannot be null. (Parameter \'chars\')""\r\n\r\nMethodInvocationException: C:\\Working\\faas\\deploy_stack.ps1:38\r\nLine |\r\n  38 |          $secret = [System.BitConverter]::ToString($hash).Replace(\'-\', …\r\n     |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling ""ToString"" with ""1"" argument(s): ""Value cannot be null. (Parameter \'value\')""\r\n\r\nAttempting to create credentials for gateway..\r\n```\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Thanks for bringing this up!\r\n\r\nThere are no real password requirements as far as OpenFaaS is concerned. In the `deploy_stack` file, we are simply doing a service for the user in generating a random string to be used as a password that can not be easily guessed.\r\n\r\nI\'m fairly certain there is a function (or commandlet) in PowerShell that is similar to the one used in our [bash scripts](https://github.com/openfaas/faas/blob/master/deploy_stack.sh#L34):\r\n```sh\r\nsecret=$(head -c 16 /dev/urandom| $sha_cmd | cut -d "" "" -f 1)\r\n```\r\n', ""In that case, I put together this function that should mimic what the snippet is doing in the bash script.\r\n\r\n```powershell\r\nfunction generatePassword {\r\n    $b = [byte[]](1..16)\r\n    (new-object Security.Cryptography.RNGCryptoServiceProvider).GetBytes($b)\r\n    $string = [Text.encoding]::UTF8.GetBytes( -join ($b | ForEach-Object { [char[]](65..90 + 57..33)[$_%51] }))\r\n    $hmacsha = New-Object System.Security.Cryptography.HMACSHA256\r\n    $hash = $hmacsha.ComputeHash([Text.Encoding]::ASCII.GetBytes($string))\r\n    $password = ([System.BitConverter]::ToString($hash) -replace '-', '').ToLower()\r\n    return $password\r\n}\r\n```\r\n\r\nA sample output would be: `b9963b19b42e15b9b95e9ee1124aff4520974886f12f3f944629cca43737cffd`\r\n\r\nI have tested the function on these PowerShell versions:\r\n* 7.0.0\r\n* 5.1\r\n* 2.0\r\n\r\nWhat are your thoughts?"", ""I like it! It's great that it works across the versions and is self-contained within the script.\r\n\r\nI'm surprised it's as complex as it is, but it does work (just tested on my Windows 5.1). I'd be happy with this in a PR. Thanks! 💯 "", ""Yes, it is a little longer than the bash version but I can't seem to find a way around it. in `5.1` there is a cmdlet `Get-Hash -Algorithm SHA256` that would work perfect but doesn't seem to be available in `Core/7.0.0`.\r\n\r\nThank you for the feedback. I will submit a PR."", 'Okay, now that I am putting the new code into the actual `depoy_stack.ps1` file I was able to shorten the code to this:\r\n\r\n```powershell\r\n    $password = -join ((33..126) * 120 | Get-Random -Count 24 | ForEach-Object { [char]$_ })\r\n    $secret = """"\r\n```', ""I would say that I prefer the `generatePassword` version than the alternative which doesn't appear to be as secure/safe at first glance. "", '@alexellis I agree, `generatePassword` would be ideal since it is already available. However, since it is not a feature of the `Core` versions of PowerShell it seems that it would be best to provide a like alternative. If you look at the source code for `generatePassword` the alternative is basically doing the same thing. https://github.com/microsoft/referencesource/blob/f461f1986ca4027720656a0c77bede9963e20b7e/System.Web/Security/Membership.cs#L302', 'The powershell script has been removed, please use arkade instead, or helm and Git Bash.', '/lock: resolved']}"
1479,queue-driven jobs,https://github.com/openfaas/faas/issues/1479,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n\r\nThe ability create functions that aren't necessarily invoked, but instead constantly reading off some queue or queue-like structure. These functions would scale up and down automatically based on queue length or other factors.\r\n\r\n## Current Behaviour\r\n\r\nIt looks like currently (from what I've read) functions must be invoked in some way. You can accomplish this through Triggers & Connectors, but it'd be nice to be able to have a pull-based model vs pushed based.\r\n\r\n\r\n## Possible Solution\r\n\r\nSome prior art here would be [Azure Functions](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-queue-trigger?tabs=csharp) as well as [Dapr](https://dapr.io/) when combined with [Keda](keda.sh). Since Keda is now in the CNCF, it could even potentially used to complement OpenFaas's own scaling component.\r\n\r\n## Context\r\n\r\nThe motivation is the typical case of wanting to put work on a queue, and then distribute it.\r\n"", 'comments': [""@RichiCoder1 have you seen the docs on [event source triggers](https://docs.openfaas.com/reference/triggers/#add-your-own-event-source)\r\n\r\nWe have NATS, Kafka, RabbitMQ, AWS SQS, and others available.\r\n\r\nThe link you shared to Azure functions is posting an event to a message queue from their storage service. You could do similar things by posting an event to a Kafka stream, or NATS topic and OpenFaaS can trigger a function invocation from that message.\r\n\r\nThere is also the [cron connector](https://github.com/openfaas-incubator/cron-connector) if you're looking for delayed invocation of a function. If you wanted to, you could have the cron connector periodically call a function that could read from a data source, and in turn, execute a function as designated in that data source.\r\n\r\nServerless functions are by nature a push invocation as they are only active when needed. It's just a matter of how you decide to trigger the function. With OpenFaaS there are a lot of options"", ""> @RichiCoder1 have you seen the docs on event source triggers\r\n\r\n>We have NATS, Kafka, RabbitMQ, AWS SQS, and others available.\r\n\r\nJust, I edited a bit late, but I did mention that in the Current Behavior. \r\n\r\n> Serverless functions are by nature a push invocation as they are only active when needed. It's just a matter of how you decide to trigger the function. With OpenFaaS there are a lot of options\r\n\r\nI guess my request/question is that is there a way that they could, via some component, become pull based? Going though the full invocation seems a little wasteful."", '> Going though the full invocation seems a little wasteful.\r\n\r\nI\'m not sure what you mean by ""wasteful"". I\'d counter that with saying that having a function running continuously scanning for changes seems wasteful. Rather, the function to do the work should only be ran when it\'s needed.\r\n\r\nI think, for your case, the best bet would be using the cron connector run on a tight schedule to watch a directory, or other data source.\r\n\r\nGenerally speaking though, using the [NATS connector](https://github.com/openfaas-incubator/nats-connector) or [Kafka connector](https://github.com/openfaas-incubator/kafka-connector) would be more efficient as the functions would be listening and only become active when a message appears in the queue', ""> Generally speaking though, using the NATS connector or Kafka connector would be more efficient as the functions would be listening and only become active when a message appears in the queue\r\n\r\nApologies, this is what I meant. OpenFaas scales the function up based on queue length (and down to zero if queue length is zero). When spun up, the function's host uses the target's native queue consumption to pull in items and invoke the function locally, ala something like watchdog. Rather than going through the gateway invocation."", '@RichiCoder1 you are very concretely right that functions must be invoked, but the way we have handled this via the queue-worker, see https://docs.openfaas.com/reference/async/  and https://github.com/openfaas/nats-queue-worker, the worker watches the queues and then invokes the functions. \r\n\r\nThis allows the functions to be implemented and scaled completely agnostic to the source of the payload.  It also allows significant flexibility to different use cases and queue patterns that direct reading of the queue would either prevent or make significantly complex.\r\n\r\nA typcial deployment usually looks like this:\r\n\r\n![queue-worker-flow](https://user-images.githubusercontent.com/6358735/32060206-047eb75c-ba66-11e7-94d3-1343ea1811db.png)\r\n\r\nThe queue can be fed in two ways, in the flow shown above:\r\n1. Using the async endpoint, you can queue payloads into the queue\r\n2. The queue can be filled via any other external method\r\n\r\nAside from a general concern for efficiency, is there a specific metric or measurement you have made in this type of deployment that will cause this architecture to not work in your use case?\r\n', '@LucasRoesler Not at the moment. That makes sense to me. Thanks for the explanation! Will reopen/new issue if I run into a specific issue or unmet use case', '@RichiCoder1 I am going to mark this as closed.  Thanks for feedback and if you run into any issues or have questions about how to adapt the Queue Worker pattern for your specific queuing needs, feel free to reach out in any of the Slack channels.\r\n', 'Thank you @LucasRoesler and @burtonr for the detailed explanations. ', '/lock: resolved']}"
1486,deploying keras models using tensorflow,https://github.com/openfaas/faas/issues/1486,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [X] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [X] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [X] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nI am trying to deploy a model by using keras. The needed packages (Keras, python-opencv, etc.) installed successful except tensorflow. The error message is in the following:\r\n\r\n``` ERROR: Could not find a version that satisfies the requirement tensorflow (from -r requirements.txt (line 1)) (from versions: none)\r\nERROR: No matching distribution found for tensorflow (from -r requirements.txt (line 1))\r\nThe command '/bin/sh -c pip install -r requirements.txt --target=/home/app/python' returned a non-zero code: 1\r\n\r\n[0] < Building demo done in 4.75s.\r\n[0] Worker done.\r\nTotal build time: 4.75\r\n\r\nErrors received during build:\r\n- [demo] received non-zero exit code from build, error: The command '/bin/sh -c pip install -r requirements.txt --target=/home/app/python' returned a non-zero code: 1\r\n```\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nInstall tensorflow library successful.\r\n\r\n\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. faas-cli new --lang python-debian tf-faas\r\n2. cd tf-faas\r\n3. vim requirements.txt add tensorflow\r\n4. faas build -f tf-faas.yml\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):0.11.3\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):18.09.6\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? Kubernetes \r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Linux\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:N/A\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting) :N/A\r\n\r\n## Next steps\r\nKeep trying to find out the cause of the bug. If I have a new discovery, I will describe it here\r\n\r\n"", 'comments': [""Hi, sorry but we don't do technical support over GitHub issues. I believe we are already helping you on Slack. Feel free to create a github issue with all the code and send a link into the thread where we are already helping you. ""]}"
1490,async calls to functions resulting in 404 page not found,https://github.com/openfaas/faas/issues/1490,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nWhen functions are invoked using the --async flag, it should result in a 202 Accepted message and then the funtion should run in the background.\r\nI tried sending a POST request to the /async-function/<function-name> route, but it ended with the same 404 error.\r\n\r\nBut it works as expected when I try doing this with synchronous functions/ by using the /function/<function-name> route.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n ""Server returned unexpected status code: 404 - 404 page not found""\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n 1. Built, pushed and deployed function\r\n 2. faas-cli invoke <function-name> --async\r\nOR\r\n2. curl -d \'random data\' -X POST https://testingopenfaas.ml/async-function/helloworld\r\n\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nI was working through the labs in the OpenFaaS workshop.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\nCLI:\r\n commit:  ea687659ecf14931a29be46c4d2866899d36c282\r\n version: 0.11.8\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\nClient: Docker Engine - Community\r\n Version:           19.03.7\r\n API version:       1.40\r\n \r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.7\r\n  API version:      1.40 (minimum version 1.12)\r\n \r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\nDocker Swarm\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nLinux (Ubuntu 16.04)\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n\r\nhttps://github.com/openfaas/workshop/blob/master/lab7.md\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Hi there, thanks for using OpenFaaS.\r\n\r\nGiven that you\'re A) using Docker Swarm and B) using HTTPS it implies you have some kind of proxy or other product in front of OpenFaaS. My best guess is that you\'ve configured that incorrectly.\r\n\r\nI\'m not aware of any issues with the async invocations right now, and cannot reproduce your issue: \r\n\r\n```\r\nk3d create\r\nexport KUBECONFIG=""$(k3d get-kubeconfig --name=\'k3s-default\')""\r\nkubectl rollout status -n openfaas deploy/gateway\r\nkubectl port-forward -n openfaas svc/gateway 8080:8080 &\r\n\r\n# If basic auth is enabled, you can now log into your gateway:\r\nPASSWORD=$(kubectl get secret -n openfaas basic-auth -o jsonpath=""{.data.basic-auth-password}"" | base64 --decode; echo)\r\necho -n $PASSWORD | faas-cli login --username admin --password-stdin\r\n\r\nfaas-cli store deploy figlet\r\n\r\necho ""Test data"" | faas-cli invoke figlet --async\r\n\r\necho ""Test data"" | faas-cli invoke figlet --async\r\nHandling connection for 8080\r\nFunction submitted asynchronously.\r\n\r\n\r\ncurl -i -d ""Test data"" http://127.0.0.1:8080/async-function/figlet\r\nHandling connection for 8080\r\nHTTP/1.1 202 Accepted\r\nX-Call-Id: 95d6d758-8111-495a-a5a9-2f49fb183545\r\nX-Start-Time: 1585040651676299200\r\nDate: Tue, 24 Mar 2020 09:04:11 GMT\r\nContent-Length: 0\r\n```\r\n\r\nIf you require technical support for your reverse proxy, we can provide consulting, or you may want to talk to the vendor of the proxy to see how to configure it? If we can prove a genuine issue with the gateway in OpenFaaS, I\'m happy to re-open this issue.\r\n\r\nAlex', '/add label: support,swarm', ""Hey Alex,\r\n\r\nThanks for the quick response. I think that may be the issue, I do have Traefik set up in front of OpenFaaS. I'll try reconfiguring it to allow async functions.\r\n\r\nThanks"", 'Update: I was able to resolve the issue by adding /async-function under the labels in the docker-compose.yml file and then rebooting Traefik.\r\n\r\nThankd for directing me to the cause of the issue.', 'Sounds like a misconfiguration of Traefik, easy to do. Glad you got the result you wanted.\r\n\r\nI would recommend that you look at Kubernetes though.']}"
1495,docker,https://github.com/openfaas/faas/issues/1495,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [ ] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['/add label: invalid']}"
1516,register external service as function (custom deployment),https://github.com/openfaas/faas/issues/1516,"{'description': 'The current developer workflow is optimal and simple:\r\n\r\n- new\r\n- build\r\n- push\r\n- deploy\r\n- remove\r\n\r\nSome use cases (like the recurring ""[mounted volume](https://github.com/openfaas/faas/issues/1178)"" issue) could be solved in a more generic way if we could deploy the function by other means and ""register"" it later on in OpenFaaS. So an alternative workflow for ""external"" services could be:\r\n\r\n- new\r\n- build\r\n- push\r\n- deploy externally (using helm, kubectl, docker stack, whatever)\r\n- register\r\n- remove (just unregister in this case)\r\n\r\nRegistering an external service would create the pŕoper routes in the gateway (this is still a faas-cli generated container, so that should be simple enough).\r\n\r\nThis could be a very easy way to generically address custom deployment needs but still preserving simplicity on the rest of the workflow. Doesn\'t sound like it would have a great impact on code and it could also be a particular case for the operator too.\r\n\r\nWhat do you think?\r\n', 'comments': ['Hi thanks for the suggestion. I need to know - is this just a dressed up request for volumes? I would like to know what specific usecase you have any where the current solution is falling short for you. It can be tempting to just present a technical solution, but we need to make sure the problem is understood well enough before going there. Alex', 'I have 2 use cases in here:\r\n\r\n- Yes, volumes. My function is a Pipelinewise adaptation to FaaS and even though each job is stateless in itself, scaling to more than a single instance demands a shared folder (like NFS);\r\n- Additional k8s yaml for each function. In my case I am ""surrounding"" each function with a few custom resources that uniquely affect it on the ingress controller (Kong).', ""Do you want this for Swarm or for Kubernetes? It's unclear which, since this repo is mainly for Swarm."", 'Closing as inactive.']}"
1527,crud c#,https://github.com/openfaas/faas/issues/1527,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [ ] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['/add label: invalid']}"
1530,using pull dog,https://github.com/openfaas/faas/issues/1530,"{'description': ""I recently launched a service that I believe could be helpful in this repository. It's free to use (from a demo-cluster pool of free servers), and I need feedback. I think it could really be a win-win for us both.\r\n\r\nhttps://dogger.io\r\n\r\nIt automatically spawns up a Docker-based test environment for each of your pull requests, based on a docker-compose.yml file that you choose.\r\n\r\nI think it could be helpful in general, to test things out in production before they are merged.\r\n\r\nWhat do you think? It is already used by the [Portainer project](https://github.com/portainer/portainer), and they have been very happy with it so far."", 'comments': ['Hi @ffMathy,\r\n\r\nJust some general feedback for you on your style and brand here.\r\n\r\nSome folks may call this the equivalent of ""cold calling"" - when someone phones you up with no context, and doesn\'t even know your name, firing off as many leads as they can, to see which stick (you know that feeling when a LinkedIn recruiter contacts you?):\r\n\r\n<img width=""837"" alt=""Screenshot 2020-05-17 at 15 19 50"" src=""https://user-images.githubusercontent.com/6358735/82150955-ddd94c80-9851-11ea-9345-0505e38190c5.png"">\r\n\r\nOther folks might be more understanding, and see past that.\r\n\r\nI\'m not sure that dogger is going to solve a problem for us right now, but will bear it in mind for the future if something comes up.\r\n\r\nAlex', ""Hi @alexellis - thank you for your reply.\r\n\r\nI carefully looked those projects up, and I can assure you that it's not just intended as spam, but I can see how it may be viewed that way. I'm not interested in non-relevant users either. They all have a `docker-compose.yml` file and are Docker Compose based.\r\n\r\nPortainer was happy that I contacted them this way, and it actually solved a problem for them. That way, I don't see how it's necessarily bad.\r\n\r\nThat being said, I respect your view on this, and I'll see if I can find a way to target this in a more relevant manner.\r\n\r\nI'm super happy you're willing to keep Pull Dog in mind in the future!"", ""Best of luck with the product. It's likely that you'll need more than one method and channel to get to critical mass. "", '/lock']}"
1533,piperci not listed in adopters.md,https://github.com/openfaas/faas/issues/1533,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [X] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [X] Searched [past issues](/issues)\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nPiperCI should be listed in ADOPTERS.md\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nPiperCI not listed in ADOPTERS.md\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nAccept PR to add PiperCI to ADOPTERS.md\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. See ADOPTERS.md\r\n2. Notice that PiperCI is not listed.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nThe team I work on maintains PiperCI.\r\n\r\n## Your Environment\r\nN/A\r\n\r\n\r\n"", 'comments': ['Hi there, please go ahead and send a PR. See #776 for what we\'re looking for. It should be more than a bullet saying ""we use this"", but also how/what for. Thank you. ', 'Thanks Alex. I submitted: https://github.com/openfaas/faas/pull/1534 right after submitting this issue.', 'Thanks for pulling. Closing issue.']}"
1536,why functions are automatically public ?,https://github.com/openfaas/faas/issues/1536,"{'description': 'Making every function public is not the best idea. I would prefer making all functions private by default and make certain functions only public. Is there a way to change this behaviour ? Is there a way that I can change the kubernetes ressources created by the cli ? Maybe then I can remove the ingress rule for the function ?', 'comments': [""Hi thank you for your interest in the project. I just wanted to let you know that we don't handle miscellaneous questions through GitHub issues, but through Slack.\n\nFeel free to join and fire away using threads."", '/msg: slack', '--\nJoin Slack to connect with the community\nhttps://docs.openfaas.com/community\n', '/lock']}"
1545,errors you may encounter when upgrading the library,https://github.com/openfaas/faas/issues/1545,"{'description': '(The purpose of this report is to alert `openfaas/faas` to the possible problems when `openfaas/faas` try to upgrade the following dependencies)\r\n\r\n## An error will happen when upgrading library _prometheus/client_golang_:\r\n\r\n### github.com/prometheus/client_golang  \r\n-Latest Version: v1.6.0   (Latest commit 6edbbd9 on 28 Apr)\r\n-Where did you use it: \r\nhttps://github.com/search?q=prometheus%2Fclient_golang++repo%3Aopenfaas%2Ffaas+path%3A%2Fwatchdog+path%3A%2Fgateway+path%3A%2Fauth%2Fbasic-auth&type=Code&ref=advsearch&l=&l= \r\n-Detail: \r\n>[github.com/prometheus/client_golang/go.mod](https://github.com/prometheus/client_golang/blob/v1.6.0/go.mod#L5)\r\n```\r\nmodule github.com/prometheus/client_golang\r\ngo 1.11\r\nrequire (\r\n\tgithub.com/beorn7/perks v1.0.1\r\n\tgithub.com/cespare/xxhash/v2 v2.1.1\r\n\t…\r\n)\r\n```\r\n>[github.com/prometheus/client_golang/prometheus/registry.go](https://github.com/prometheus/client_golang/blob/v1.6.0/prometheus/registry.go#L28)\r\n```\r\npackage prometheus\r\nimport (\r\n\t""github.com/cespare/xxhash/v2""\r\n\t""github.com/golang/protobuf/proto""\r\n\t…\r\n)\r\n```\r\nThis problem was introduced since **_prometheus/client_golang v1.2.0_** .Now you used version [v1.1.0](https://github.com/openfaas/faas/blob/master/gateway/Gopkg.toml#L19). If you try to upgrade  **prometheus/client_golang** to version **v1.2.0** and **above**, you will get an error--- **_no package exists at ""github.com/cespare/xxhash/v2""_**\r\n\r\n## I investigated the libraries  (**prometheus/client_golang >= v1.2.0**)  release information and found the root casue of this issue is that---- \r\n1.\tThese dependencies all added [Go modules](https://github.com/golang/go/wiki/Modules) in the recent versions.\r\n\r\n2.\tThey all comply with the specification of ""Releasing Modules for v2 or higher"" available in the Modules documentation. Quoting the specification:\r\n> A package that has migrated to Go Modules _must_ include the major version in the import path to reference any v2+ modules. For example,  Repo github.com/my/module migrated to Modules on version v3.x.y.  Then this repo should declare its module path with MAJOR version suffix ""/v3""  (e.g., module `github.com/my/module/v3`), and its downstream project should use `""github.com/my/module/v3/mypkg""` to import this repo’s package.\r\n\r\n3.\tThis ""github.com/my/module/v3/mypkg"" is not the `physical path`. So earlier versions of Go (including those that don\'t have minimal module awareness) plus all tooling (like dep, glide, govendor, etc) don\'t have `minimal module awareness` as of now and therefore don\'t handle import paths correctly See [golang/dep#1962](https://github.com/golang/dep/issues/1962), [golang/dep#2139](https://github.com/golang/dep/issues/2139).\r\n> Note: creating a new branch is not required. If instead you have been previously releasing on master and would prefer to tag v3.0.0 on master, that is a viable option. (However, be aware that introducing an incompatible API change in master can cause issues for non-modules users who issue a go get -u given the go tool is not aware of semver prior to Go 1.11 or when module mode is not enabled in Go 1.11+).\r\n> Pre-existing dependency management solutions such as dep currently can have problems consuming a v2+ module created in this way. See for example dep#1962.\r\nhttps://github.com/golang/go/wiki/Modules#releasing-modules-v2-or-higher\r\n\r\n\r\n## Solution\r\n### 1. Migrate to Go Modules.\r\nGo Modules is the general trend of ecosystem, if you want a better upgrade package experience, migrating to Go Modules is a good choice.\r\n\r\nMigrate to modules will be accompanied by the introduction of virtual paths(It was discussed above).\r\n> This ""github.com/my/module/v3/mypkg"" is not the `physical path`. So Go versions older than 1.9.7 and 1.10.3 plus all third-party dependency management tools (like dep, glide, govendor, etc) don\'t have `minimal module awareness` as of now and therefore don\'t handle import paths correctly.\r\n\r\nThen the downstream projects might be negatively affected in their building if they are module-unaware (Go versions older than 1.9.7 and 1.10.3; Or use third-party dependency management tools, such as: Dep, glide, govendor…).\r\n\r\n**[*]** You can see who will be affected here: [6 module-unaware users, i.e., stack360/faas-lambdroid, itscaro/faas-docs, asantos2000/serverless-benchmark]\r\nhttps://github.com/search?l=&q=openfaas%2Ffaas+filename%3Avendor.conf+filename%3Avendor.json+filename%3Aglide.toml+filename%3AGodep.toml+filename%3AGodep.json&type=Code\r\n\r\n### 2. Maintaining v2+ libraries that use Go Modules in Vendor directories. \r\nIf `openfaas/faas` want to keep using the dependency manage tools (like dep, glide, govendor, etc), and still want to upgrade the dependencies, can choose this fix strategy.\r\nManually download the dependencies into the vendor directory and do compatibility dispose(materialize the virtual path or delete the virtual part of the path). Avoid fetching the dependencies by virtual import paths. This may add some maintenance overhead compared to using modules.\r\n\r\nThere are 35 module users downstream, such as PEng2020-Subject3/faas-policy-provider, derailed/k9s, Qolzam/telar-cli…)\r\nhttps://github.com/search?q=openfaas%2Ffaas+filename%3Ago.mod&type=Code \r\n\r\nAs the import paths have different meanings between the projects adopting module repos and the non-module repos, materialize the virtual path is a better way to solve the issue, while ensuring compatibility with downstream module users. A textbook example provided by repo `github.com/moby/moby` is here:\r\nhttps://github.com/moby/moby/blob/master/VENDORING.md\r\nhttps://github.com/moby/moby/blob/master/vendor.conf\r\nIn the vendor directory, `github.com/moby/moby` adds the **/vN** subdirectory in the corresponding dependencies.\r\n**This will help more downstream module users to work well with your package.**\r\n\r\n### 3. Request upstream to do compatibility processing.\r\nThe `prometheus/client_golang` have 1049 module-unaware users in github, such as: containerd/cri, gridgentoo/MapD, Mr8/yuanye…\r\nhttps://github.com/search?o=desc&q=prometheus%2Fclient_golang+filename%3Avendor.conf+filename%3Avendor.json+filename%3Aglide.toml+filename%3AGodep.toml+filename%3AGodep.json&s=indexed&type=Code\r\n\r\n\r\n## Summary\r\nYou can make a choice when you meet this DM issues by balancing your own development schedules/mode against the affects on the downstream projects.\r\n\r\nFor this issue, Solution 1 can maximize your benefits and with minimal impacts to your downstream projects the ecosystem. \r\n\r\n\r\n## References\r\n* https://github.com/golang/go/wiki/Modules#semantic-import-versioning\r\n* https://golang.org/cmd/go/#hdr-Module_compatibility_and_semantic_versioning\r\n* https://github.com/golang/go/wiki/Modules#releasing-modules-v2-or-higher\r\n\r\nDo you plan to upgrade the libraries in near future?\r\nHope this issue report can help you ^_^\r\nThank you very much for your attention.\r\n\r\nBest regards,\r\nKate\r\n', 'comments': [' @alexellis  @Waterdrips  Could you help me review this issue? Thx :p\r\nBy the way, have you ever encountered such errors when upgading the libraries?', ""Hi,\r\n\r\nI saw that your account appears to be automating GitHub issues, perhaps as a bot.\r\n\r\nWe haven't updated this dependency yet so are unaware of any issues, but will look into them at the time. What kind of outcome are you hoping for?\r\n\r\nAlex"", 'Even the comments seem automated -> https://github.com/googlecloudrobotics/core/issues/51\r\n\r\n<img width=""1113"" alt=""Screenshot 2020-07-07 at 09 36 33"" src=""https://user-images.githubusercontent.com/6358735/86749712-5c25c400-c035-11ea-9d78-d19f47875e2d.png"">', '@alexellis  I am a Ph.D. student and my research topic is developing an effective technique to help open-source developers manage their Golang dependencies. I just provided the detection results of my detection tool and try to find a better way to help Go projects to adapt to module management mechanism. This is a non-trivial task. Guaranteeing the quality of our open-source community is our common goal. Thank for your support and understanding.\r\n \r\n \r\nBest regards,\r\nKate']}"
1564,faas-idler crashloopbackoff,https://github.com/openfaas/faas/issues/1564,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- I have a fresh installation of OpenFaas on K8s by helm chart. It is up and running.\r\n\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\nall pods is runing\r\n\r\n\r\n## Current Behaviour\r\nfaas-idler pod can't start.\r\npod log:\r\n```\r\n2020-08-20T10:26:49.354929456Z panic: invalid character 'i' looking for beginning of value\r\n2020-08-20T10:26:49.354957688Z \r\n2020-08-20T10:26:49.354960819Z goroutine 1 [running]:\r\n2020-08-20T10:26:49.354963071Z main.main()\r\n2020-08-20T10:26:49.354965252Z \t/go/src/github.com/openfaas-incubator/faas-idler/main.go:72 +0x847\r\n```\r\n\r\n\r\n## Possible Solution\r\nWhat could be the reason of this ?\r\nHow can I further investigate the issue and find a couse of the problem ?\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\nIf using Swarm, run the following and include the output:\r\n\r\n```\r\ncurl -sLS https://raw.githubusercontent.com/moby/moby/master/contrib/check-config.sh | bash\r\n```\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['The reason of this is #1563 .', '/lock: inactivity']}"
1565,invoke function in the ui is not working when direct_function is set to false,https://github.com/openfaas/faas/issues/1565,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe ""invoke"" button should call the function and the UI shoud show the function return.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n<img width=""1094"" alt=""image"" src=""https://user-images.githubusercontent.com/2770972/91423817-54c2b000-e859-11ea-9aef-45a08f6c53ff.png"">\r\n\r\nAs you can the see the call is failing because when the operator try to lookup for the function service, the name used is concatenated with the namespace.\r\nThis is working with direct_function set to true because in this case the operator is not involved.\r\n \r\nGiven that, imho there is two options : \r\n\r\n1. Removing the namespace when the UI is calling the function because it is working in both mode (direct_function) \r\n2. Make the gateway and operator being able to work with the namespace added to the function name.\r\n\r\nI have seen new feature about using multiple namespaces so the option 2 is maybe the best one as it will probably have less impacts.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\nI’m not 100% sure that this is the best option, but as OpenFaaS does not support multiple namespace when direct_function is set to false, removing it in the «\xa0trimURLTransformer\xa0» could be an option :\r\n\r\n[main.go](https://github.com/openfaas/faas/blob/master/gateway/main.go#L96)\r\n\r\n```\r\n\tnilURLTransformer := handlers.TransparentURLPathTransformer{}\r\n\ttrimURLTransformer := handlers.FunctionPrefixTrimmingURLPathTransformer{}\r\n\r\n\tif config.DirectFunctions {\r\n\t\tfunctionURLResolver = handlers.FunctionAsHostBaseURLResolver{\r\n\t\t\tFunctionSuffix:    config.DirectFunctionsSuffix,\r\n\t\t\tFunctionNamespace: config.Namespace,\r\n\t\t}\r\n\t\tfunctionURLTransformer = trimURLTransformer\r\n\t} else {\r\n\t\tfunctionURLResolver = urlResolver\r\n\t\tfunctionURLTransformer = nilURLTransformer\r\n\t}\r\n```\r\n\r\n[forwarding_proxy.go](https://github.com/openfaas/faas/blob/master/gateway/handlers/forwarding_proxy.go#L214)\r\n\r\n```\r\n// Transform returns the URL path unchanged.\r\nfunc (f TransparentURLPathTransformer) Transform(r *http.Request) string {\r\n\treturn r.URL.Path // remove the namespace at the end\r\n}\r\n\r\n```\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Deploy the openfaas with direct_functions set to false\r\n2. Deploy nodeinfo function sample\r\n3. Hit the invoke button\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nThis issue seems to only occurs in the UI which is has a minimal impact on our project. I raise this issue also to be sure that there is no further impact that I was not able to see.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): \r\n0.12.4\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): \r\n19.03.13-beta2\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)? \r\nKubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOs 10.15.4\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\nIf using Swarm, run the following and include the output:\r\n\r\n```\r\ncurl -sLS https://raw.githubusercontent.com/moby/moby/master/contrib/check-config.sh | bash\r\n```\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['We are getting really close with multiple namespace support in the operator, i would rather fix this bug in the operator instead of hacking the gateway here. I will definitely take a look this weekend', '@phgache I have created a potential fix in faas-netes, if you checkout https://github.com/openfaas/faas-netes/pull/683 you can see the testing instructions and if you are feeling adventurous, give it a try and help us verify the fix', 'Fixed in: https://github.com/openfaas/faas-netes/releases/tag/0.12.3\r\n\r\n@phgache please could you try it out?', 'Hi,\r\n\r\nI have deployed the new version and the bug is fixed.\r\n\r\nThanks @LucasRoesler & @alexellis ']}"
1567,wrong content-type header when calling function through gateway,https://github.com/openfaas/faas/issues/1567,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nWhen a function is called through the gateway, it should return the same headers (and specifically the same content-type header) than when it\'s called directly.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nWhen a function is called through gateway, if direct_functions parameter is set to false, content-type return header is equal to the content-type header sent by the client.\r\n\r\nAs an example, I have called a function directly (port 8080, through openfaas-watchdog), returned content-type is correct : \r\n\r\n```\r\n> POST / HTTP/1.1\r\n> Host: splitter-permis.axa-fr-dev-int.teal.westeurope.azure.openpaas.axa-cloud.com\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Length: 118212\r\n> Content-Type: multipart/form-data; boundary=------------------------3a7a50e10eb396f9\r\n> Expect: 100-continue\r\n>\r\n< HTTP/1.1 100 Continue\r\n* We are completely uploaded and fine\r\n< HTTP/1.1 200 OK\r\n< content-length: 471\r\n< content-type: application/json\r\n< date: Mon, 31 Aug 2020 12:51:43 GMT\r\n< x-duration-seconds: 2.179032\r\n< set-cookie: 0c76b3b7e3633de0795f8b70331200d1=1778425f7f0222fcd72a67a69b8b2d83; path=/; HttpOnly; Secure\r\n<\r\n{""files"":[{""filename"":""saltstack-enterprise-release-notes-6_2_0.pdf-1.png"",""height"":2200,""id"":""f5879bfa-e0e3-46ba-9c5a-7a3bfba694c5"",""page_number"":1,""width"":1700},{""filename"":""saltstack-enterprise-release-notes-6_2_0.pdf-2.png"",""height"":2200,""id"":""48093010-31fa-464c-a400-6cd1bf98116e"",""page_number"":2,""width"":1700},{""filename"":""saltstack-enterprise-release-notes-6_2_0.pdf-3.png"",""height"":2200,""id"":""0f933a3d-31de-43cf-9131-fbc94c955afc"",""page_number"":3,""width"":1700}]}\r\n* Connection #0 to host splitter-permis.axa-fr-dev-int.teal.westeurope.azure.openpaas.axa-cloud.com left intact\r\n```\r\n\r\nSame function, this time through openfaas gateway, returned content-type is wrong : \r\n\r\n```\r\n> POST /function/license-splitter HTTP/1.1\r\n> Host: permis-openfaas.axa-fr-dev-int.teal.westeurope.azure.openpaas.axa-cloud.com\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Length: 118212\r\n> Content-Type: multipart/form-data; boundary=------------------------f01cc375500cc272\r\n> Expect: 100-continue\r\n>\r\n< HTTP/1.1 100 Continue\r\n* We are completely uploaded and fine\r\n< HTTP/1.1 200 OK\r\n< content-length: 471\r\n< content-type: multipart/form-data; boundary=------------------------f01cc375500cc272\r\n< date: Mon, 31 Aug 2020 12:33:32 GMT\r\n< x-duration-seconds: 2.156178\r\n< set-cookie: 9757cb406d295d7baa9a8e457d584d0a=44c1eb50977a4a0a264409ad1f7f2217; path=/; HttpOnly; Secure\r\n<\r\n{""files"":[{""filename"":""saltstack-enterprise-release-notes-6_2_0.pdf-1.png"",""height"":2200,""id"":""39110274-f359-4d10-a835-a7a1e9663343"",""page_number"":1,""width"":1700},{""filename"":""saltstack-enterprise-release-notes-6_2_0.pdf-2.png"",""height"":2200,""id"":""499ed6fe-8c48-4bbd-8689-550f38399c8f"",""page_number"":2,""width"":1700},{""filename"":""saltstack-enterprise-release-notes-6_2_0.pdf-3.png"",""height"":2200,""id"":""d607cf27-77f5-4962-99b2-6bc416e73133"",""page_number"":3,""width"":1700}]}\r\n* Connection #0 to host permis-openfaas.axa-fr-dev-int.teal.westeurope.azure.openpaas.axa-cloud.com left intact\r\n```\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nI have found another issue, describing the exact same behavior, but closed in 2017, so maybe same problem but different root cause : https://github.com/openfaas/faas/issues/312\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Deploy openfaas with direct_functions set to false.\r\n2. Deploy a function asking for a multipart upload and answering with a json (for example).\r\n3. Call this function with curl -v through gateway, and check returned content-type header.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n0.12.4\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n19.03.13-beta2\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOs 10.15.4\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\nIf using Swarm, run the following and include the output:\r\n\r\n```\r\ncurl -sLS https://raw.githubusercontent.com/moby/moby/master/contrib/check-config.sh | bash\r\n```\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Please help us to help you by providing a Github repository that we can use to reproduce your issue among with detailed instructions.', '@tlemarchand hope to hear back from you soon? Do you still need this issue open?', '@alexellis Thanks for your answer. I still have the issue. Unfortunately the functions that are impacted are not public, and I have not found any public function working with an multipart upload and returning json or something else.\r\nSo I have to put up a mock to make it easily reproducible, it might take a few days ...', ""Ok, but this shouldn't really take days to reproduce. Perhaps find a simple upload example for express.js or whatever you're using and use that? I'll keep the issue open another week. "", '@alexellis you\'re right, it didn\'t took days (a nice colleague built a mock function for me) !\r\n\r\nSteps to reproduce, on OpenFaas with operator over Kubernetes and direct_functions set to false :\r\n\r\n1. Deploy this function : \r\n```\r\napiVersion: openfaas.com/v1\r\nkind: Function\r\nmetadata:\r\n  name: mock\r\nspec:\r\n  environment:\r\n    combine_output: ""false""\r\n    log_level: ERROR\r\n    read_debug: ""true""\r\n    read_timeout: 10s\r\n    write_debug: ""true""\r\n    write_timeout: 10s\r\n  image: tlemarchand/mock-function:v0\r\n  labels:\r\n    com.openfaas.scale.min: ""1""\r\n  limits:\r\n    cpu: 50m\r\n    memory: 256Mi\r\n  name: mock\r\n  requests:\r\n    cpu: 25m\r\n    memory: 128Mi\r\n```\r\n\r\n2. Upload a PDF to the function through the gateway ( : \r\n`curl -v -X POST -F file=@""/home/thomas/test.pdf"" https://gateway.openfaas/function/mock`\r\nAnd check the return : \r\n```\r\n> POST /function/mock HTTP/1.1\r\n> Host: gateway.openfaas\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Length: 118212\r\n> Content-Type: multipart/form-data; boundary=------------------------acc50ded887785be\r\n> Expect: 100-continue\r\n>\r\n< HTTP/1.1 100 Continue\r\n* We are completely uploaded and fine\r\n< HTTP/1.1 200 OK\r\n< content-length: 129\r\n< content-type: multipart/form-data; boundary=------------------------acc50ded887785be\r\n< date: Fri, 04 Sep 2020 12:58:04 GMT\r\n< x-duration-seconds: 0.865100\r\n< set-cookie: 9757cb406d295d7baa9a8e457d584d0a=66cfc9bb9377472353f808963f5d90fc; path=/; HttpOnly; Secure\r\n<\r\n[{""confidence"":0.9834659099578857,""coordinates"":{""xmax"":411,""xmin"":-9,""ymax"":1104,""ymin"":-53},""document_id"":""0"",""label"":""mock""}]\r\n```\r\nReturned content-type header is wrong.\r\n\r\n3. Expose the function directly to bypass the gateway (did it with a route, but you can do the same with an ingress) : \r\n```\r\nkind: Route\r\napiVersion: route.openshift.io/v1\r\nmetadata:\r\n  name: mock\r\nspec:\r\n  host: mock.direct\r\n  to:\r\n    kind: Service\r\n    name: mock\r\n    weight: 100\r\n  port:\r\n    targetPort: http\r\n  tls:\r\n    termination: edge\r\n    insecureEdgeTerminationPolicy: None\r\n  wildcardPolicy: None\r\n```\r\n\r\n4. Upload same PDF to the function directly : \r\n`curl -v -X POST -F file=@""/home/thomas/test.pdf"" https://mock.direct/`\r\nAnd check the return : \r\n```\r\n> POST / HTTP/1.1\r\n> Host: mock.direct\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Length: 118212\r\n> Content-Type: multipart/form-data; boundary=------------------------4140fb8cc6f9a44a\r\n> Expect: 100-continue\r\n>\r\n< HTTP/1.1 100 Continue\r\n* We are completely uploaded and fine\r\n< HTTP/1.1 200 OK\r\n< content-length: 129\r\n< content-type: application/json\r\n< date: Fri, 04 Sep 2020 13:09:50 GMT\r\n< x-duration-seconds: 0.356345\r\n< set-cookie: 8ac40157395f389a681c21b2265cd916=383e2a4e214d222b7af35b5c53542117; path=/; HttpOnly; Secure\r\n<\r\n[{""confidence"":0.9834659099578857,""coordinates"":{""xmax"":411,""xmin"":-9,""ymax"":1104,""ymin"":-53},""document_id"":""0"",""label"":""mock""}]\r\n```\r\nReturned content-type header is correct.', '/lock: closing due to inactivity']}"
1569,function deployment finish but not ready on ui and  liveness probe failed warning in pod,https://github.com/openfaas/faas/issues/1569,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nI have initially installed openfaas and work fine in the newly created kubernetes cluster (v 1.18).\r\nAnd then i try to install kuberflow v.1.1 on the same cluster. \r\nIf i try to deploy an new function, I will encounter liveness probe failed in the pod, and see Not Ready on UI.\r\nHowever, the status of the pod and service are in running status.  Also, all other previous deployed openfaas functions are still working.\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\nI am expecting the deployed function to be in Ready status on UI.\r\n\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n I will encounter liveness probe failed in the pod, and see Not Ready on UI.\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\nI wonder if it is caused by kuberflow installation. They are using istio as well. \r\nWould you please suggest how to debug and fix/workaround it ?\r\n\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Install OpenFaas \r\n2. Deploy functions, and everything works\r\n3. Install Kubeflow v.1.1\r\n4. Deploy functions, and function shows Not Ready on UI.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\nI am trying to deploy a function to openfaas.\r\n\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\nCLI:\r\n commit:  f7c29ea19b5df9d7aa87e9c70aacf4d9315da2cd\r\n version: 0.12.4\r\nYour faas-cli version (0.12.4) may be out of date. Version: 0.12.9 is now available on GitHub.\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nKubernetes \r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\nFunction pod log, not sure why it is refering to gcr.io for istio-proxy.\r\n![image](https://user-images.githubusercontent.com/52347372/93152224-37934a00-f752-11ea-98ac-7d26e348ddc7.png)\r\n\r\nFunction service log comparison. Previous deployed function is working. Newly deployed function is not working.\r\n![image](https://user-images.githubusercontent.com/52347372/93149321-1cbcd780-f74a-11ea-8516-187d6d7c9a2c.png)\r\n\r\n\r\n\r\nIf using Swarm, run the following and include the output:\r\n\r\n```\r\ncurl -sLS https://raw.githubusercontent.com/moby/moby/master/contrib/check-config.sh | bash\r\n```\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['I managed to make it work by uninstalling kubeflow.\r\n\r\nAlso, need to follow this step if istio is running on the same cluster.\r\nhttps://www.kubeflow.org/docs/started/k8s/kfctl-k8s-istio/\r\n\r\nBefore you start\r\nConfiguring your installation with kfctl_k8s_istio.v1.1.0.yaml has an option you should consider:\r\n\r\nDisabling istio installation - If your Kubernetes cluster has an existing Istio installation you may choose to not install Istio by removing the applications istio-crds and istio-install in the configuration file kfctl_k8s_istio.v1.1.0.yaml', 'Glad you were able to solve your own issue. There are some community resources for Istio, which may be of help.\r\n\r\nhttps://docs.openfaas.com/tutorials/featured/#service-mesh', '/lock']}"
1578,typo in swagger yaml (openapi definition),https://github.com/openfaas/faas/issues/1578,"{'description': 'There is a typo in the [Swagger YAML file](https://github.com/openfaas/faas/blob/master/api-docs/swagger.yml).\r\n`FunctionDefintion` should be `FunctionDefinition`', 'comments': ['@viveksyngh could you send us a PR to fix this please?', 'Thanks @noam09 ', 'Yankee can you take this?', 'Yeah sure @alexellis ', 'Thank you both!']}"
1585,github actions migration - tracking issue,https://github.com/openfaas/faas/issues/1585,"{'description': '# Inlets\r\n- [x] https://github.com/inlets/inlets-operator @jsiebens\r\n- [x] https://github.com/inlets/inletsctl\r\n- [ ] https://github.com/inlets/inlets\r\n\r\nalexellis\r\n- [x] k3sup @alexellis \r\n- [x] arkade @Waterdrips \r\n- [ ] https://github.com/alexellis/derek\r\n\r\n# openfaas\r\n\r\nMerged:\r\n- [x] https://github.com/openfaas/faas-netes @akosveres\r\n- [x] https://github.com/openfaas/templates @Waterdrips \r\n- [x] https://github.com/openfaas/nats-connector @CodeCutterUK \r\n- [x] https://github.com/openfaas/faasd @akosveres\r\n- [x] https://github.com/openfaas/ofc-bootstrap @Waterdrips \r\n- [x] https://github.com/openfaas/faas-provider closed in https://github.com/openfaas/faas-provider/pull/49\r\n- [x] https://github.com/openfaas/faas-cli\r\n- [x] https://github.com/openfaas/kafka-connector\r\n- [x] https://github.com/openfaas/cron-connector\r\n- [x] https://github.com/openfaas/openfaas-cloud @Waterdrips \r\n\r\nWaiting on Review:\r\n- [ ] https://github.com/openfaas/nats-queue-worker pending: https://github.com/openfaas/nats-queue-worker/pull/103\r\n- [ ] https://github.com/openfaas/ingress-operator pending: https://github.com/openfaas/ingress-operator/pull/42\r\n- [ ] https://github.com/openfaas/faas-idler pending https://github.com/openfaas/faas-idler/pull/44\r\n- [ ] https://github.com/openfaas/faas-swarm pending: https://github.com/openfaas/faas-swarm/pull/76\r\n- [ ] https://github.com/openfaas/certifier pending https://github.com/openfaas/certifier/pull/58\r\n- [ ] https://github.com/openfaas/of-watchdog pending https://github.com/openfaas/of-watchdog/pull/114\r\n- [ ] https://github.com/openfaas/connector-sdk pending https://github.com/openfaas/connector-sdk/pull/53\r\n- [ ] https://github.com/openfaas/faas pending https://github.com/openfaas/faas/pull/1598\r\n\r\n\r\nPending:\r\n\r\n- [ ] https://github.com/openfaas/store\r\n- [ ] https://github.com/openfaas/mqtt-connector\r\n\r\n\r\n# OpenFaaS Incubator \r\n- [ ] https://github.com/openfaas-incubator/openfaas-sqs-connector \r\n- [ ] https://github.com/openfaas-incubator/openfaas-vcenter-connector', 'comments': ['/open', '/reopen\r\n', 'Folks unfortunately the first set of merged PRs did not work as I don\'t believe that we tested them in our branches with a release tag before submitting the PR and asking for a merge. Let\'s tighten up our work before asking for a merge?\r\n\r\n## Make sure release tags work\r\n\r\nI also noticed that the Docker v2 build/push action does not copy in a .git folder, this can be worked-around as follows (with a path and context). When these are missing, the code does a fresh clone / checkout of the code and lacks the .git folder used to get versions and tags.\r\n\r\n```yaml\r\n      - name: Build multi-arch containers for validation only\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: .\r\n          file: ./Dockerfile\r\n          outputs: ""type=image,push=false""\r\n          platforms: linux/amd64,linux/arm/v7,linux/arm64\r\n          tags: |\r\n            ghcr.io/openfaas/faas-netes:${{ github.sha }}\r\n```\r\n\r\n## Include a NS variable in the image name\r\n\r\nIn order to test in our own repos, we should each have some way of overwriting `ghcr.io/openfaas/faas-netes:${{ github.sha }}` with our own username i.e. `ghcr.io/NS/faas-netes:${{ github.sha }}` where NS is a GitHub Action env-var. Have a look at https://docs.github.com/en/free-pro-team@latest/actions/reference/environment-variables\r\n\r\n## Keep naming consistent\r\n\r\nI noticed that in most PRs people changed the name of the build and publish step to whatever they preferred. Please don\'t. Let\'s make sure this is consistent for future maintenance. Match the build job with the filename too. \r\n\r\n## Build on `*`\r\n\r\nMany PRs just assumed only master would be used\r\n\r\n```yaml\r\non:\r\n  push:\r\n    branches:\r\n    - \'*\'\r\n  pull_request:\r\n    branches:\r\n    - \'*\'\r\n```\r\n\r\n* build.yaml - upon `*` for push and branches\r\n* publish.yaml - upon tags\r\n\r\n## Make sure this is multi-arch with buildx\r\n\r\nWe need to build for multiple architectures, not just `x86_64` - see the faas-netes build or the [other references examples on trello](https://trello.com/c/uqaun5lI/172-4th-nov-development-call).\r\n\r\n## Remove `.travis.yml` and `travis_terminate`\r\n\r\nRemove the `.travis.yml` file\r\n\r\nRemove the `travis_terminate` command in bash files.\r\n\r\n## Make sure the Go version is set when required\r\n\r\n```yaml\r\n\r\njobs:\r\n  build:\r\n    strategy:\r\n      matrix:\r\n        go-version: [1.13.x]\r\n        os: [ubuntu-latest]\r\n    runs-on: ${{ matrix.os }}\r\n    steps:\r\n      - uses: actions/checkout@master\r\n        with:\r\n          fetch-depth: 1\r\n      - name: Install Go\r\n        uses: actions/setup-go@v2\r\n        with:\r\n          go-version: ${{ matrix.go-version }}\r\n```\r\n\r\nSome people set the Go version to 1.11, 1.9 and 1.14 - for the time being we\'re using 1.13, but only configure the Go version if Go is used in the actions. For most of the openfaas repos Go isn\'t used at all at build-time, Docker is.\r\n\r\n## Link the artifact to the repo\r\n\r\n<img width=""1041"" alt=""Screenshot 2020-11-11 at 16 57 00"" src=""https://user-images.githubusercontent.com/6358735/98840660-f7dd9b80-243e-11eb-98f3-368b69626286.png"">\r\n', 'fyi you can get the repo name like this in an action\r\n```\r\n      - name: Get Repo\r\n        id: get_repo\r\n        run: echo ::set-output name=repo_owner::$(echo ${{ github.repository_owner }} | tr \'[:upper:]\' \'[:lower:]\')\r\n```\r\n\r\nthen ref it with this\r\n```\r\n            ghcr.io/${{ steps.get_repo.outputs.repo_owner }}/${{ matrix.svc }}:latest\r\n```\r\n\r\n\r\nthen users use ${{ github.repository_owner }} as the ""DOCKER_USERNAME"" for the docker login, rather than needing to set a secret to allow pusing to a user\'s ghcr repo while testing.\r\n\r\n\r\n(edit, changed based on conversations below, so may not make sense in those convos now)', ""@Waterdrips Yes but the catch is `event` isn't always included from what I've read, although that might only be for scheduled triggers....it's probably fine in the context of openfaas builds though, but not really my call."", 'it looks like its only scheduled builds that dont have events from the docs and forums, we dont use those currently. ', ""So using this instead of `github.repository_owner` or the currently undocumented env `GITHUB_REPOSITORY_OWNER` results in the same issue if the repo owner string is storied in a secret, which is highly likely given that the GHCR username would like be stored as a secret. Again likely not an issue for repos in a 'proper' org like, but would likely be an issue for forks thus not fully solving the issue we wanted to solve.\r\n\r\nYou can see the issue here: https://github.com/CodeCutterUK/nats-connector/runs/1395097635?check_suite_focus=true\r\nversus when the secrets are removed: https://github.com/CodeCutterUK/nats-connector/runs/1395105402?check_suite_focus=true"", 'I never found ${{ github.repository_owner }} - i have found the GH Actions docs to be not amazing... I like that more than using the event...\r\n \r\n\r\n/so as far as i can tell the problem is: \r\n\r\n* images need all lowrcase repos.\r\n* GHCR login needs your actual github username (With correct case) \r\n\r\nso we need both the explicit docker username, or use the non-lowercased repo owner (however we decide to get it) - need to decide how we manage this, we could use the ${{ github.repository_owner }} as the dockerhub login, and have a step that gets the lowercase version for image tags, repo path etc? ', '@CodeCutterUK updated based on the above:https://github.com/Waterdrips/openfaas-cloud/actions/runs/361500170 seems to work well without the secret existing', ""Yes, works perfectly without the lowercase version of the username as a secret :)\r\nAll a bit annoying really, I'm not sure there will be a work around without GH changing some code"", 'I completed the Github Action migration issue for the connector-sdk,  here is the link below:\r\nhttps://github.com/openfaas/connector-sdk/pull/53', ""Thanks to @cpanato who has volunteered to pick up the NATS queue worker. This will need a new PR, and I'd suggest using one of the other projects in this list as a template. For instance: https://github.com/openfaas/cron-connector""]}"
1586,ec2 not passing credentials to docker container - botocore.exceptions.nocredentialserror: unable to locate credentials,https://github.com/openfaas/faas/issues/1586,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- This issue has one additional caveat.  Searched diligently with no solution found.\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nWhen I run this python script on my ec2, it works with no issues.  Once I run it on docker swarm Openfaas on the same ec2 it cannot find AWS credentials.  I don\'t have aws credentials othen than the ones that are granted to the EC2.  I can not hard code the credentials they have to be inherited from the ec2 instance.\r\n\r\n## Expected Behaviour\r\nThis python script should run and insert the data frame into a redshift database ( works fine on the ec2).\r\n\r\nfrom sqlalchemy import create_engine\r\nimport awswrangler as wr\r\nimport pandas as pd\r\n\r\n\r\ndef con_rs_bld():\r\n    con_rs = wr.db.get_engine(\r\n        db_type=""postgresql"",\r\n        host=""XXXXXXXXXXXXXX"",\r\n        port=55555555,\r\n        database=""XXXXXXXXXXXXXX"",\r\n        user=""XXXXXXXXXXXXXX"",\r\n        password=""XXXXXXXXXXXXXX"",\r\n    )\r\n    return con_rs\r\n\r\n\r\ndef push_to_rs():\r\n    # pandas dataframe for testing\r\n    data = [[""tom"", 10], [""nick"", 15], [""juli"", 14]]\r\n    df = pd.DataFrame(data, columns=[""Name"", ""Age""])\r\n    # Connecting to redshift database\r\n    con_rs = con_rs_bld()\r\n    rs_schema = ""public""\r\n    bucket = ""xxxxxxxxxxxxxxxxxxx""\r\n    path = f""s3://{bucket}/etl/faas/""\r\n    iam_role = (\r\n        ""arn:aws:iam::xxxxxxxxxxxxxxxx""\r\n    )\r\n    wr.db.copy_to_redshift(\r\n        df=df,\r\n        path=path,\r\n        con=con_rs,\r\n        schema=rs_schema,\r\n        table=f""faas_test"",\r\n        mode=""append"",\r\n        index=False,\r\n        iam_role=iam_role,\r\n        keep_files=False,\r\n        use_threads=True,\r\n    )\r\n\r\n\r\ndef handle(req):\r\n    push_to_rs()\r\n\r\n\r\n## Current Behaviour\r\nWhen I run it in the open fans docker swarm variant I get the below error.\r\npip install and everything works fine. \r\n\r\n:\r\n\r\n\r\nTraceback (most recent call last):\r\n  File ""index.py"", line 18, in <module>\r\n    ret = handler.handle(st)\r\n  File ""/home/app/function/handler.py"", line 114, in handle\r\n    push_to_rs()\r\n  File ""/home/app/function/handler.py"", line 109, in push_to_rs\r\n    use_threads=True,\r\n  File ""/home/app/python/awswrangler/db.py"", line 787, in copy_to_redshift\r\n    max_rows_by_file=max_rows_by_file,\r\n  File ""/home/app/python/awswrangler/_config.py"", line 360, in wrapper\r\n    return function(**args)\r\n  File ""/home/app/python/awswrangler/s3/_write_parquet.py"", line 532, in to_parquet\r\n    max_rows_by_file=max_rows_by_file,\r\n  File ""/home/app/python/awswrangler/s3/_write_dataset.py"", line 75, in _to_dataset\r\n    df=df, path_root=path_root, use_threads=use_threads, boto3_session=boto3_session, index=index, **func_kwargs\r\n  File ""/home/app/python/awswrangler/s3/_write_parquet.py"", line 179, in _to_parquet\r\n    cpus=cpus,\r\n  File ""/home/app/python/awswrangler/s3/_write_parquet.py"", line 137, in _to_parquet_chunked\r\n    return proxy.close()  # blocking\r\n  File ""/home/app/python/awswrangler/s3/_write_concurrent.py"", line 54, in close\r\n    self._results += future.result()\r\n  File ""/opt/conda/lib/python3.7/concurrent/futures/_base.py"", line 428, in result\r\n    return self.__get_result()\r\n  File ""/opt/conda/lib/python3.7/concurrent/futures/_base.py"", line 384, in __get_result\r\n    raise self._exception\r\n  File ""/opt/conda/lib/python3.7/concurrent/futures/thread.py"", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File ""/home/app/python/awswrangler/s3/_write_concurrent.py"", line 33, in _caller\r\n    return func(**func_kwargs)\r\n  File ""/home/app/python/awswrangler/s3/_write_parquet.py"", line 106, in _write_chunk\r\n    writer.write_table(table.slice(offset, chunk_size))\r\n  File ""/opt/conda/lib/python3.7/contextlib.py"", line 119, in __exit__\r\n    next(self.gen)\r\n  File ""/home/app/python/awswrangler/s3/_write_parquet.py"", line 85, in _new_writer\r\n    writer.close()\r\n  File ""/opt/conda/lib/python3.7/contextlib.py"", line 119, in __exit__\r\n    next(self.gen)\r\n  File ""/home/app/python/awswrangler/s3/_fs.py"", line 597, in open_s3_object\r\n    s3obj.close()\r\n  File ""/home/app/python/awswrangler/s3/_fs.py"", line 541, in close\r\n    function_name=""put_object"", s3_additional_kwargs=self._s3_additional_kwargs\r\n  File ""/home/app/python/awswrangler/_utils.py"", line 287, in try_it\r\n    return f(**kwargs)\r\n  File ""/home/app/python/botocore/client.py"", line 357, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File ""/home/app/python/botocore/client.py"", line 663, in _make_api_call\r\n    operation_model, request_dict, request_context)\r\n  File ""/home/app/python/botocore/client.py"", line 682, in _make_request\r\n    return self._endpoint.make_request(operation_model, request_dict)\r\n  File ""/home/app/python/botocore/endpoint.py"", line 102, in make_request\r\n    return self._send_request(request_dict, operation_model)\r\n  File ""/home/app/python/botocore/endpoint.py"", line 132, in _send_request\r\n    request = self.create_request(request_dict, operation_model)\r\n  File ""/home/app/python/botocore/endpoint.py"", line 116, in create_request\r\n    operation_name=operation_model.name)\r\n  File ""/home/app/python/botocore/hooks.py"", line 356, in emit\r\n    return self._emitter.emit(aliased_event_name, **kwargs)\r\n  File ""/home/app/python/botocore/hooks.py"", line 228, in emit\r\n    return self._emit(event_name, kwargs)\r\n  File ""/home/app/python/botocore/hooks.py"", line 211, in _emit\r\n    response = handler(**kwargs)\r\n  File ""/home/app/python/botocore/signers.py"", line 90, in handler\r\n    return self.sign(operation_name, request)\r\n  File ""/home/app/python/botocore/signers.py"", line 162, in sign\r\n    auth.add_auth(request)\r\n  File ""/home/app/python/botocore/auth.py"", line 357, in add_auth\r\n    raise NoCredentialsError\r\nbotocore.exceptions.NoCredentialsError: Unable to locate credentials\r\nException ignored in: <function _S3Object.__del__ at 0x7f33986d4560>\r\nTraceback (most recent call last):\r\n  File ""/home/app/python/awswrangler/s3/_fs.py"", line 257, in __del__\r\n  File ""/home/app/python/awswrangler/s3/_fs.py"", line 541, in close\r\n  File ""/home/app/python/awswrangler/_utils.py"", line 287, in try_it\r\n  File ""/home/app/python/botocore/client.py"", line 357, in _api_call\r\n  File ""/home/app/python/botocore/client.py"", line 663, in _make_api_call\r\n  File ""/home/app/python/botocore/client.py"", line 682, in _make_request\r\n  File ""/home/app/python/botocore/endpoint.py"", line 102, in make_request\r\n  File ""/home/app/python/botocore/endpoint.py"", line 132, in _send_request\r\n  File ""/home/app/python/botocore/endpoint.py"", line 116, in create_request\r\n  File ""/home/app/python/botocore/hooks.py"", line 356, in emit\r\n  File ""/home/app/python/botocore/hooks.py"", line 228, in emit\r\n  File ""/home/app/python/botocore/hooks.py"", line 211, in _emit\r\n  File ""/home/app/python/botocore/signers.py"", line 90, in handler\r\n  File ""/home/app/python/botocore/signers.py"", line 162, in sign\r\n  File ""/home/app/python/botocore/auth.py"", line 357, in add_auth\r\nbotocore.exceptions.NoCredentialsError: Unable to locate credentials\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\nI\'m using the standard python-Debian but did change the docker image in the dockerfile to FROM continuumio/miniconda3\r\n\r\ncli version  version: 0.12.13\r\n\r\n  Provider\r\n name:          faas-swarm\r\n orchestration: swarm\r\n version:       0.9.0 \r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          19.03.13\r\n \r\n* Are you using Docker Swarm or Kubernetes (FaaS-netes)?\r\nDocker Swarm\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux\r\n \r\n\r\n', 'comments': ['Closing as inactive. We have also moved away from supporting swarm. ', '/lock']}"
1592,save the date 🎂 - openfaas 4th birthday!,https://github.com/openfaas/faas/issues/1592,"{'description': 'Join us for the OpenFaaS 4th birthday celebration on our online stream!\r\n\r\n![71088225-de33c580-2195-11ea-802d-0b1268bca410](https://user-images.githubusercontent.com/6358735/99195912-b1f73f00-2780-11eb-8800-c81527080b33.png)\r\n\r\n*Where:* [Sign up here for your invite](https://forms.gle/hZBSpfXHxSoEEFbz5)\r\n*Date:* 18th December 2020 1700 GMT\r\n\r\nWhat else can you do to help OpenFaaS? [Become a GitHub Sponsor for the project](http://github.com/sponsors/openfaas/) or the [project lead](http://github.com/sponsors/alexellis)\r\n\r\nGet your SWAG ready for the call 🎅\r\n\r\n* [""Gift of Serverless"" Christmas Jumper & t-shirt](https://store.openfaas.com/collections/best-sellers-2020/products/gift-of-serverless-christmas-jumper)\r\n* [OpenFaaS 4th Birthday Mug](https://store.openfaas.com/collections/best-sellers-2020/products/openfaas-4th-birthday-celebration-mug)\r\n\r\nWe\'ll also be doing a prize draw!', 'comments': ['Hi everyone, please sign up for your place at the birthday event here -> https://forms.gle/hZBSpfXHxSoEEFbz5\r\n\r\nPlaces will be limited, so make sure you can attend!', 'Is the zoom call going to be released after the celebration?', 'Everyone who signed up has now been sent the invite link and entered into the prize draw.\r\n\r\nThe YouTube live will be at 1700-1800GMT today (Friday 18th)\r\n\r\nSubscribe for the event here: \r\n\r\nhttps://youtu.be/eDDtlcAa6-U', 'Thank you to everyone who made it. Use the link above for the replay of the live stream.']}"
1597,setting up to point to both a local and remote instance,https://github.com/openfaas/faas/issues/1597,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [X ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [X ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [X ] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\nI would like to connect to both a local and remote instance at the same time and have parity between them.\r\nSo when I run `fans-cli` up, my code is deployed to both\r\n\r\n\r\n## Current Behaviour\r\nI am able to set a `OPENFAAS_URL` to my remote and local instances individually such that `faas-cli` login works with **one** at a time\r\n\r\n## Possible Solution\r\n- `OPENFAAS_URL` points to a list of instances?\r\n\r\n\r\n\r\n\r\n## Context\r\nI think it would be useful to have remote/local (i.e. `dev` / `prod`) parity\r\n\r\n## Your Environment\r\nRemote instance is a DigitalOcean 1-click OpenFaas droplet (which uses swarm, I believe)\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['So when it comes to ""deploying to production"" which is what I think you\'re saying here. I would suggest you use something like Github Actions.\r\n\r\nThen in your action simply have two URLs and run `faas-cli deploy -g URL1` followed by `faas-cli deploy -g URL2`\r\n\r\nI would never recommend that you deploy your local development images to production without testing them. I don\'t quite get that workflow.\r\n\r\nClosing as resolved. If you want to chat with the community, feel free to join Slack.', '/lock: support request', '/msg: slack']}"
1600,can't install and import `pandas` on `python3`/`python3-http` templates,https://github.com/openfaas/faas/issues/1600,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [X ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [X ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [X ] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nI\'ve been trying to spin up a simple function that will use the `Pandas` library. \r\nI\'ve added `pandas` to `requirements.txt` and imported it in `handler.py`\r\nHowever I get the following traceback when I run `faas-cli` up\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n- Pandas installs properly and can be imported properly\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n```\r\nErrors received during build:\r\n- [test] received non-zero exit code from build, error: #1 [internal] load .dockerignore\r\n#1 sha256:c76785fc49b6e457689c5a33d731f32f867f11e956186c7e94e92570a457ddca\r\n#1 transferring context: 2B done\r\n#1 DONE 0.0s\r\n\r\n#2 [internal] load build definition from Dockerfile\r\n#2 sha256:e4b7abf7a0b57605c70b0ebb9878cd78359da1e947090e14e15d92238b10ebdb\r\n#2 transferring dockerfile: 1.31kB done\r\n#2 DONE 0.0s\r\n\r\n#4 [internal] load metadata for docker.io/openfaas/classic-watchdog:0.18.18\r\n#4 sha256:82088a95ac9feceec4cab7ad4422d560f5b55753d4aabd60efbd385ab15b2366\r\n#4 DONE 1.0s\r\n\r\n#3 [internal] load metadata for docker.io/library/python:3-alpine\r\n#3 sha256:5cfd63f819a536533ccd33ab472b68bc5eaf5534980201cfb2f10a631818880f\r\n#3 DONE 1.4s\r\n\r\n#6 [watchdog 1/1] FROM docker.io/openfaas/classic-watchdog:0.18.18@sha256:6acaf3172e105177b1a6152aa75f0b2774e2330a6d505ac074e4dd571df273ae\r\n#6 sha256:392e6c0b9adeb3d6266aa06ab5bbab154da11d7edc3696f0ba5b25671959b46e\r\n#6 CACHED\r\n\r\n#12 [internal] load build context\r\n#12 sha256:05b04c8cae6954d72c4839505d47c47dc37d0c9411e281eb5790e9b8c04e6431\r\n#12 transferring context: 937B done\r\n#12 DONE 0.0s\r\n\r\n#5 [stage-1  1/18] FROM docker.io/library/python:3-alpine@sha256:4228f7566ffd3fcdcf1ce2720a109994395a39450c0005bdb70864f57abfc25d\r\n#5 sha256:46e082ca5204805e3a44b349a1894a1a7732a28a8e7c9d02f4a752fde78e88de\r\n#5 resolve docker.io/library/python:3-alpine@sha256:4228f7566ffd3fcdcf1ce2720a109994395a39450c0005bdb70864f57abfc25d done\r\n#5 sha256:d9fc4dd5c37b5e49f8cc5610fc6283f49e6fd6315093319ea9ac4c9b78f4977a 0B / 653.69kB 0.1s\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 0B / 13.36MB 0.1s\r\n#5 sha256:ce0fde1153f7c7f21c18e5c3f4d7120ea69879dafbb69b7d312c53936adfade8 0B / 230B 0.1s\r\n#5 sha256:4228f7566ffd3fcdcf1ce2720a109994395a39450c0005bdb70864f57abfc25d 1.65kB / 1.65kB done\r\n#5 sha256:fafb7be199cd058dc78f69dc34b4d06317fd642ae3079cf024f99e0f5a405bc0 1.37kB / 1.37kB done\r\n#5 sha256:bcab265f799752f405e7626395000f7d35185ef8a0abb5e5970dcb634256dc4f 7.15kB / 7.15kB done\r\n#5 sha256:188c0c94c7c576fff0792aca7ec73d67a2f7f4cb3a6e53a84559337260b36964 2.80MB / 2.80MB done\r\n#5 sha256:ce0fde1153f7c7f21c18e5c3f4d7120ea69879dafbb69b7d312c53936adfade8 230B / 230B 0.2s done\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 0B / 2.12MB 0.2s\r\n#5 sha256:d9fc4dd5c37b5e49f8cc5610fc6283f49e6fd6315093319ea9ac4c9b78f4977a 653.69kB / 653.69kB 0.3s done\r\n#5 extracting sha256:d9fc4dd5c37b5e49f8cc5610fc6283f49e6fd6315093319ea9ac4c9b78f4977a\r\n#5 extracting sha256:d9fc4dd5c37b5e49f8cc5610fc6283f49e6fd6315093319ea9ac4c9b78f4977a 0.2s done\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 1.74MB / 13.36MB 0.6s\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 172.30kB / 2.12MB 0.6s\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 3.03MB / 13.36MB 0.8s\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 409.60kB / 2.12MB 0.8s\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 4.36MB / 13.36MB 0.9s\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 682.47kB / 2.12MB 0.9s\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 911.84kB / 2.12MB 1.0s\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 6.89MB / 13.36MB 1.2s\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 1.37MB / 2.12MB 1.2s\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 8.13MB / 13.36MB 1.3s\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 1.69MB / 2.12MB 1.3s\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 10.37MB / 13.36MB 1.5s\r\n#5 sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 2.12MB / 2.12MB 1.5s done\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 11.37MB / 13.36MB 1.6s\r\n#5 sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 13.36MB / 13.36MB 1.7s done\r\n#5 extracting sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0\r\n#5 extracting sha256:8e2102c9ae14c9961daebee03b3d1d56ca27167a8e557f3fe8b89e5da23df7a0 0.5s done\r\n#5 extracting sha256:ce0fde1153f7c7f21c18e5c3f4d7120ea69879dafbb69b7d312c53936adfade8 done\r\n#5 extracting sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e\r\n#5 extracting sha256:7e05902c65ea0099b826547ab64b3071cd4ea01d99477e5d51cb9a1309752a7e 0.2s done\r\n#5 DONE 2.6s\r\n\r\n#7 [stage-1  2/18] COPY --from=watchdog /fwatchdog /usr/bin/fwatchdog\r\n#7 sha256:10338b8c288a99a97dcde16e9c81340d6c8470d1916544da4fd555ff45f3d0f0\r\n#7 DONE 0.2s\r\n\r\n#8 [stage-1  3/18] RUN chmod +x /usr/bin/fwatchdog\r\n#8 sha256:fc9b8d73dd91baab816c082669102889d55b2dabf6c582c3d9eeb7ea363d27ba\r\n#8 DONE 0.3s\r\n\r\n#9 [stage-1  4/18] RUN apk --no-cache add ca-certificates ${ADDITIONAL_PACKAGE}\r\n#9 sha256:7276f3a9e73f0d027d7cbab84a8aeaaec6ad8bc30cd94fa4a4b4ef0a68e14d54\r\n#9 0.225 fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz\r\n#9 0.477 fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz\r\n#9 0.734 OK: 15 MiB in 36 packages\r\n#9 DONE 0.8s\r\n\r\n#10 [stage-1  5/18] RUN addgroup -S app && adduser app -S -G app\r\n#10 sha256:6b0d196a65b6f9fbf77f88777f8c1e0ddfa1195cbb246ce8b48f947afa513413\r\n#10 DONE 0.3s\r\n\r\n#11 [stage-1  6/18] WORKDIR /home/app/\r\n#11 sha256:c4b39d1da06f9afdb059d26fc88d3b2e527adfd551b16f4a2cd43d99e64bf0e2\r\n#11 DONE 0.0s\r\n\r\n#13 [stage-1  7/18] COPY index.py           .\r\n#13 sha256:739f68c064568671047053b7a1ebee46b6fafb4af0da2144009946afb7b30431\r\n#13 DONE 0.0s\r\n\r\n#14 [stage-1  8/18] COPY requirements.txt   .\r\n#14 sha256:f11973cac5b0e7c5abdbf6fd30446c183b1df4120f16b6a013859e3cb3ca975e\r\n#14 DONE 0.0s\r\n\r\n#15 [stage-1  9/18] RUN chown -R app /home/app &&   mkdir -p /home/app/python && chown -R app /home/app\r\n#15 sha256:a1f09af0b8934c75d78d2097df5c818908943052e442dfa0b2a7f976d6bcb431\r\n#15 DONE 0.2s\r\n\r\n#16 [stage-1 10/18] RUN pip install -r requirements.txt --target=/home/app/python\r\n#16 sha256:875173309117578d48a7ff1e7d0a7718aebe33f60ebbd9454451e9fb0d76593e\r\n#16 DONE 1.9s\r\n\r\n#17 [stage-1 11/18] RUN mkdir -p function\r\n#17 sha256:74037e4f69c014ba2c5482129b9fafb7bad499855bc758784b416fc0862624c6\r\n#17 DONE 0.2s\r\n\r\n#18 [stage-1 12/18] RUN touch ./function/__init__.py\r\n#18 sha256:130ab409be75d8d09aa58bf266ade06b4c6e05724e68d71cf645116b91e8ce4b\r\n#18 DONE 0.2s\r\n\r\n#19 [stage-1 13/18] WORKDIR /home/app/function/\r\n#19 sha256:23a1ec09f1c91fb87cf00e7b37d3a4209d7d3eab86eebc591461e8ed7f319f4f\r\n#19 DONE 0.0s\r\n\r\n#20 [stage-1 14/18] COPY function/requirements.txt\t.\r\n#20 sha256:92d7f6e3b24c6ef02b8177bfe70903ba64487b5b0f0e4b7b440d10eac4394f5f\r\n#20 DONE 0.0s\r\n\r\n#21 [stage-1 15/18] RUN pip install -r requirements.txt --target=/home/app/python\r\n#21 sha256:6121c190bed1ffeee5b5865ecc6149dd9e93b0c6e6447d6a48be51716b4f6a28\r\n#21 2.129 Collecting pandas\r\n#21 2.260   Downloading pandas-1.1.4.tar.gz (5.2 MB)\r\n#21 3.481   Installing build dependencies: started\r\n#21 38.97   Installing build dependencies: finished with status \'error\'\r\n#21 38.97   ERROR: Command errored out with exit status 1:\r\n#21 38.97    command: /usr/local/bin/python /usr/local/lib/python3.9/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-v5785w0c/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools wheel \'Cython>=0.29.21,<3\' \'numpy==1.15.4; python_version==\'""\'""\'3.6\'""\'""\' and platform_system!=\'""\'""\'AIX\'""\'""\'\' \'numpy==1.15.4; python_version==\'""\'""\'3.7\'""\'""\' and platform_system!=\'""\'""\'AIX\'""\'""\'\' \'numpy==1.17.3; python_version==\'""\'""\'3.8\'""\'""\' and platform_system!=\'""\'""\'AIX\'""\'""\'\' \'numpy==1.16.0; python_version==\'""\'""\'3.6\'""\'""\' and platform_system==\'""\'""\'AIX\'""\'""\'\' \'numpy==1.16.0; python_version==\'""\'""\'3.7\'""\'""\' and platform_system==\'""\'""\'AIX\'""\'""\'\' \'numpy==1.17.3; python_version==\'""\'""\'3.8\'""\'""\' and platform_system==\'""\'""\'AIX\'""\'""\'\' \'numpy; python_version>=\'""\'""\'3.9\'""\'""\'\'\r\n#21 38.97        cwd: None\r\n#21 38.97   Complete output (254 lines):\r\n#21 38.97   Ignoring numpy: markers \'python_version == ""3.6"" and platform_system != ""AIX""\' don\'t match your environment\r\n#21 38.97   Ignoring numpy: markers \'python_version == ""3.7"" and platform_system != ""AIX""\' don\'t match your environment\r\n#21 38.97   Ignoring numpy: markers \'python_version == ""3.8"" and platform_system != ""AIX""\' don\'t match your environment\r\n#21 38.97   Ignoring numpy: markers \'python_version == ""3.6"" and platform_system == ""AIX""\' don\'t match your environment\r\n#21 38.97   Ignoring numpy: markers \'python_version == ""3.7"" and platform_system == ""AIX""\' don\'t match your environment\r\n#21 38.97   Ignoring numpy: markers \'python_version == ""3.8"" and platform_system == ""AIX""\' don\'t match your environment\r\n#21 38.97   Collecting setuptools\r\n#21 38.97     Downloading setuptools-50.3.2-py3-none-any.whl (785 kB)\r\n#21 38.97   Collecting wheel\r\n#21 38.97     Downloading wheel-0.35.1-py2.py3-none-any.whl (33 kB)\r\n#21 38.97   Collecting Cython<3,>=0.29.21\r\n#21 38.97     Downloading Cython-0.29.21-py2.py3-none-any.whl (974 kB)\r\n#21 38.97   Collecting numpy\r\n#21 38.97     Downloading numpy-1.19.4.zip (7.3 MB)\r\n#21 38.97     Installing build dependencies: started\r\n#21 38.97     Installing build dependencies: finished with status \'done\'\r\n#21 38.97     Getting requirements to build wheel: started\r\n#21 38.97     Getting requirements to build wheel: finished with status \'done\'\r\n#21 38.97       Preparing wheel metadata: started\r\n#21 38.97       Preparing wheel metadata: finished with status \'error\'\r\n#21 38.97       ERROR: Command errored out with exit status 1:\r\n#21 38.97        command: /usr/local/bin/python /usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py prepare_metadata_for_build_wheel /tmp/tmpyfsnbwbb\r\n#21 38.97            cwd: /tmp/pip-install-yz3g4ty8/numpy\r\n#21 38.97       Complete output (228 lines):\r\n#21 38.97       Running from numpy source directory.\r\n#21 38.97       setup.py:480: UserWarning: Unrecognized setuptools command, proceeding with generating Cython sources and expanding templates\r\n#21 38.97         run_build = parse_setuppy_commands()\r\n#21 38.97       Processing numpy/random/_bounded_integers.pxd.in\r\n#21 38.97       Processing numpy/random/_generator.pyx\r\n#21 38.97       Processing numpy/random/bit_generator.pyx\r\n#21 38.97       Processing numpy/random/mtrand.pyx\r\n#21 38.97       Processing numpy/random/_philox.pyx\r\n#21 38.97       Processing numpy/random/_sfc64.pyx\r\n#21 38.97       Processing numpy/random/_mt19937.pyx\r\n#21 38.97       Processing numpy/random/_pcg64.pyx\r\n#21 38.97       Processing numpy/random/_common.pyx\r\n#21 38.97       Processing numpy/random/_bounded_integers.pyx.in\r\n#21 38.97       Cythonizing sources\r\n#21 38.97       blas_opt_info:\r\n#21 38.97       blas_mkl_info:\r\n#21 38.97       customize UnixCCompiler\r\n#21 38.97         libraries mkl_rt not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       blis_info:\r\n#21 38.97         libraries blis not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       openblas_info:\r\n#21 38.97         libraries openblas not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_3_10_blas_threads_info:\r\n#21 38.97       Setting PTATLAS=ATLAS\r\n#21 38.97         libraries tatlas not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_3_10_blas_info:\r\n#21 38.97         libraries satlas not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_blas_threads_info:\r\n#21 38.97       Setting PTATLAS=ATLAS\r\n#21 38.97         libraries ptf77blas,ptcblas,atlas not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_blas_info:\r\n#21 38.97         libraries f77blas,cblas,atlas not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       accelerate_info:\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       /tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/system_info.py:1914: UserWarning:\r\n#21 38.97           Optimized (vendor) Blas libraries are not found.\r\n#21 38.97           Falls back to netlib Blas library which has worse performance.\r\n#21 38.97           A better performance should be easily gained by switching\r\n#21 38.97           Blas library.\r\n#21 38.97         if self._calc_info(blas):\r\n#21 38.97       blas_info:\r\n#21 38.97         libraries blas not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       /tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/system_info.py:1914: UserWarning:\r\n#21 38.97           Blas (http://www.netlib.org/blas/) libraries not found.\r\n#21 38.97           Directories to search for the libraries can be specified in the\r\n#21 38.97           numpy/distutils/site.cfg file (section [blas]) or by setting\r\n#21 38.97           the BLAS environment variable.\r\n#21 38.97         if self._calc_info(blas):\r\n#21 38.97       blas_src_info:\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       /tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/system_info.py:1914: UserWarning:\r\n#21 38.97           Blas (http://www.netlib.org/blas/) sources not found.\r\n#21 38.97           Directories to search for the sources can be specified in the\r\n#21 38.97           numpy/distutils/site.cfg file (section [blas_src]) or by setting\r\n#21 38.97           the BLAS_SRC environment variable.\r\n#21 38.97         if self._calc_info(blas):\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       non-existing path in \'numpy/distutils\': \'site.cfg\'\r\n#21 38.97       lapack_opt_info:\r\n#21 38.97       lapack_mkl_info:\r\n#21 38.97         libraries mkl_rt not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       openblas_lapack_info:\r\n#21 38.97         libraries openblas not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       openblas_clapack_info:\r\n#21 38.97         libraries openblas,lapack not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       flame_info:\r\n#21 38.97         libraries flame not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_3_10_threads_info:\r\n#21 38.97       Setting PTATLAS=ATLAS\r\n#21 38.97         libraries lapack_atlas not found in /usr/local/lib\r\n#21 38.97         libraries tatlas,tatlas not found in /usr/local/lib\r\n#21 38.97         libraries lapack_atlas not found in /usr/lib\r\n#21 38.97         libraries tatlas,tatlas not found in /usr/lib\r\n#21 38.97       <class \'numpy.distutils.system_info.atlas_3_10_threads_info\'>\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_3_10_info:\r\n#21 38.97         libraries lapack_atlas not found in /usr/local/lib\r\n#21 38.97         libraries satlas,satlas not found in /usr/local/lib\r\n#21 38.97         libraries lapack_atlas not found in /usr/lib\r\n#21 38.97         libraries satlas,satlas not found in /usr/lib\r\n#21 38.97       <class \'numpy.distutils.system_info.atlas_3_10_info\'>\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_threads_info:\r\n#21 38.97       Setting PTATLAS=ATLAS\r\n#21 38.97         libraries lapack_atlas not found in /usr/local/lib\r\n#21 38.97         libraries ptf77blas,ptcblas,atlas not found in /usr/local/lib\r\n#21 38.97         libraries lapack_atlas not found in /usr/lib\r\n#21 38.97         libraries ptf77blas,ptcblas,atlas not found in /usr/lib\r\n#21 38.97       <class \'numpy.distutils.system_info.atlas_threads_info\'>\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       atlas_info:\r\n#21 38.97         libraries lapack_atlas not found in /usr/local/lib\r\n#21 38.97         libraries f77blas,cblas,atlas not found in /usr/local/lib\r\n#21 38.97         libraries lapack_atlas not found in /usr/lib\r\n#21 38.97         libraries f77blas,cblas,atlas not found in /usr/lib\r\n#21 38.97       <class \'numpy.distutils.system_info.atlas_info\'>\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       lapack_info:\r\n#21 38.97         libraries lapack not found in [\'/usr/local/lib\', \'/usr/lib\']\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       /tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/system_info.py:1748: UserWarning:\r\n#21 38.97           Lapack (http://www.netlib.org/lapack/) libraries not found.\r\n#21 38.97           Directories to search for the libraries can be specified in the\r\n#21 38.97           numpy/distutils/site.cfg file (section [lapack]) or by setting\r\n#21 38.97           the LAPACK environment variable.\r\n#21 38.97         return getattr(self, \'_calc_info_{}\'.format(name))()\r\n#21 38.97       lapack_src_info:\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       /tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/system_info.py:1748: UserWarning:\r\n#21 38.97           Lapack (http://www.netlib.org/lapack/) sources not found.\r\n#21 38.97           Directories to search for the sources can be specified in the\r\n#21 38.97           numpy/distutils/site.cfg file (section [lapack_src]) or by setting\r\n#21 38.97           the LAPACK_SRC environment variable.\r\n#21 38.97         return getattr(self, \'_calc_info_{}\'.format(name))()\r\n#21 38.97         NOT AVAILABLE\r\n#21 38.97\r\n#21 38.97       numpy_linalg_lapack_lite:\r\n#21 38.97         FOUND:\r\n#21 38.97           language = c\r\n#21 38.97           define_macros = [(\'HAVE_BLAS_ILP64\', None), (\'BLAS_SYMBOL_SUFFIX\', \'64_\')]\r\n#21 38.97\r\n#21 38.97       /usr/local/lib/python3.9/distutils/dist.py:274: UserWarning: Unknown distribution option: \'define_macros\'\r\n#21 38.97         warnings.warn(msg)\r\n#21 38.97       running dist_info\r\n#21 38.97       running build_src\r\n#21 38.97       build_src\r\n#21 38.97       building py_modules sources\r\n#21 38.97       creating build\r\n#21 38.97       creating build/src.linux-x86_64-3.9\r\n#21 38.97       creating build/src.linux-x86_64-3.9/numpy\r\n#21 38.97       creating build/src.linux-x86_64-3.9/numpy/distutils\r\n#21 38.97       building library ""npymath"" sources\r\n#21 38.97       Could not locate executable gfortran\r\n#21 38.97       Could not locate executable f95\r\n#21 38.97       Could not locate executable ifort\r\n#21 38.97       Could not locate executable ifc\r\n#21 38.97       Could not locate executable lf95\r\n#21 38.97       Could not locate executable pgfortran\r\n#21 38.97       Could not locate executable nvfortran\r\n#21 38.97       Could not locate executable f90\r\n#21 38.97       Could not locate executable f77\r\n#21 38.97       Could not locate executable fort\r\n#21 38.97       Could not locate executable efort\r\n#21 38.97       Could not locate executable efc\r\n#21 38.97       Could not locate executable g77\r\n#21 38.97       Could not locate executable g95\r\n#21 38.97       Could not locate executable pathf95\r\n#21 38.97       Could not locate executable nagfor\r\n#21 38.97       don\'t know how to compile Fortran code on platform \'posix\'\r\n#21 38.97       Traceback (most recent call last):\r\n#21 38.97         File ""/usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py"", line 280, in <module>\r\n#21 38.97           main()\r\n#21 38.97         File ""/usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py"", line 263, in main\r\n#21 38.97           json_out[\'return_val\'] = hook(**hook_input[\'kwargs\'])\r\n#21 38.97         File ""/usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py"", line 133, in prepare_metadata_for_build_wheel\r\n#21 38.97           return hook(metadata_directory, config_settings)\r\n#21 38.97         File ""/tmp/pip-build-env-rdb65f1x/overlay/lib/python3.9/site-packages/setuptools/build_meta.py"", line 157, in prepare_metadata_for_build_wheel\r\n#21 38.97           self.run_setup()\r\n#21 38.97         File ""/tmp/pip-build-env-rdb65f1x/overlay/lib/python3.9/site-packages/setuptools/build_meta.py"", line 248, in run_setup\r\n#21 38.97           super(_BuildMetaLegacyBackend,\r\n#21 38.97         File ""/tmp/pip-build-env-rdb65f1x/overlay/lib/python3.9/site-packages/setuptools/build_meta.py"", line 142, in run_setup\r\n#21 38.97           exec(compile(code, __file__, \'exec\'), locals())\r\n#21 38.97         File ""setup.py"", line 508, in <module>\r\n#21 38.97           setup_package()\r\n#21 38.97         File ""setup.py"", line 500, in setup_package\r\n#21 38.97           setup(**metadata)\r\n#21 38.97         File ""/tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/core.py"", line 169, in setup\r\n#21 38.97           return old_setup(**new_attr)\r\n#21 38.97         File ""/tmp/pip-build-env-rdb65f1x/overlay/lib/python3.9/site-packages/setuptools/__init__.py"", line 165, in setup\r\n#21 38.97           return distutils.core.setup(**attrs)\r\n#21 38.97         File ""/usr/local/lib/python3.9/distutils/core.py"", line 148, in setup\r\n#21 38.97           dist.run_commands()\r\n#21 38.97         File ""/usr/local/lib/python3.9/distutils/dist.py"", line 966, in run_commands\r\n#21 38.97           self.run_command(cmd)\r\n#21 38.97         File ""/usr/local/lib/python3.9/distutils/dist.py"", line 985, in run_command\r\n#21 38.97           cmd_obj.run()\r\n#21 38.97         File ""/tmp/pip-build-env-rdb65f1x/overlay/lib/python3.9/site-packages/setuptools/command/dist_info.py"", line 31, in run\r\n#21 38.97           egg_info.run()\r\n#21 38.97         File ""/tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/command/egg_info.py"", line 24, in run\r\n#21 38.97           self.run_command(""build_src"")\r\n#21 38.97         File ""/usr/local/lib/python3.9/distutils/cmd.py"", line 313, in run_command\r\n#21 38.97           self.distribution.run_command(command)\r\n#21 38.97         File ""/usr/local/lib/python3.9/distutils/dist.py"", line 985, in run_command\r\n#21 38.97           cmd_obj.run()\r\n#21 38.97         File ""/tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/command/build_src.py"", line 144, in run\r\n#21 38.97           self.build_sources()\r\n#21 38.97         File ""/tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/command/build_src.py"", line 155, in build_sources\r\n#21 38.97           self.build_library_sources(*libname_info)\r\n#21 38.97         File ""/tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/command/build_src.py"", line 288, in build_library_sources\r\n#21 38.97           sources = self.generate_sources(sources, (lib_name, build_info))\r\n#21 38.97         File ""/tmp/pip-install-yz3g4ty8/numpy/numpy/distutils/command/build_src.py"", line 378, in generate_sources\r\n#21 38.97           source = func(extension, build_dir)\r\n#21 38.97         File ""numpy/core/setup.py"", line 663, in get_mathlib_info\r\n#21 38.97           raise RuntimeError(""Broken toolchain: cannot link a simple C program"")\r\n#21 38.97       RuntimeError: Broken toolchain: cannot link a simple C program\r\n#21 38.97       ----------------------------------------\r\n#21 38.97   ERROR: Command errored out with exit status 1: /usr/local/bin/python /usr/local/lib/python3.9/site-packages/pip/_vendor/pep517/_in_process.py prepare_metadata_for_build_wheel /tmp/tmpyfsnbwbb Check the logs for full command output.\r\n#21 38.97   ----------------------------------------\r\n#21 38.97 ERROR: Command errored out with exit status 1: /usr/local/bin/python /usr/local/lib/python3.9/site-packages/pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-v5785w0c/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools wheel \'Cython>=0.29.21,<3\' \'numpy==1.15.4; python_version==\'""\'""\'3.6\'""\'""\' and platform_system!=\'""\'""\'AIX\'""\'""\'\' \'numpy==1.15.4; python_version==\'""\'""\'3.7\'""\'""\' and platform_system!=\'""\'""\'AIX\'""\'""\'\' \'numpy==1.17.3; python_version==\'""\'""\'3.8\'""\'""\' and platform_system!=\'""\'""\'AIX\'""\'""\'\' \'numpy==1.16.0; python_version==\'""\'""\'3.6\'""\'""\' and platform_system==\'""\'""\'AIX\'""\'""\'\' \'numpy==1.16.0; python_version==\'""\'""\'3.7\'""\'""\' and platform_system==\'""\'""\'AIX\'""\'""\'\' \'numpy==1.17.3; python_version==\'""\'""\'3.8\'""\'""\' and platform_system==\'""\'""\'AIX\'""\'""\'\' \'numpy; python_version>=\'""\'""\'3.9\'""\'""\'\' Check the logs for full command output.\r\n#21 ERROR: executor failed running [/bin/sh -c pip install -r requirements.txt --target=/home/app/python]: exit code: 1\r\n------\r\n > [stage-1 15/18] RUN pip install -r requirements.txt --target=/home/app/python:\r\n------\r\nexecutor failed running [/bin/sh -c pip install -r requirements.txt --target=/home/app/python]: exit code: 1\r\n```\r\n\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['You need to use the debian based image for pandas, for example python3-debian\n\nThe default python image uses alpine and does not have certain required c libraries for pandas to install correctly.', '/lock: resolved, and also covered in the docs', 'Thanks @LucasRoesler ']}"
1610,openfaas on digitalocean marketplace,https://github.com/openfaas/faas/issues/1610,"{'description': 'Hey, I just tried to launch the OpenFaaS onto DigitalOcean from the [marketplace](https://marketplace.digitalocean.com/apps/openfaas). The droplet launches and shows the interactive prompt but fails after checking out this repository.\r\n\r\nIt is also mentioned in the docker swamp docs - https://docs.openfaas.com/deployment/docker-swarm/#20-deploy-the-stack\r\n\r\n<img width=""1095"" alt=""Screenshot 2020-12-26 at 08 53 24"" src=""https://user-images.githubusercontent.com/230477/103147663-da972f00-4757-11eb-9d90-16151c1c5e66.png"">\r\n\r\nIt looks like the master branch is significantly different that the tagged branches such as 0.20.5. The `/deploy_stack.sh` file has been removed so one solution could be for the server to launch and checkout a tagged version rather than using the master branch?\r\n\r\n-----\r\n\r\nWorkaround:\r\n\r\n```\r\ncd /home/openfaas-user/faas/\r\ngit checkout 0.20.5\r\n./deploy_stack.sh\r\n```\r\n\r\nor use:\r\n\r\nhttps://www.openfaas.com/blog/faasd-tls-terraform/', 'comments': ['/set title: OpenFaaS on DigitalOcean marketplace', 'We are no longer supporting Docker Swarm so I would suggest using faasd instead. We have tutorials for bash or terraform installation on DigitalOcean.\r\n\r\nhttps://github.com/openfaas/faasd\r\n\r\nAlex', 'Is it worth removing it from the marketplace though? Just to avoid confusion if people try and use it.', ""I think it would make more sense to update it to faasd to be honest. I'm trying to have a Christmas vacation, so just to let you know every reply here is sending me an alert and email. \r\n\r\nI'm sure this can wait until the new year. \r\n\r\nThanks again for making us aware of the DO marketplace issue. It's not one of our official installation methods and our docs don't mention Swarm. For help getting started see: https://docs.openfaas.com/"", '![marketplace](https://user-images.githubusercontent.com/6358735/103156899-6daa8600-47a5-11eb-95b1-3bfb69051298.png)\r\n\r\nSubmitted to DigitalOcean for review.', ""> We are no longer supporting Docker Swarm so I would suggest using faasd instead. We have tutorials for bash or terraform installation on DigitalOcean.\r\n> \r\n> https://github.com/openfaas/faasd\r\n> \r\n> Alex\r\n\r\nIf that's the case you may also want to update your documentation to reflect this. As it currently stands the docs read like Swarm isn't recommended vs isn't supported anymore. (The docker guide is also broken as `deploy_stack.sh` no longer exists)\r\n![image](https://user-images.githubusercontent.com/10501544/103367523-52849280-4a93-11eb-9704-cdcd287ff611.png)\r\n"", ""We are actually way ahead of you there we changed and merged this 15 days ago when the decision was made.\r\n\r\nhttps://github.com/openfaas/docs/pull/249\r\n\r\nI'll look into why GitHub or Netlify isn't updating the live site however."", 'FYI: https://github.com/openfaas/docs/commit/7cb055abc2d2c3f419cb0b958bc86e9138d9e8c5', ""We are now waiting on the DigitalOcean team (who I suspect, like many are enjoying their holidays) to come in and release the new version of the OpenFaaS Marketplace app.\r\n\r\nI'm sorry that you saw an older copy of the docs, the publishing issue is now resolved.""]}"
1613,openfaas cli install seems broken,https://github.com/openfaas/faas/issues/1613,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [ x] Searched [past issues](/issues)\r\n\r\nThe installation of openfaas cli `faas-cli` fails.\r\n\r\n## Expected Behaviour\r\n\r\nAfter running the command from the documentation the cli should be installed properly.\r\n\r\n## Current Behaviour\r\n\r\nOn docker alpine\r\n```\r\n/ # curl -sSL https://cli.openfaas.com | sh\r\nFinding latest version from GitHub\r\n0.12.21socket-worker-5029ae85.js\r\nDownloading package https://github.com/openfaas/faas-cli/releases/download/0.12.21socket-worker-5029ae85.js/faas-cli as /tmp/faas-cli\r\nsha256sum: WARNING: 1 of 1 computed checksums did NOT match\r\n```\r\n\r\nOn github action\r\n```\r\nFinding latest version from GitHub\r\n0.12.21socket-worker-5029ae85.js\r\nDownloading package https://github.com/openfaas/faas-cli/releases/download/0.12.21socket-worker-5029ae85.js/faas-cli as /home/runner/work/emi_ops/emi_ops/etl_functions/faas-cli\r\nsha256sum: 'standard input': no properly formatted SHA256 checksum lines found\r\nBinary checksum didn't match. Exiting\r\nError: Process completed with exit code 1.\r\n```\r\n\r\n## Possible Solution\r\nNo idea.\r\n\r\n## Context\r\nTested within docker containers both locally and on github action step.\r\n\r\n## Your Environment\r\n\r\n* Docker, Github action"", 'comments': ['Reported already in faas-cli repository\r\n- https://github.com/openfaas/faas-cli/issues/856\r\n- https://github.com/openfaas/cli.openfaas.com/pull/6', 'Thanks for your report. We already have a fix up for this in a PR. ']}"
1615,`curl -ssl https://cli.openfaas.com | sh` command fails with an error,https://github.com/openfaas/faas/issues/1615,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [ ] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nScript download the latest version of faas-cli and installs it\r\n\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nFails with error `https://github.com/openfaas/faas-cli/releases/download/0.12.21socket-worker-5029ae85.js/faas-cli` because of the wrong url\r\n\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\nCheck part in the script that builds `URL` for downloading faas-cli\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Run `curl -sSL https://cli.openfaas.com | sh` in console\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nWe can't build a new version of our project on CI because docker build fails\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): \r\nno faas-cli yet.\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nFROM docker:19.03.12-dind\r\n\r\n* Are you using Kubernetes or faasd?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux on CircleCI\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n"", 'comments': ['Duplicate of: https://github.com/openfaas/cli.openfaas.com/pull/6\r\n\r\nThanks for your interest.']}"
1625,integration testing files missing for gateway,https://github.com/openfaas/faas/issues/1625,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nWhen we try to run test for PR of this issue: https://github.com/openfaas/faas/issues/1624,  we followed instructions here: https://github.com/openfaas/faas/blob/master/gateway/tests/integration/README.md.\r\nHowever, we noticed that required file ""deploy_stack.sh"" and ""docker-compose.yml"" has been removed since this PR https://github.com/openfaas/faas/pull/1608/files\r\n\r\n## Expected Behaviour\r\nProper guideline for Integration test. \r\n\r\n\r\n## Current Behaviour\r\nCurrent [guideline for Integration testing of gateway](https://github.com/openfaas/faas/blob/master/gateway/tests/integration/README.md) is wrong due to removal of ""deploy_stack.sh"" and ""docker-compose.yml"" since this PR https://github.com/openfaas/faas/pull/1608/files\r\n\r\n\r\n## Possible Solution\r\nCan we create new image from our side on do the integration test with our system? And we are happy to contribute to new guideline.\r\n\r\n## Context\r\nWhen we try to run test for PR of this issue: https://github.com/openfaas/faas/issues/1624, we notice that.\r\n\r\n\r\n', 'comments': ['The integration tests are run through the certifier project, which is a full end to end suite. The commit notes that removed the integration tests from the gateway mention that they moved there.\r\n\r\nhttps://github.com/openfaas/certifier']}"
1630,incorrect http upstream timeout message,https://github.com/openfaas/faas/issues/1630,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nWith our nginx ingress timing out (60s) during a function, the following was logged:\r\n\r\n```\r\n[ml-walls-59d7fbb4c8-bb4jh] 2021/02/10 17:00:27 stderr: 2021-02-10 17:00:27,720 [INFO] ml-walls: sleeping: 600 \r\n[ml-walls-59d7fbb4c8-bb4jh] 2021/02/10 17:00:27 stderr: INFO:ml-walls:sleeping: 600 \r\n[ml-walls-59d7fbb4c8-bb4jh] 2021/02/10 17:01:27 Upstream HTTP request error: Post http://127.0.0.1:5005/sleep: context canceled \r\n[ml-walls-59d7fbb4c8-bb4jh] 2021/02/10 17:01:27 Upstream HTTP killed due to exec_timeout: 3m5s \r\n```\r\nBoth the reason (function's `exec_timeout`) and the elapsed time (3m5s) are incorrect. \r\n\r\n## Expected Behaviour\r\nThe timeout message doesn't contain incorrect information. \r\n\r\n## Current Behaviour\r\nAn incorrect message containing incorrect reason & duration is being logged.\r\n\r\n## Steps to reproduce\r\nWe reproduced this by creating a sleep route that sleeps longer than nginx's 60s timeout.\r\n\r\n## Environment:\r\nOpenFaaS 0.20.7 on top of EKS 1.18\r\n\r\n"", 'comments': ['Thank you for your interest in OpenFaaS.\r\n\r\nThere\'s a few things we need before we can start looking into your issue, or providing help. I\'ll try to give you a few starting points, but you will also need to do your bit to help us, help you.\r\n\r\nYou talk about ""our"" as if we (the community) would know who you are. Please see: [First impressions - introducing yourself and your use-case](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md#first-impressions---introducing-yourself-and-your-use-case)\r\n\r\nCould you give yourself or group a quick intro?\r\n\r\nYou have missed out ""Context"" which lets us know how this is affecting you and more about the problem you\'re trying to solve with this combination of technology.\r\n\r\nThe steps provided under Steps to reproduce are not actionable, so I would ask you to give step-by-step instructions or close the issue.\r\n\r\nYou may also find it useful to look up how to use [Extended timeouts](https://docs.openfaas.com/tutorials/expanded-timeouts/) in the project docs.', 'Closing due to lack of information.']}"
1631,using custom template in openfaas cloud,https://github.com/openfaas/faas/issues/1631,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nI am using on-prem openfaas cloud deployment and I want to modify a Dockerfile in python3-http template. I\'m not sure how to achieve this goal. All the tutorials focused on deploying using faas-cli (e.g `faas-cli up`). I would like to use custom Dockerfile with GitHub webhook, which works just fine for basic python3-http template. I either get:\r\n```\r\nmissing language template: Not supported language: python3-http-test for function: query\r\n```\r\nor \r\n```\r\nunsupported custom ""templates"" folder\r\n```\r\nwhen I tried to include my custom template alongside the handler files.\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): Docker 19.03.15\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)? OpenFaas Cloud on prem installed with ofc-bootstrap\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Ubuntu 18.04\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Hi, the openfaas-cloud project is archived. Feel free to see the #openfaas-cloud channel on Slack for more.\r\n\r\nAlex', 'https://slack.openfaas.io/']}"
1632,deploy openfaas to minikube,https://github.com/openfaas/faas/issues/1632,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nUsing https://medium.com/faun/getting-started-with-openfaas-on-minikube-634502c7acdf to Deploy OpenFaaS to minikube\r\n\r\nwhen invoke step 11\r\n![image](https://user-images.githubusercontent.com/23034399/107976032-e7b3fa00-6ff3-11eb-9322-b3ea6e67503d.png)\r\n\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\nConnect correctly\r\n\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n```\r\n➜  faas echo -n $PASSWORD | faas-cli login -g http://$OPENFAAS_URL -u admin --password-stdin\r\nCalling the OpenFaaS server to validate the credentials...\r\nCannot connect to OpenFaaS on URL: http://192.168.49.2:31112. Get ""http://192.168.49.2:31112/system/functions"": context deadline exceeded (Client.Timeout exceeded while awaiting headers)\r\n```\r\n\r\n## Possible Solution\r\n<!--- Not obligatory, but suggest a fix/reason for the bug, -->\r\n<!--- or ideas how to implement the addition or change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n Deploy OpenFaaS to minikube\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\n➜  faas faas-cli version\r\n  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | \'_ \\ / _ \\ \'_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  3cfd4a0fad765349f758a5ee42b12412bce0be2e\r\n version: 0.13.4\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```\r\n➜  faas docker version\r\nClient: Docker Engine - Community\r\n Cloud integration: 1.0.7\r\n Version:           20.10.2\r\n API version:       1.41\r\n Go version:        go1.13.15\r\n Git commit:        2291f61\r\n Built:             Mon Dec 28 16:12:42 2020\r\n OS/Arch:           darwin/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.2\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       8891c58\r\n  Built:            Mon Dec 28 16:15:28 2020\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.3\r\n  GitCommit:        269548fa27e0089a8b8278fc4fc781d7f65a939b\r\n runc:\r\n  Version:          1.0.0-rc92\r\n  GitCommit:        ff819c7e9184c13b7c2607fe6c30ae19403a7aff\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\n\r\nusing OpenFaaS on Kubernetes \r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nMacOS\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Thanks for your interest in OpenFaaS. It would appear that you have a networking issue with your computer, or that OpenFaaS is not correctly deployed.\r\n\r\nI would recommend you look at our docs for deploying OpenFaaS to Kubernetes and perhaps try something like KinD instead or Multipass.\r\n\r\nhttps://docs.openfaas.com/deployment/\r\n\r\nFeel free to join Slack if you need technical support.']}"
1643,make gh actions consistent and easier to test for contributors,https://github.com/openfaas/faas/issues/1643,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n\r\n## Expected Behaviour\r\nSome GitHub actions are not following the pattern that was defined like https://github.com/openfaas/faas/tree/master/.github/workflows\r\n\r\nEspecially in the `publish` workflow that has the hard-coded registry. which makes it a bit harder for community contributors to test the container build/push because they will not have access to the Openfaas registry.\r\nSo the idea is to make the publish workflow similar to others in the org\r\n\r\nI've review all the repositories in the org and the following repositories we need to change:\r\n\r\n@cpanato will take:\r\n - [ ] https://github.com/openfaas/ingress-operator - https://github.com/openfaas/ingress-operator/pull/44\r\n - [ ] https://github.com/openfaas/faas-netes - https://github.com/openfaas/faas-netes/pull/785\r\n - [ ] https://github.com/openfaas/faas-cli - need to make it similar to the others - https://github.com/openfaas/faas-cli/pull/881\r\n \r\n@developer-guy can take:\r\n - [ ] https://github.com/openfaas/nats-connector - https://github.com/openfaas/nats-connector/pull/23\r\n - [ ] https://github.com/openfaas/cron-connector - https://github.com/openfaas/cron-connector/pull/16\r\n - [ ] https://github.com/openfaas/mqtt-connector - https://github.com/openfaas/mqtt-connector/pull/6\r\n\r\n\r\n@developer-guy show interest to help as well and we will split the work\r\n"", 'comments': ['thank you @cpanato, really appreciate for analysis.', ""Hey, I'm a follower of these projects but not a contributor so I hope you don't mine me commenting, were you aware of: https://github.blog/changelog/2021-08-25-github-actions-reduce-duplication-with-action-composition/ which may help with the standardisation and consistency of your actions? "", 'Thanks for the input @Xorima \r\n\r\nI think this is mostly done now, if anything is remaining, feel free to ping me on that Issue / PR.']}"
1654,the python functions are not logging,https://github.com/openfaas/faas/issues/1654,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n## Expected Behaviour\r\nThe logs written in the function (python) should appear in the kubernetes pod logs.\r\nNot sure if this a bug, but I tried it multiple ways (print, logging library) but nothing produces the log.\r\n\r\n## Current Behaviour\r\nThe below is the python code deployed in my `openfaas` that runs inside my `kind` kubernetes. The log does not appear in the pod logs.\r\n\r\n`import sys\r\n\r\ndef handle(req):\r\n    sys.stderr.write(""The request payload is, "" + req)\r\n    return req\r\n`\r\n\r\n## Are you a GitHub Sponsor (Yes/No?) No\r\n\r\n## List All Possible Solutions and Workarounds\r\nI tried using `print` statement, then python `logging` library, but all produced no log.\r\n\r\n## Which Solution Do You Recommend?\r\nNot sure about this\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. kind create cluster --name openfaas\r\n2. `kubectl create ns`\r\n3. `helm upgrade openfaas --install openfaas/openfaas --namespace openfaas  \r\n                        --set basic_auth=true \\\r\n                        --set functionNamespace=openfaas-fn \\\r\n                        --set serviceType=LoadBalancer`\r\n4. `fass-cli new python-log --lang=python3 --prefix=<repo>`\r\n5. Write a python function that logs the input using `logging` or `sys.stderr.write`\r\n6. `faas-cli up -f python-log.yml`\r\n7. `fass-cli logs python-log`\r\n8. From another terminal, `echo | faas-cli invoke python-log` or curl the function\r\n\r\n## Context\r\nCould not trace the function execution to identify function bugs\r\n\r\n## Your Environment\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): \r\n`  ___                   _____           ____\r\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\r\n| | | | \'_ \\ / _ \\ \'_ \\| |_ / _` |/ _` \\___ \\\r\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\r\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\r\n      |_|\r\n\r\nCLI:\r\n commit:  2cec97955a254358de5443987bedf8ceee272cf8\r\n version: 0.13.9\r\n\r\nGateway\r\n uri:     http://52.191.39.155:8080\r\n version: 0.20.12\r\n sha:     a6dbb4cd0285f6dbc0bc3f43f72ceacdbdf6f227\r\n\r\n\r\nProvider\r\n name:          faas-netes\r\n orchestration: kubernetes\r\n version:       0.13.2\r\n sha:           6caf24ba21f7af171e2ade40daa033b05584b695\r\nYour faas-cli version (0.13.9) may be out of date. Version: 0.13.13 is now available on GitHub.\r\n`\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n`Client:\r\n Cloud integration: 1.0.14\r\n Version:           20.10.6\r\n API version:       1.41\r\n Go version:        go1.16.3\r\n Git commit:        370c289\r\n Built:             Fri Apr  9 22:46:57 2021\r\n OS/Arch:           darwin/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.6\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       8728dd2\r\n  Built:            Fri Apr  9 22:44:56 2021\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     true\r\n containerd:\r\n  Version:          1.4.4\r\n  GitCommit:        05f951a3781f4f2c1911b05e61c160e9c30eaa8e\r\n runc:\r\n  Version:          1.0.0-rc93\r\n  GitCommit:        12644e614e25b05da6fd08a38ffa0cfe1903fdec\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0`\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)? Openfaas\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): MacOS\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem: The python function provided above\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting) No', 'comments': [""If I remember correctly, `of-watchdog` binds the function to stderr and stdout, and I've never had this issue on JavaScript or Go functions.\r\n\r\nIs there possibly an environment variable that needs to be set in the python template? You can check using `faas template store pull <template-name>` and altering the `Dockerfile` for the template.\r\n\r\nAlternatively, you could find the source code and build your own template, maybe even make a PR if you find a bug.\r\n\r\nI'm thinking that this might just be python behavior that went unaccounted for."", ""Hi, for the python3 template you can learn about logging using the workshop: https://github.com/openfaas/workshop\r\n\r\nLook at the logging section. This does work so I'm closing the issue."", 'For anyone reading this in the future - I was following the python3-http template and couldn\'t get logging to work without the following:\r\n```\r\nenvironment:\r\n  PYTHONUNBUFFERED: ""1""\r\n```', 'Hey I think @LucasRoesler uses this with a standard logger. I also know of some customers who do. I don’t think they use that env var?', '> Hey I think @LucasRoesler uses this with a standard logger. I also know of some customers who do. I don’t think they use that env var?\r\n\r\nThe behavior is different depending on where and how you\'re logging. From my reading of the docs, I think this is because of the way stdout is captured from the handler().\r\n\r\nDid a bit of testing just now.\r\n\r\nContext: Running openfaas in Kubernetes v1.24.3\r\nK8s is running on Ubuntu VMs, which are running on Proxmox\r\n\r\nI used the template from:\r\n`faas-cli template store pull python3-http`\r\n\r\nMade a contrived handler:\r\n```python\r\nimport os\r\nimport sys\r\nimport logging\r\n\r\nlog = logging.getLogger(__name__)\r\nlog.setLevel(os.environ.get(""LOGLEVEL"", ""DEBUG""))\r\n\r\nlog.debug(""debug at global scope"")\r\nlog.info(""info at global scope"")\r\nlog.error(""error at global scope"")\r\nsys.stdout.write(""sys.stdout.write at global scope"")\r\nsys.stdout.flush()\r\nprint(""Print at global scope"")\r\n\r\n\r\ndef handle(event, context):\r\n    log.debug(""debug at handle scope"")\r\n    log.info(""info at handle scope"")\r\n    log.error(""error at handle scope"")\r\n    sys.stdout.write(""sys.stdout.write at handle scope"")\r\n    sys.stdout.flush()\r\n    print(""Print at handle scope"")\r\n\r\n    if event.method == ""GET"":\r\n        return {\r\n            ""statusCode"": 200,\r\n            ""body"": ""GET request received"",\r\n        }\r\n    else:\r\n        return {""statusCode"": 405, ""body"": ""Method not allowed""}\r\n```\r\n\r\nWith `PYTHONUNBUFFERED` not set explicitly anywhere, and the only environment variable added is `write_debug: true`, the logs of the pod show the following:\r\n\r\n```text\r\n2022/10/29 21:31:55 Metrics listening on port: 8081\r\n2022/10/29 21:31:56 stderr: error at global scope\r\n2022/10/29 21:32:51 stderr: DEBUG:function.handler:debug at handle scope\r\n2022/10/29 21:32:51 stderr: INFO:function.handler:info at handle scope\r\n2022/10/29 21:32:51 stderr: ERROR:function.handler:error at handle scope\r\n2022/10/29 21:32:51 stdout: sys.stdout.write at global scopePrint at global scope\r\n2022/10/29 21:32:51 GET / - 200 OK - ContentLength: 20B (0.0027s)\r\n```\r\n\r\nWith `PYTHONUNBUFFERED=1`:\r\n```text\r\n2022/10/29 21:47:57 Metrics listening on port: 8081\r\n2022/10/29 21:48:00 stderr: error at global scope\r\n2022/10/29 21:48:00 stdout: sys.stdout.write at global scopePrint at global scope\r\n2022/10/29 21:48:30 stderr: DEBUG:function.handler:debug at handle scope\r\n2022/10/29 21:48:30 stderr: INFO:function.handler:info at handle scope\r\n2022/10/29 21:48:30 stderr: ERROR:function.handler:error at handle scope\r\n2022/10/29 21:48:30 stdout: sys.stdout.write at handle scopePrint at handle scope\r\n2022/10/29 21:48:30 GET / - 200 OK - ContentLength: 20B (0.0030s)\r\n```\r\n\r\n\r\n\r\n\r\n']}"
1664,how do i uninstall openfaas from docker swarm?,https://github.com/openfaas/faas/issues/1664,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x ] Searched [past issues](/issues)\r\n\r\nI used openfaas few years ago and forgot how I installed it.\r\nNow I can see these containers in my server, `docker rm` can remove them but they are restarted automatically.\r\n```\r\n~$ docker ps |grep faas\r\n3207b2ca694d   stefanprodan/faas-grafana:4.6.3                        ""/etc/grafana/docker…""   32 minutes ago   Up 32 minutes   3000/tcp                                                                                                                                                                                                                         grafana.1.mngoxv2g4h8zmxhvcjavuhcn5\r\nfab0ce8b7896   openfaas/faas-swarm:0.6.1                              ""./faas-swarm""           4 days ago       Up 4 days       8080/tcp                                                                                                                                                                                                                         func_faas-swarm.1.poecerk1xnrinfguixrt2u1aa\r\na4194655f04a   openfaas/gateway:0.11.1                                ""./gateway""              4 days ago       Up 4 days       8080/tcp                                                                                                                                                                                                                         func_gateway.1.kqy0vwfzrnnm5qwndqql2ehq8\r\nfa52f5e4337a   openfaas/queue-worker:0.7.1                            ""./app""                  4 days ago       Up 4 days       8080/tcp                                                                                                                                                                                                                         func_queue-worker.1.1xdiul6bbcz6im7wl9ee2n9g2\r\n```\r\nI\'ve uninstalled minikube/microk8s and seems no kubernetes are installed in the server.\r\nSo this method https://docs.openfaas.com/deployment/troubleshooting/#i-want-to-remove-openfaas-from-a-cluster doesn\'t seem apply to me.\r\n\r\nCould you give any suggestions how I should uninstall openfaas?\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [x ] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n```\r\nCLI:\r\n commit:  bcff3a6bc8d066ba26233a0b5b0e2338476988e1\r\n version: 0.8.5\r\n\r\nGateway\r\n uri:     http://127.0.0.1:8080\r\n version: 0.11.1\r\n sha:     c394b09ae65177b3c6948b2c22b890068a8e6283\r\n commit:  Bump to nats-queue-worker 0.7.0\r\n\r\n\r\nProvider\r\n name:          faas-swarm\r\n orchestration: swarm\r\n version:       0.6.1\r\n sha:           3cac0ccc2e8bb7f567739a33f7d414cdb58440aa\r\n```\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n```\r\nClient: Docker Engine - Community\r\n Version:           20.10.7\r\n API version:       1.41\r\n Go version:        go1.13.15\r\n Git commit:        f0df350\r\n Built:             Wed Jun  2 11:56:40 2021\r\n OS/Arch:           linux/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Engine - Community\r\n Engine:\r\n  Version:          20.10.7\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.13.15\r\n  Git commit:       b0f5bc3\r\n  Built:            Wed Jun  2 11:54:48 2021\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.8\r\n  GitCommit:        7eba5930496d9bbe375fdf71603e610ad737d2b2\r\n runc:\r\n  Version:          1.0.0\r\n  GitCommit:        v1.0.0-0-g84113ee\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\nno idea\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux/ubuntu\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Docker Swarm is no longer supported by the community. You can probably use `docker service ls/rm` here.', '/set title: How do I uninstall OpenFaaS from Docker Swarm?', '@alexellis thank you very much! Your single sentence saves my many hours.']}"
1666,after deploying openfaas image to opensift getting error: cannot find module 'aws-sdk',https://github.com/openfaas/faas/issues/1666,"{'description': 'Hi,\r\ni have made image of lambda function by using openfaas and deploy on openshift getting below error\r\n\r\nexit status 1\r\ninternal/modules/cjs/loader.js:818\r\n  throw err;\r\n  ^\r\n\r\nError: Cannot find module \'aws-sdk\'\r\nRequire stack:\r\n- /home/app/function/node_modules/aws-param-store/lib/ssm.js\r\n- /home/app/function/node_modules/aws-param-store/lib/param_query.js\r\n- /home/app/function/node_modules/aws-param-store/lib/index.js\r\n- /home/app/function/system_parameter_readers.js\r\n- /home/app/function/constants.js\r\n- /home/app/function/handler.js\r\n- /home/app/index.js\r\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:815:15)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:667:27)\r\n    at Module.require (internal/modules/cjs/loader.js:887:19)\r\n    at require (internal/modules/cjs/helpers.js:74:18)\r\n    at Object.<anonymous> (/home/app/function/node_modules/aws-param-store/lib/ssm.js:3:13)\r\n    at Module._compile (internal/modules/cjs/loader.js:999:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\r\n    at Module.load (internal/modules/cjs/loader.js:863:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:708:14)\r\n    at Module.require (internal/modules/cjs/loader.js:887:19) {\r\n  code: \'MODULE_NOT_FOUND\',\r\n  requireStack: [\r\n    \'/home/app/function/node_modules/aws-param-store/lib/ssm.js\',\r\n    \'/home/app/function/node_modules/aws-param-store/lib/param_query.js\',\r\n    \'/home/app/function/node_modules/aws-param-store/lib/index.js\',\r\n    \'/home/app/function/system_parameter_readers.js\',\r\n    \'/home/app/function/constants.js\',\r\n    \'/home/app/function/handler.js\',\r\n    \'/home/app/index.js\'\r\n  ]\r\n}\r\n\r\nDockerfile is given below\r\n\r\n\r\nFROM --platform=${TARGETPLATFORM:-linux/amd64} ghcr.io/openfaas/classic-watchdog:0.1.5 as watchdog\r\nFROM --platform=${TARGETPLATFORM:-linux/amd64} node:12-alpine as ship\r\n\r\nARG TARGETPLATFORM\r\nARG BUILDPLATFORM\r\n\r\nCOPY --from=watchdog /fwatchdog /usr/bin/fwatchdog\r\nRUN chmod +x /usr/bin/fwatchdog\r\n\r\nRUN addgroup -S app && adduser app -S -G app\r\n\r\nWORKDIR /root/\r\n\r\n# Turn down the verbosity to default level.\r\nENV NPM_CONFIG_LOGLEVEL warn\r\n\r\nRUN mkdir -p /home/app\r\n\r\n# Wrapper/boot-strapper\r\nWORKDIR /home/app\r\nCOPY package.json ./\r\n#RUN npm install\r\n#RUN npm install aws-sdk\r\n# This ordering means the npm installation is cached for the outer function handler.\r\nRUN npm i --production\r\n\r\n# Copy outer function handler\r\nCOPY index.js ./\r\n\r\n# COPY function node packages and install, adding this as a separate\r\n# entry allows caching of npm install runtime dependencies\r\nWORKDIR /home/app/function\r\nCOPY function/*.json ./\r\n\r\n\r\nRUN npm install aws-sdk\r\nRUN npm install\r\n\r\nRUN npm i --production || :\r\n\r\n# Copy in additional function files and folders\r\nCOPY --chown=app:app function/ .\r\nWORKDIR /home/app/\r\n\r\nRUN chmod -R 777 ./function/node_modules\r\n\r\n# chmod for tmp is for a buildkit issue (@alexellis)\r\nRUN chmod +rx -R ./function \\\r\n    && chown app:app -R /home/app \\\r\n    && chmod 777 /tmp\r\n\r\nUSER app\r\n\r\nENV cgi_headers=""true""\r\nENV fprocess=""node index.js""\r\nEXPOSE 8080\r\n\r\n\r\nHEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1\r\n\r\nCMD [""fwatchdog""] \r\n\r\npackage.json is given below\r\n\r\n{\r\n  ""name"": ""function"",\r\n  ""version"": ""1.0.0"",\r\n  ""description"": """",\r\n  ""main"": ""handler.js"",\r\n  ""scripts"": {\r\n\t""start"": ""node ./bin/www"",\r\n    ""test"": ""echo \\""Error: no test specified\\"" && exit 1""\r\n  },\r\n  ""keywords"": [],\r\n  ""author"": """",\r\n  ""license"": ""ISC""\r\n  ""dependencies"": {\r\n\t""aws-sdk"": ""2.990.0"",\r\n    ""jsonwebtoken"": ""^8.5.0"",\r\n    ""aws-param-store"": ""^2.1.0"",\r\n    ""hashmap"": ""^2.3.0""\r\n  }\r\n}\r\ncalling file is like given code\r\nconst awsParamStore = require(\'aws-param-store\');\r\nvar HashMap = require(\'hashmap\');\r\n\r\n\r\n\r\n\t        let parameters = awsParamStore.getParametersByPathSync(resourcePath, { WithDecryption: true, region: resourceRegion });\r\n       let results = awsParamStore.getParameterSync(resourcePath, { WithDecryption: true, region: resourceRegion });\r\nlet parameters = awsParamStore.getParametersSync(resourcePath, { WithDecryption: true, region: resourceRegion });\r\n\r\n\r\n\r\nmay i know resolution .\r\n---------------------------------------------------------------------------------------------------\r\n#<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [x] Yes\r\n- [ ] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Steps to Reproduce (for bugs)\r\n1) deploy image mourya1978/mourya:iatm-core-of-lambda on openshift\r\n2) open router url and get issue.\r\n3) username and password of Dockerhub willbe provided over mail mr.mourya1978@gmail.com after request in below comment\r\n4) please check all library present inside function', 'Hi there,\r\n\r\nThanks for your interest in OpenFaaS.\r\n\r\nWhilst we cannot support individuals directly with their use of openfaas, I would suggest you [buy my eBook on OpenFaaS](https://openfaas.gumroad.com/l/serverless-for-everyone-else) which has examples with Node.js including how to add npm modules.\r\n\r\nOnce you have a copy, let me know how you get on. I can also send you a working example with the AWS SDK.\r\n\r\nFor future reference, please fill out the issue template properly and use code formatting for any examples you wish to paste in.\r\n\r\nAlex']}"
1676,alert rule type which prevents scale down,https://github.com/openfaas/faas/issues/1676,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nAs far as I\'m aware, there\'s only 1 type of alert rule in OpenFaaS right now as it pertains to autoscaling, and that rule appears to be effectively the question ""needs to scale up?"".\r\n\r\nI propose that a new rule type is created which satisfies the question ""should prevent scale down?"".\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\n\r\n#### Truth Table\r\n\r\n| Scale Up | Prevent Scale Down | Scaling Action |\r\n|:--------:|:------------------:|:--------------:|\r\n|          |                    |   scale down   |\r\n|          |          x         |      none      |\r\n|     x    |                    |    scale up    |\r\n|     x    |          x         |    scale up    |\r\n\r\nWhen a workload does not need to scale up, but should not scale down, prometheus should be able to note those two binary decisions, and the gateway should take those cases into account.\r\n\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n#### Truth Table\r\n\r\n| Scale Up | Scaling Action |\r\n|:--------:|:--------------:|\r\n|          |   scale down   |\r\n|     x    |    scale up    |\r\n\r\nRight now, when a function needs to scale up, a prometheus alert is used to detect whether or not the pod needs to scale up. This is generally an alert that a would prefer to be tuned on the immediate end, meaning ""should I scale up ___right now___?"". The reason for this is that an administrator of an OpenFaaS deployment would probably want functions to expand their capacity to their immediate needs as quickly as possible, as to not slow down invocations, or worse, timeout.\r\n\r\nHowever, if you tune this rule to be too immediate, what ends up happening is that this alert stops firing, and OpenFaaS interprets this as ""we no longer need the current pods"". It\'s a boolean between scale up/scale down, but nothing that says ""do not scale down"".\r\n\r\nWhat ends up happening on a pod level is that pods thrash, they keep being created quickly and destroyed quickly, even though they were just being used moments ago, and then they spin up again shortly after, because the actual workload isn\'t gone.\r\n\r\nTake for example scaling on `429`s on asynchronous invocations. The logic is basically that you have a set minimum and maximum amount of pods, each pod having a concurrency limit. From there, you retry based on `429`s that the pods send when busy, informing OpenFaaS that it needs more pods.\r\n\r\nHowever, once you hit the maximum number of pods, it is no longer possible for the queue worker to see `429`s (assuming that the queue is configured for a `max_inflight` of what the pods can actually handle). This causes `429`s to stop happening, which causes the alert rule in prometheus to stop firing, and then causes the function to be scaled down once the alert stops firing.\r\n\r\nOnce the amount of pods drops, the alert starts firing again, because it no longer has pods to handle requests. This means that the more reactive you are to scale up events, the faster you scale down, too, causing lots of thrashing.\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [ ] No\r\n- [x] No, but I sponsor Alex\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n\r\n- create a new alert rule type with associated scaling behavior\r\n- have the gateway wait a set period of time to scale down after scale up events, every scale up event resets the timer\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\nThe alert rule type would probably be more flexible, for the following reasons:\r\n- it wouldn\'t require additional config to be exposed on the gateway\r\n- you could change the alert rule yourself via prom config\r\n- the ""prevent scale down"" alert type could act as a ""wall"" rather than a ""timer""\r\n- you could set up more than one alert that prevents scaling down, as your logic necessitates\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\nFunctions need to autoscale, and ideally reach a stable pod count based on the current workload.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n0.13.13\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n20.10.8\r\n\r\n* What version and distriubtion of Kubernetes are you using? `kubectl version`\r\nserver v1.21.3\r\nclient v1.22.2\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOS\r\n\r\n* Link to your project or a code example to reproduce issue:\r\n\r\n* What network driver are you using and what CIDR? i.e. Weave net / Flannel\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': [""Thanks for taking the time to write up a suggested solution.\r\n\r\nI think I would like to understand the problem that you're seeing a little more clearly, and to have an example that we can use to reproduce it. The example that we ran through for Termination Grace Period was a good example of that.\r\n\r\nWould you look to use the [go-long function](https://github.com/alexellis/go-long) again, or does it need to do something else?"", ""I can probably test this with the standard `go-long` function; I've tested it before, but my test case requires custom prometheus alert rules and the pro queue worker, for the sake of ease of replication.\r\n\r\nI'll see if I can list the steps; not sure if you guys used the repro repo last time."", ""@alexellis just for the record, this would be a lot easier to give replication steps if https://github.com/openfaas/faas-netes/issues/852 was resolved, because if that's not resolved these replication steps will require imperative changes.\r\n\r\nIf that's not a big deal right now, I can give you the steps anyway, but that issue would probably be a dependency on this issue from a usage standpoint (as in, I'm going to need that before I really care about this). For the sake of being explicit; I'm going to need the ability to create consistent (declarative) alert rules before I really care about adding additional alert types.\r\n\r\nThis is important from a consistency standpoint because every single time I deploy openfaas using helm I have to go back into the config map for prometheus alert rules and edit them, or else basically all functions break (never scale up)."", ""I don't think we need this any more, can you confirm @kevin-lindsay-1 ?"", ""For my/our use cases? Yes. We use the autoscaler now, and don't use the alert manager, and scaling up and down is fairly stable right now, and further tuning features can be addressed in the context of the autoscaler.""]}"
1677,stopping many openfaas jobs,https://github.com/openfaas/faas/issues/1677,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\nMy use case is stopping a batch after it has started. https://github.com/openfaas/faas/issues/657 seems related because of ""batches"" and ""workflow"", but not ""long running"".\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nSo far the idea for stopping a batch is to do the following:\r\n1. Stop submitting new jobs.\r\n2. Scale queue-workers to 0.\r\n3. Drain nats queue\r\n\r\nBut I didn\'t find supporting documentation for this, and thought I\'d file an issue before further testing.\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nThis workflow seems common enough, but maybe it isn\'t for some good reason. It would be nice to document the reaon. Also, If nats really is buffering when the queue-workers are 0 there ought to be a way of also dropping all queued items instead of needing another service to drain nats.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nScaling queue-workers to 0 does seem to stop the batch of jobs, but it is unclear that step 3 is needed.  If scaling back up does not continue the batch of jobs, then why not?\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nUsing openfaas and filing bugs with related software. Happy to contribute PR if this isn\'t already solved some other way.\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [ x ] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\nMaybe there is a way for all jobs to gracefully timeout. Maybe instead of scaling queue-workers to 0 the openfaas-fn worker could scale to 0.\r\n\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\nMaybe nats could have a timeout for holding on to things or a command to drop all things or maybe a way to observe timeouts have happened?\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Submit N jobs\r\n2. Scale queue workers to 0 before N jobs have finished\r\n3. Scale queue workers back up from 0 after waiting some time.\r\n4. Try to discover what happened.\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nI\'m trying to stop a batch of jobs.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n 0.13.13\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n20.10.5\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\nOpenFaas on Kubernetes\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux ubuntu 20.04 and 18.04\r\n\r\n\r\n## Next steps\r\n\r\nYou may [join Slack](https://docs.openfaas.com/community) for community support.\r\n\r\n', 'comments': ['Why are you trying to stop a batch of jobs?\r\n\r\nIf you want to cancel synchronous invocations, that\'s easy, just cancel. But async is specifically designed as ""fire-and-forget""; why would you create the batch and then cancel it later if your intent is to ""fire-and-forget""?\r\n\r\nI have an idea or two in mind to change your application in such a way that you can do this, but it would use OpenFaaS rather than change OpenFaaS, so purely application logic.\r\n\r\nI recommend an application-level logical check, because NATS supports the [concept of a NACK](https://docs.nats.io/nats-concepts/acks), but it would probably be very difficult to get the specific instance of a queue worker to NACK on a specific request, because at that point the queue worker would have to basically subscribe to a ""cancel"" signal somehow, which would be non-trivial and also probably use a lot more resources than would normally be useful.\r\n\r\nMight be easier to have your application understand that it\'s in a ""batch"" and check if that batch is cancelled before doing work, but again, I\'m not sure why you\'d want to cancel it, unless there\'s a performance reason for it, in which case I\'d probably identify the bottleneck and create an issue for that instead.', ""@hagna we are looking for the Why? Here.\r\n\r\nWhat's making you do this? What usecase do you have, what problem does stopping every asynchronous function solve in your business?""]}"
1680,how do i connect to my raspberry pi?,https://github.com/openfaas/faas/issues/1680,"{'description': 'I got a (stupid) question, but I just dont know how to solve it.\r\nI deployed openfaas on my k3s raspberry pi cluster and I am stuck at accessing the WebUI.\r\nMy current step is;\r\n`arkade info openfaas\r\n#Forward the gateway to your machine`\r\n\r\nWhat exactly do I need to type as gateway? I am just learning this stuff.\r\n`kubectl rolloput status -n openfaas deploy/gateway`\r\n\r\nThanks in advance\r\n\r\n', 'comments': ['Feel free to ask for technical support on Slack.\r\n\r\nAlex', '/set title: How do I connect to my Raspberry Pi?', '/msg: slack', '--\nJoin Slack to connect with the community\nhttps://docs.openfaas.com/community\n']}"
1682,impact of cve-2021-44228,https://github.com/openfaas/faas/issues/1682,"{'description': 'There was a new [critical vulnerability](https://www.lunasec.io/docs/blog/log4j-zero-day/) reported in the open source community related to Apache Log4j2. This library is widely used in Java projects/applications and a public exploit has been released which escalates the criticality of the issue.\r\n\r\nIf this project impacted in any way? As far as I know, Go is the main programming language of this project. So I guess, this project (including other repositories of this organization) and its dependencies should not be impacted.\r\n\r\nIs any of the used infrastructure impacted (e.g. CI/CD)?', 'comments': [""Hi Michael,\r\n\r\nWe are aware of the vulnerability discovered in the log4j project. Java users should audit their functions and any custom templates that they are using, but no specific response is required for the core project, as far as I'm aware. \r\n\r\nIf you would like to speak to us about your specific implementation of OpenFaaS, you can arrange to [speak to us here](https://openfaas.com/support).\r\n\r\nI'll close this issue now as I'm not aware of any further action to be taken.\r\n\r\nFor future reference, security is a delicate area and best practice is to use responsible disclosure. Please can you follow this process in future [as outlined](https://github.com/openfaas/faas/blob/master/CONTRIBUTING.md#ive-found-a-security-issue)?\r\n\r\nRegards,\r\n\r\nAlex""]}"
1690,found: typo,https://github.com/openfaas/faas/issues/1690,"{'description': '# I found a typo mistake\r\nLink: https://blog.alexellis.io/openfaas-storage-for-your-functions/\r\n\r\n## Get storage for your ~Severless~ Serverless Functions with Minio & Docker\r\n```diff \r\n-severless\r\n+serverless\r\n```\r\n![Screenshot (81)](https://user-images.githubusercontent.com/73424060/149515896-8e6ed757-de5b-4598-813d-81bfcb61b6c1.png)\r\n', 'comments': [""Thanks for letting me know.\r\n\r\nI'm not sure the best way you can report things about my personal blog, but an email might be a good way going forward?\r\n\r\nAlex""]}"
1693,one node per function invocation,https://github.com/openfaas/faas/issues/1693,"{'description': ""## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nWhat I'd like to achieve is that whenever my function gets invoked, a new node in my Kubernetes cluster is created to handle the process - my function is highly CPU / Memory intensive so it definitely requires its own node to run on every time it gets invoked.\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nI was able to define resource _requests_ and _limits_ in my function definition and also configure _Cluster Autoscaling_ in DigitalOcean and now have multiple nodes running and I would expect my function to get deployed to a new node every time it's invoked. Instead, what I'm seeing is that the original replicaset gets recreated on the first node.\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\nNot sure about workarounds, it's why I'm asking for support / guidance.\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\nNot sure.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Enable CA on DigitalOcean, disable Autoscaling in OpenFaaS\r\n2. Configure resource requests and limits in your function in a way that a single node is unable to handle multiple invocations\r\n3. Invoke your function multiple times\r\n4. Your function will run on a single node instead of multiple nodes\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nFunctions that utilise high amount of CPU / Memory (such as an image processing pipeline in my case) would benefit from the expected behaviour described above.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): 0.13.15\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 20.10.8\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)? OpenFaaS on Kubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Linux\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:  N/A\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting) -  N/A\r\n* \r\n\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\nI'm fairly new to OpenFaaS and Kubernetes and would like to ask for a bit of a guidance here. I've successfully deployed my nodeJS function to OpenFaas that's running in a Kubernetes cluster on DigitalOcean. The actual process that's being executed is an image processing pipeline that's highly CPU / memory intensive so what I'd like to achieve is that whenever my function is invoked in OpenFaas, a new Kubernetes node spins up and executes the function. I did some research in autoscaling and I think I understand the concepts but it would be really great if someone could explain how to achieve the desired result in OpenFaaS context.\r\n\r\nAny help would be greatly appreciated.\r\n\r\nThanks\r\n"", 'comments': [""@rvarkonyi please can you fill out the whole issue template?\r\n\r\nhttps://github.com/openfaas/faas/blob/master/.github/ISSUE_TEMPLATE.md\r\n\r\nThanks, then we'll take a look at this."", ""Thanks for your reply @alexellis . Just trying to figure out what exact information you'd need in order to answer my theoretical question? I'm happy to provide more info if needed but I thought I formed my question well enough. What I'm really looking for is some guidance when it comes to autoscaling OpenFaas in a way that Kubernetes launches a new node on every function invocation.\r\n\r\nAppreciate your help."", 'Hi, just click ""edit"", copy and paste in the issue template and fill it out.\r\n\r\nThat\'d be really appreciated.\r\n\r\nYou should be able to see plenty of other examples such as: #1676 ', ""## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nWhat I'd like to achieve is that whenever my function gets invoked, a new node in my Kubernetes cluster is created to handle the process - my function is highly CPU / Memory intensive so it definitely requires its own node to run on every time it gets invoked.\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nI was able to define resource _requests_ and _limits_ in my function definition and also configure _Cluster Autoscaling_ in DigitalOcean and now have multiple nodes running and I would expect my function to get deployed to a new node every time it's invoked. Instead, what I'm seeing is that the original replicaset gets recreated on the first node.\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\nNot sure about workarounds, it's why I'm asking for support / guidance.\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\nNot sure.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Enable CA on DigitalOcean, disable Autoscaling in OpenFaaS\r\n2. Configure resource requests and limits in your function in a way that a single node is unable to handle multiple invocations\r\n3. Invoke your function multiple times\r\n4. Your function will run on a single node instead of multiple nodes\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nFunctions that utilise high amount of CPU / Memory (such as an image processing pipeline in my case) would benefit from the expected behaviour described above.\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): 0.13.15\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 20.10.8\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)? OpenFaaS on Kubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Linux\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:  N/A\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting) -  N/A"", ""@rvarkonyi this can be addressed through [OpenFaaS Pro's scaler](https://docs.openfaas.com/openfaas-pro/introduction/) which can use either CPU or in-flight requests for auto-scaling.\r\n\r\nThanks,\r\n\r\nAlex""]}"
1695,using nvidia gpu.,https://github.com/openfaas/faas/issues/1695,"{'description': 'Hello, Thank you for the nice work.\r\nI am trying to use OpenFaaS with GPU. But it is not easy. \r\nSo, I will be very appreciate if you give me some advices.\r\n\r\n\r\n**Environments**\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):  0.14.1\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 20.10.12\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)? Minikube 1.25.1\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Ubuntu 20.04\r\n* plus,\r\nI install nvidia-docker from fallowing [this link](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html)\r\nand,\r\nI make minikube recognize gpu in cluster from fallowing [this link](https://minikube.sigs.k8s.io/docs/tutorials/nvidia_gpu/). So, cluster recognize it well.\r\n```\r\n$ kubectl get nodes ""-o=custom-columns=NAME:.metadata.name,GPU:.status.allocatable.nvidia\\.com/gpu""\r\nNAME                       GPU\r\n[SYSTEM_NAME]         1\r\n```\r\nand, also working well in nvidia/cuda container.\r\n\r\n\r\n**But, It didn\'t work in OpenFaaS funtion. How can I OpenFaaS Function recognize GPU. Do I need to edit docker file?**\r\nPlease, help.\r\n', 'comments': ['Hi @HyeyeonKoo thanks for your interest in OpenFaaS\r\n\r\nYou will need to fill out the whole issue template and ideally provide us with a code example too.\r\n\r\nhttps://raw.githubusercontent.com/openfaas/faas/master/.github/ISSUE_TEMPLATE.md\r\n\r\nLet me know if you are going to do that or whether you want to close the issue.\r\n\r\nIf this is for your employer, feel free to reach out about [commercial support](https://openfaas.com/support/).\r\n\r\nAlex', 'Thank you for the answer. I try to fill the form again.\r\n\r\n<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [X] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [X] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [X] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\nI found an issue that similar to the one I was looking for : https://github.com/openfaas/faas/issues/639\r\nIn this issue, I found that using GPU with openfaas using nvidia-docker.\r\nSo, I install nvidia-docker, and GPU is successfully recognized in minikube\'s contatiner.\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n<!--- If you\'re suggesting a change/improvement, tell us how it should work -->\r\nI want to use GPU in OpenFaaS Funtion with pytorch.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nGPU is not available using pytorch in OpenFaaS function.\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [X] No\r\nI don\'t have enough skills to support yet. I try to learn now and someday I want to be one of sponsors.\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\nIs there a chance to make the GPU available with changing function\'s DockerFile or YAML?\r\n\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. make function\r\n```\r\n$ mkdir gpu-is-available && cd gpu-is-available\r\n$ faas-cli new --lang python3-debian gpu-is-available \r\n```\r\n2. gpu-is-available/requirements.txt\r\n```\r\n--find-links https://download.pytorch.org/whl/torch_stable.html\r\ntorch==1.10.1+cu113\r\nnumpy\r\n```\r\n3. gpu-is-available/handle.py\r\n```\r\nimport torch\r\n\r\ndef handle(req):\r\n    available = """"\r\n\r\n    if torch.cuda.is_available():\r\n        available = ""GPU is available."" + ""\\n"" \\\r\n                    + ""Device count is "" + str(torch.cuda.device_count()) + ""\\n"" \\\r\n                    + ""Device name is "" + torch.cuda.get_device_name(0)\r\n    else:\r\n        available = ""GPU is not available. Sorry.""\r\n\r\n    return available\r\n```\r\n4. build, push, deploy\r\n```\r\nfaas-cli up -f ./gpu-is-available.yml\r\n```\r\n5. invoke => *GPU is not recognized*\r\n```\r\n$ echo | faas-cli invoke gpu-is-available\r\n```\r\n```\r\nGPU is not available. Sorry.\r\n```\r\n\r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\nI try to service deep learning model inference like sentiment analysis.\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): 0.14.1\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): 20.10.12\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)? Minikube 1.25.1\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): Ubuntu 20.04\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem: I demonstrate it above.\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\nI install nvidia-docker from fallowing [this link](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html)\r\nand,\r\nI make minikube recognize gpu in cluster from fallowing [this link](https://minikube.sigs.k8s.io/docs/tutorials/nvidia_gpu/). So, cluster recognize it well.\r\n', '@HyeyeonKoo at least one approach to this is partially described here https://docs.openfaas.com/reference/profiles/#use-tolerations-and-affinity-to-separate-workloads\r\n\r\nUsing the profiles feature you can ensure that the function is running on a node with a GPU.\r\n\r\nIt might be possible with [constraints](https://docs.openfaas.com/reference/yaml/#function-constraints) but I think the profiles approach is more accurate ', 'Thank you for answering. \r\nI tried to follow the instruction, but got some problem.\r\n\r\n\r\nfirst, when I create a profile with YAML, error occurred.\r\n```\r\nerror: error validating ""STDIN"": error validating data: [ValidationError(Profile.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[1]): unknown field ""key"" in com.openfaas.v1.Profile.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms, ValidationError(Profile.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[1]): unknown field ""operator"" in com.openfaas.v1.Profile.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms, ValidationError(Profile.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[1]): unknown field ""values"" in com.openfaas.v1.Profile.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms]; if you choose to ignore these errors, turn validation off with --validate=false\r\n``` \r\n\r\nSo, I apply it with ```--validate=false``` flag. After that, I found the pod\'s status is pending.\r\n```\r\nNAME                                   READY   STATUS    RESTARTS   AGE\r\n...\r\ngpu-is-available-66b976994c-qdxsv      0/1     Pending   0          24s\r\n...\r\n```\r\n\r\nCan you give me some more advice with this problem, please?', 'It looks like a validation error, without seeing that profile yaml you used it is pretty hard to say for sure.\r\n\r\nMy guess from rereading the docs, is that it is a yaml indentation error\r\n\r\nThe docs have this (which is wrong) \r\n```yaml\r\nkind: Profile\r\napiVersion: openfaas.com/v1\r\nmetadata:\r\n  name: withgpu\r\n  namespace: openfaas\r\nspec:\r\n    tolerations:\r\n    - key: ""gpu""\r\n      operator: ""Exists""\r\n      effect: ""NoSchedule""\r\n    affinity:\r\n      nodeAffinity:\r\n        requiredDuringSchedulingIgnoredDuringExecution:\r\n            nodeSelectorTerms:\r\n            - matchExpressions:\r\n            - key: gpu\r\n              operator: In\r\n              values:\r\n              - installed\r\n```\r\n\r\nBut it should probably be this \r\n```yaml\r\nkind: Profile\r\napiVersion: openfaas.com/v1\r\nmetadata:\r\n  name: withgpu\r\n  namespace: openfaas\r\nspec:\r\n    tolerations:\r\n    - key: ""gpu""\r\n      operator: ""Exists""\r\n      effect: ""NoSchedule""\r\n    affinity:\r\n      nodeAffinity:\r\n        requiredDuringSchedulingIgnoredDuringExecution:\r\n            nodeSelectorTerms:\r\n            - matchExpressions:\r\n              - key: gpu\r\n                operator: In\r\n                values:\r\n                  - installed\r\n```\r\n\r\nIt would really help to know the output from `kubectl version` and how you installed openfaas (via helm or arkade, what flags or values you use etc) and finally that Profile you tried to you.', 'Thank you for an advice.\r\n\r\nFirst of all, here is the `kubectl version`\r\n```\r\nClient Version: version.Info{Major:""1"", Minor:""23"", GitVersion:""v1.23.2"", GitCommit:""9d142434e3af351a628bffee3939e64c681afa4d"", GitTreeState:""clean"", BuildDate:""2022-01-19T17:35:46Z"", GoVersion:""go1.17.5"", Compiler:""gc"", Platform:""linux/amd64""}\r\nServer Version: version.Info{Major:""1"", Minor:""23"", GitVersion:""v1.23.1"", GitCommit:""86ec240af8cbd1b60bcc4c03c20da9b98005b92e"", GitTreeState:""clean"", BuildDate:""2021-12-16T11:34:54Z"", GoVersion:""go1.17.5"", Compiler:""gc"", Platform:""linux/amd64""}\r\n```\r\n\r\nAnd, I install OpenFaaS with [this guide](https://faun.pub/getting-started-with-openfaas-on-minikube-634502c7acdf) which is using helm.\r\n\r\n\r\nI checked this again.\r\nWhen I simply run docker container `docker run -it --rm --gpus all ubuntu nvidia-smi`, then GPU is recognized.\r\n```\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 510.39.01    Driver Version: 510.39.01    CUDA Version: 11.6     |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|                               |                      |               MIG M. |\r\n|===============================+======================+======================|\r\n|   0  NVIDIA GeForce ...  On   | 00000000:01:00.0 Off |                  N/A |\r\n| 31%   33C    P8    14W / 250W |     15MiB / 11264MiB |      0%      Default |\r\n|                               |                      |                  N/A |\r\n+-------------------------------+----------------------+----------------------+\r\n\r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                                  |\r\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\r\n|        ID   ID                                                   Usage      |\r\n|=============================================================================|\r\n|    0   N/A  N/A      1404      G                                       9MiB |\r\n|    0   N/A  N/A      1545      G                                       4MiB |\r\n+-----------------------------------------------------------------------------+\r\n```\r\nOn Minikube, also it works well `kubectl get nodes ""-o=custom-columns=NAME:.metadata.name,GPU:.status.allocatable.nvidia\\.com/gpu""` following [this guide](https://minikube.sigs.k8s.io/docs/tutorials/nvidia_gpu/)\r\n```\r\nNAME                       GPU\r\n####                        1\r\n```\r\n\r\nI create profile with your advice, so the validation problem is gone. So I try to build, push, deploy function again. `faas-cli up -f ./gpu-is-available.yml --gateway http://127.0.0.1:31112 --annotation com.openfaas.profile=withgpu` \r\nIt deployed well. So, I checked that GPU is available in the function\'s container using `docker exec -it [container id] /bin/bash` and `nvidia-smi`, but it is not available. \r\n\r\nI keep try to find a way. If you think any idea, please tell me.', ""If I am reading this correctly, then it seems like we need to set a Resource request on the function\n\nhttps://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/\n\nBut this isn't exposed via the OpenFaaS API right now. We might need to sync with @alexellis on this, but he is on vacation until next week.\n\nI see two options\n\n1. Add the two required resource fields to the Function spec\n2. Extend the Profiles spec to add a section for Resources"", 'Thank you, very much.']}"
1703,what execution guarantees does openfaas give in case of a failure?,https://github.com/openfaas/faas/issues/1703,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Question\r\nI am currently trying to find out what guarantees are given by OpenFaas when a random failure happens in the system.\r\nFor example lets say the function container is gone because the underlying node crashed.\r\nOr the faas-provider failed to reach the watchdog.\r\n\r\nCan we maybe summarize this in one of the following terms:\r\n* **At-Least One Execution**\r\n  * invocations are retried and function programmer needs to make idempotent functions to compensate that\r\n* **At-Most One Execution (like in OpenWhisk)**\r\n  * result or failure comes back, no implicit parallel executions and no reexecutions, no idempotence needed\r\n  * client programmer needs to handle failures\r\n* **Exactly One Execution**\r\n  * Each request has an ID and is guaranteed to be executed exactly once\r\n\r\nI found the retry mechanism, but it seems to only react on successful http responses which have error response codes.\r\nThats not what I meant.\r\n\r\nIs there maybe a circuit-breaker-pattern implemented? I mean a timeout if the function doesn't come back in a specific period of time?\r\nThat would be an indication that OpenFaas is doing At-Most-Once.\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\nNo\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [x] Yes\r\n\r\n## Which Solution Do You Recommend?\r\nFriendly answer of my polite question.\r\n\r\n\r\n"", 'comments': [""Intent is exactly once.\r\n\r\nIn reality you'd find 1 execution or less. If there's a failure somewhere you should expect an error.\r\nIf there's an error and it's not coming from your function, I would raise an issue."", ""To add to what Kevin said, OpenFaaS Pro supports retrying messages where your function fails to process the payload for a given set of HTTP codes: https://docs.openfaas.com/openfaas-pro/retries/\r\n\r\nFeel free to join us on the weekly community call if you want some kind of free, community support.\r\n\r\nOtherwise, we have the docs and the code open on GitHub\r\n\r\nhttps://github.com/openfaas\r\n\r\nhttps://docs.openfaas.com\r\n\r\nYou can also spend some time studying the asynchronous invocation mechanism with [Serverless For Everyone Else](https://openfaas.gumroad.com/l/serverless-for-everyone-else) to understand how call IDs and async works. You'll also find some less detailed info in the docs.\r\n\r\nAnd finally, don't hesitate to contact us about paid support via https://openfaas.com/support/\r\n\r\nAlex\r\n"", '/add labels: support,question']}"
1706,how do i run docker inside a function?,https://github.com/openfaas/faas/issues/1706,"{'description': ""<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [ ] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/) verified issue not mentioned in troubleshooting guide \r\n- [ ] Read/searched [the docs](https://docs.openfaas.com/) already read the docs\r\n- [ ] Searched [past issues](/issues) : yes I searched past issues and could not find similar issue.\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\nThere are currently 3 ways to run docker inside docker (https://devopscube.com/run-docker-in-docker/)\r\n- By mounting docker.sock: As faas does container management we are unable to mount the docker in the existing containers that faas-deploy created. we could not find any such option to mount a socket\r\n- By using dind which needs `privileged` mode to containers. I saw in few of the issues (https://github.com/openfaas/faas/issues/1238) its mentioned that openfaas do not plan to support privileged mode to containers\r\n- By Sysbox : I coud not find any documentation around it ini openfaas.\r\n- \r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nwe should be allowed to docker command like docker build inside the docker container \r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\ncurrently we do not have any way or much documentation around how to run docker commands inside faas manages containers\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n## Are you a GitHub Sponsor (Yes/No?) : no\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. build an image \r\n2. use faas-cli deploy to deploy the image\r\n3. login into the container / try to run docker command \r\n4. it fails \r\n5. \r\n## Context\r\n<!--- How has this issue affected you? What are you trying to accomplish? -->\r\nWe have a cli micro-service which is running using openfaas. This service try to build docker images and deploy the images for other product components \r\n<!--- Providing context helps us come up with a solution that is most useful in the real world -->\r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n"", 'comments': [""@mrunmayi \r\n\r\nThanks for your interest, however it's unclear what you're trying to do and _why_.\r\n\r\nPlease take a few steps back and explain why you want to use docker in a container."", '/add label: support,question', ""Closing since we didn't hear back from you.\r\n\r\nFeel free to send another comment here if you want to continue the discussion.""]}"
1709,how do i migrate from kubeless?,https://github.com/openfaas/faas/issues/1709,"{'description': '<!-- Due dilligence -->\r\n\r\n## My actions before raising this issue\r\n- [Y] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [Y] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [Y] Searched [past issues](/issues)\r\n\r\n\r\nThe project is presently using kubeless which is no longer supported by VMWare. So we are looking at other options to migrate our serverless functions which are over 100.\r\nOur dockerfile is built using a kubeless nodejs image and all serverless functions in the serverless.yaml file within the repo.\r\nThese functions are then deployed in a helm chart using a pipeline.\r\nI have read the open faas documentation but cannot find a way to automate the deploying function using a pipeline with helm.\r\n\r\n\r\n\r\n## Are you a GitHub Sponsor (No)\r\n\r\n\r\n\r\n## Which Solution Do You Recommend?\r\nDocument the process of building a faas + nodejs Dockerfile and deploy functions using helm chart.\r\n\r\n\r\n## Context\r\nCurrently all repos use pipelines to deploy kubeless functions using helm by reading the kubeless+nodejs image built using  Dockerfile.\r\n\r\n\r\n## Your Environment\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): containerd\r\n\r\n* Using OpenFaaS on Kubernetes \r\n\r\n* Operating System and version: Ubuntu\r\n', 'comments': ['@DineshChacko you should look into the Operator deployment option https://docs.openfaas.com/architecture/production/#choose-the-operator-or-faas-netes\r\n\r\nIt creates a `Function` Custom Resource Definition, which would allow you to create and deploy from Helm charts with `Function` objects', ""The solution by @LucasRoesler is what you'll need, here's another blog post explaining how it works: https://www.openfaas.com/blog/manage-functions-with-kubectl/\r\n\r\nAnd of course, you will need to build container images and then reference them from the Helm chart using the Function CRD.\r\n\r\nThere is no way to write source code in your helm chart, if that is what you were looking for.\r\n\r\nIf you'd like to set up a one-off 1x hour consulting call with me, I don't mind, and you can use my booking link here: https://calendly.com/alexellis\r\n\r\nAlex"", 'Closing as resolved. Feel free to come along to our community call (see the pinned issue) or take me up on that offer if you would like me to spend some time with you.\r\n\r\nI also have an eBook that outlines everything you need to know about Node.js with OpenFaaS, along with how to customise templates (this may mean you have less work to do converting the style from kubeless to our node14 template)\r\n\r\nhttps://gumroad.com/l/serverless-for-everyone-else']}"
1730,give the option to prevent functions being invoked by their public url,https://github.com/openfaas/faas/issues/1730,"{'description': ""<!-- Due dilligence -->\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!-- How is this affecting you? What task are you trying to accomplish? -->\r\n## Why do you need this?\r\nSome functions should not be able to get triggered by an HTTP request. In my case it concerns scheduled functions (cron-connector) that should only run once a day. Unless I am mistaken, every function is callable using their public url. This makes functions susceptible to being called on accident or even by bots.\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\nFunctions should have the option of being callable by public URL or not.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\nEvery function gets assigned a public URL.\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [x] No, but owner of Serverless for Everyone Else\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n1. Add yaml entry that disables a functions public URL.\r\n\r\n2. Have a way to discern between event-connectors IN the function. Say using an environment variable. This way the function can return early when it detects it's being invoked in the wrong way.\r\n\r\n3. Find a workaround and add it to the documentation.\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n1. Add yaml entry that disables a functions public URL.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\nn/a\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ): 0.14.2\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ): Docker version 20.10.10, build b485636\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)? faasd\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS): MacOS 12.3.1, m1 Macbook Pro\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)"", 'comments': [""Hi,\r\n\r\nThanks for leaving the context about what you're trying to do.\r\n\r\nUnfortunately, you deleted important parts of the issue template, so I'd ask you to add those back in now.\r\n\r\nhttps://raw.githubusercontent.com/openfaas/faas/master/.github/ISSUE_TEMPLATE.md\r\n\r\nAlex"", 'Thanks for taking the time to reply, I added them back in. Let me know if you need more clarification.\r\n\r\n', ""Hi @DriesCruyskens \r\n\r\nWe recommend using authentication for functions which are sensitive.\r\n\r\nThere is no practical way to hide functions on the OpenFaaS gateway, since it is the only way that we recommend to access a function, whether you consider it private or public.\r\n\r\nSo, that brings me on to my preferred solution at present.\r\n\r\nWherever possible, always use authentication - shared secrets, OAuth clients, etc.\r\n\r\nFor when you have functions that are called by the cron-connector, it has no way to send authentication, therefore, I would suggest you hide the gateway from the Internet completely.\r\n\r\nThen just expose what you want the Internet to access.\r\n\r\nYou can create an Ingress record for a domain and one TLS cert for each of them or for a specific path on a single domain and only use one TLS cert for all of them.\r\n\r\nWe have provided FunctionIngress for you to achieve this: https://docs.openfaas.com/reference/ssl/kubernetes-with-cert-manager/#20-tls-and-custom-domains-for-functions\r\n\r\n![private-mapped](https://user-images.githubusercontent.com/6358735/175051295-c0c019ef-cab9-4287-938e-c9a131396b31.png)\r\n\r\n* `blog` is remapped to `blog.example.com` and has a mixture of anonymous authentication and OAuth2 for the admin page, it must be public\r\n* `github-events` receives webhooks, and does HMAC authentication before processing events, but must be public.\r\n* `invoice-customers` is called daily, and checks for customers who need an invoice then emails them. It would not be an issue if it was called externally, however it could generate more emails than we want. The Cron Connector calls it and has direct access to the Internet. The gateway is not exposed on the Internet, and therefore external users cannot invoke this function.\r\n\r\nIf you need to do deploys to the gateway, you can open up another HTTP Path / Route or custom domain and just allow the `/system/` endpoint to be exposed there.\r\n\r\nThe same concepts work with faasd, using Caddy and the examples written in [Serverless for Everyone Else](https://gumroad.com/l/serverless-for-everyone-else)\r\n\r\nI'll close this issue as resolved / as designed, however feel free to keep the discussion going.\r\n\r\nRegards,\r\n\r\nAlex""]}"
1732,gateway ui and faas-cli not listing  the functions,https://github.com/openfaas/faas/issues/1732,"{'description': ""<!-- Due dilligence -->\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!-- How is this affecting you? What task are you trying to accomplish? -->\r\n## Why do you need this?\r\n\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!--- Given this request for help, how are you supporting the project? -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\nfaas-cli list  --tls-no-verify -g https://openfaas.xxxxxx.texxxxxxxst.thuxxxxxnderhead.io\r\nCannot parse result from OpenFaaS on URL: https://openfaas.anand.test.thunderhead.io/system/functions\r\nunexpected end of JSON input\r\n\r\n\r\n## Your Environment\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n`\r\nCLI:\r\n commit:  b1c09c0243f69990b6c81a17d7337f0fd23e7542\r\n version: 0.14.2\r\n`\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n`\r\nClient:\r\n Version:           20.10.13\r\n API version:       1.41\r\n Go version:        go1.16.15\r\n Git commit:        a224086\r\n Built:             Thu Mar 31 19:20:32 2022\r\n OS/Arch:           linux/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer:\r\n Engine:\r\n  Version:          20.10.13\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.16.15\r\n  Git commit:       906f57f\r\n  Built:            Thu Mar 31 19:21:13 2022\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.4.13\r\n  GitCommit:        9cc61520f4cd876b86e77edfeb88fbcd536d1f9d\r\n runc:\r\n  Version:          1.0.3\r\n  GitCommit:        f46b6ba2c9314cfc8caae24a32ec5fe9ef1059fe\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n  `\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\nyes.\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nUbuntu and faas-cli ran on MAc laptop\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n"", 'comments': ['There is tight coupling with a prometheus and alertmanager . Trying to figure out how to specify existing prometheus and alertmanager url.', 'Basically system functions  are part of prometheus metrics,  I will customise the chart to support prometheus-operator using servicemonitor CRD.', 'Hi, @anannaya\r\n\r\nWith the limited information you have provided us it is hard to understand what issue you are experiencing exactly.\r\n\r\nI have verified that the functions are correctly listed in the gateway UI and using the faas-cli.\r\n\r\nHan', '@welteki  I did not enable the promtheus and alert-manager .  So UI did not display the functions.']}"
1744,using playwright with openfaas?,https://github.com/openfaas/faas/issues/1744,"{'description': '<!-- Due dilligence -->\r\n## My actions before raising this issue\r\n- [x ] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x ] Searched [past issues](/issues)\r\n\r\n<!-- How is this affecting you? What task are you trying to accomplish? -->\r\n\r\nHere is blog about Puppeteer: https://www.openfaas.com/blog/puppeteer-scraping/\r\n\r\nIs it possible to use FAAS with Playwright?  https://playwright.dev/\r\n\r\nAWS Lambda works fine with Chrome, Firefox/Edge not.\r\n\r\nPuppeteer Team is now working on Playwright.\r\n\r\ntnx a lot!\r\n\r\n \r\n\r\n\r\n\r\n', 'comments': [""Hi @osmenia \r\n\r\nFeel free to try and find out.\r\n\r\nIf it works with AWS Lambda, then it should work in a container (which is what OpenFaaS uses)\r\n\r\nIn the future, if you'd like help please fill out the whole issue template.\r\n\r\nAlex""]}"
1746,how many qps can openfaas achieve?,https://github.com/openfaas/faas/issues/1746,"{'description': 'Does openfaas have QPS limit?', 'comments': ['Hi, there is no set limit however you must use the full issue template if you want us to answer any further questions you have.']}"
1762,how do i get a json response from the python template and view it in the openfaas legacy ui?,https://github.com/openfaas/faas/issues/1762,"{'description': ""<!-- Due dilligence -->\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!-- How is this affecting you? What task are you trying to accomplish? -->\r\n## Why do you need this?\r\n\r\nI really like the debugging UI, and would very much appreciate if I could view error JSON bodies without having to repeat the request in an external API debugger like cURL or Postman.\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\nThe JSON body provided for the error is _stringified_ and printed in the response-textarea.\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\nThe string `[object Object]` is printed beneath a newline. This is usually what you get when you coerce a JS object to a string.\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!-- Issues created by customers or monthly sponsors get priority -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [x] Yes\r\n- [ ] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n\r\nModify this line here to check the type of the data from the error, and JSONify if it's an object - it currently assumes its always a string:\r\nhttps://github.com/openfaas/faas/blob/52d0165c3f22b5d1c269dd6e43e6e6bda6559936/gateway/assets/script/bootstrap.js#L205\r\n\r\nAn example of how to do this exists in the code a few lines above:\r\nhttps://github.com/openfaas/faas/blob/52d0165c3f22b5d1c269dd6e43e6e6bda6559936/gateway/assets/script/bootstrap.js#L190\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\nI only suggested one solution - this is the one I recommend.\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1. Get the code from https://github.com/emoulsdale/openfaas-test\r\n2. run `faas-cli publish`\r\n3. navigate to the gateway UI to which you just published\r\n4. invoke the function say-hello (with any body).\r\n\r\n## Context\r\n<!-- Any additional context such as how this is affecting you or could affect other users --> \r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n0.14.2\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\nDocker version 20.10.13, build a224086\r\n\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\nkubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nMacOS Monterrey 12.6\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\nhttps://github.com/emoulsdale/openfaas-test\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\nI'd like to end by saying that I'm intending to make a PR to change this later.\r\n"", 'comments': ['Hey @emoulsdale thanks for your interest in OpenFaaS\r\n\r\nCan you confirm what the Content-Type is being returned by your API?\r\n\r\nShow us the output of:\r\n\r\n```\r\ncurl -i http://127.0.0.1:8080/function/name\r\n```\r\n\r\nFYI, your example doesn\'t return JSON or a proper content-type header, so I\'m not sure why you\'re expecting it to do so?\r\n\r\nHave a look at ""Custom Response Headers"" => https://github.com/openfaas/python-flask-template#custom-response-headers\r\n\r\nAlex', '/add label: support, question, python, templates', 'Seems like your function\'s content type was not set to JSON :)\r\n\r\n```\r\ndef handle(event, context):\r\n    return {\r\n        ""statusCode"": 200,\r\n        ""body"": {""message"": ""Hello from OpenFaaS!""},\r\n        ""headers"": {\r\n            ""Content-Type"": ""application/json""\r\n        }\r\n    }\r\n```\r\n\r\n![Screenshot from 2022-10-03 15-19-44](https://user-images.githubusercontent.com/6358735/193600758-8597fe11-bb75-453b-b883-b92a46a679ce.png)\r\n\r\nI\'ll get this closed.\r\n\r\nBear in mind that it costs us money to answer every support question like this.\r\n\r\nIf you\'re using OpenFaaS, consider becoming a sponsor to OpenFaaS on a set monthly amount or some custom amount that you feel represents the value of the work we do better.\r\n\r\nAlex', '/add label: invalid', ""Btw, don't worry about the invalid label, it's just to help us track real issues and breakage vs user support.\r\n\r\nYou can meet us every week on Wednesdays https://docs.openfaas.com/community/\r\n\r\nI also took the opportunity to improve the docs for the template that you're using to add the JSON example:\r\n\r\nhttps://github.com/openfaas/python-flask-template""]}"
1771,wsl + openfaas: can't connect to nats,https://github.com/openfaas/faas/issues/1771,"{'description': '<!-- Due dilligence -->\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!-- How is this affecting you? What task are you trying to accomplish? -->\r\n## Why do you need this?\r\n\r\nInstall OpenFaas on my K8S cluster\r\n\r\n## Who is this for?\r\n\r\nMe\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n\r\nWhen I try to install OpenFaaS using faas-netes in k8s using WSL under Windows, I get the following in both the `gateway` and `queueworker` pods:\r\n\r\n```console\r\nOpenFaaS Gateway - Community Edition (CE)\r\n\r\nVersion: 0.25.2 Commit: bc2eeff4678407583faec982c1c7d1da915dd60c\r\nTimeouts: read=5m2s\twrite=5m2s\tupstream=5m0s\r\nFunction provider: http://127.0.0.1:8081/\r\n\r\n2022/12/05 15:58:31 Async enabled: Using NATS Streaming.\r\n2022/12/05 15:58:31 Opening connection to nats://nats.openfaas.svc.cluster.local:4222\r\n2022/12/05 15:58:31 Connect: nats://nats.openfaas.svc.cluster.local:4222\r\n2022/12/05 15:58:33 dial tcp 10.101.241.144:4222: i/o timeout\r\n```\r\n\r\nI have opened the following [issue](https://github.com/openfaas/faas-netes/issues/1045) on the `faas-netes` repository but I don\'t think this is related to helm since I have tried `arkade` also to deploy it and I get the same issue.\r\n\r\n## Expected Behaviour\r\n<!--- If you\'re describing a bug, tell us what should happen -->\r\n\r\nBoth the `gateway` and the `queueworker` pods should be able to connect to nats\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## Steps to Reproduce (for bugs)\r\n1. Deploy a K8S cluster using Docker Desktop in WSL (Ubuntu 22.04)\r\n2. Use helm to deploy OpenFaaS\r\n3. Gateway and Queue Worker never manage to connect using nats\r\n\r\n## Context\r\n\r\nUsing WSL in Windows (Ubuntu 22.04)\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n```console\r\nCLI:\r\n commit:  0074051aeb837f5f160ee8736341460468b5c190\r\n version: 0.15.4\r\n```\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n```\r\nClient: Docker Engine - Community\r\n Cloud integration: v1.0.29\r\n Version:           20.10.20\r\n API version:       1.41\r\n Go version:        go1.18.7\r\n Git commit:        9fdeb9c\r\n Built:             Tue Oct 18 18:20:44 2022\r\n OS/Arch:           linux/amd64\r\n Context:           default\r\n Experimental:      true\r\n\r\nServer: Docker Desktop\r\n Engine:\r\n  Version:          20.10.20\r\n  API version:      1.41 (minimum version 1.12)\r\n  Go version:       go1.18.7\r\n  Git commit:       03df974\r\n  Built:            Tue Oct 18 18:18:35 2022\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n containerd:\r\n  Version:          1.6.8\r\n  GitCommit:        9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6\r\n runc:\r\n  Version:          1.1.4\r\n  GitCommit:        v1.1.4-0-g5fd4c4d\r\n docker-init:\r\n  Version:          0.19.0\r\n  GitCommit:        de40ad0\r\n```\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\n\r\nKubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\n\r\nUbuntu 22.04 in WSL (Windows)\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\nI have been on it for more than a week. I tried setting `NO_PROXY` using `export no_proxy="".svc,.svc.cluster.local""` but no changes.\r\n\r\nI also checked this section on your website:\r\n```\r\nThe gateway must be able to talk to nats and prometheus. If these are crashing, you probably have networking issues preventing containers from talking to each over or looking up each other over DNS.\r\n```\r\n\r\nThe DNS does not seem to be the issue here as it resolved the address. Is there a command I can use to test the connection between the gateway and the nats pod?\r\n\r\nAny help would be greatly appreciated.\r\n', 'comments': [""Hi, I was certain I had hit send on my message 2 days ago.\r\n\r\nWe cannot debug your environment for you, but I can point you in the right direction.\r\n\r\nThis error happens due to a misconfiguration of networking or DNS.\r\n\r\nTry deploying an Nginx pod in one namespace and a curl pod in the second, if they fail to reach each other, that's effectively the same thing as is going on for you here with OpenFaaS Community Edition.\r\n\r\nYou may want to contact Microsoft or Docker for support for the WSL product, since we have no issue with OpenFaaS in correctly configured environments we'll get this issue closed now.\r\n\r\nAlex"", '/add label: support,question,wsl', 'Thanks. It ended up working all of a sudden after I restarted Docker Desktop. No idea why. However, in the meantime, I have move on to another topic. I will definitely remember this if this happens again.']}"
1781,how does autoscaling work with openfaas ce?,https://github.com/openfaas/faas/issues/1781,"{'description': 'hello，I am a serverless student，we deploy some python3 runtime function in the OpenFaaS，and use apachebench send large POST request to test it auto extend performance. But, we still not see Replicas extend，we deploy function code is：\r\n```bash\r\nfaas-cli deploy -f rc-r.yml --label com.openfaas.scale.max=10 --label com.openfaas.scale.target=3 --label com.openfaas.scale.min=1 --label com.openfaas.scale.target-proportion=0.6\r\n```\r\nand we also try set com.openfaas.scale.target=1 and com.openfaas.scale.target-proportion=0.1，but it can not extend？\r\n\r\nwe python3 function code is：\r\n```python\r\nfrom rediscluster import RedisCluster\r\nimport json\r\nimport time\r\ndef handle(req):\r\n  json_req = json.loads(req)\r\n  key = str(json_req[""key""])\r\n\r\n  nodes = [\r\n        {\'host\': \'192.168.0.113\', \'port\': \'6001\'},\r\n        {\'host\': \'192.168.0.124\', \'port\': \'6001\'},\r\n        {\'host\': \'192.168.0.232\', \'port\': \'6001\'},\r\n  ]\r\n\r\n  start = time.time()\r\n  src = RedisCluster(startup_nodes=nodes, decode_responses=True)\r\n  res = src.get(key)\r\n  t = float(time.time() - start) * 1000\r\n\r\n  result = {""res"": str(res), ""time"": str(t)}\r\n  return json.dumps(result)\r\n```\r\nwe apachebench test script code is:\r\n```bash\r\nab -n 100000000 -c 20 -t 60 -p ./data -T ""application/json""  -v 4 ""http://192.168.0.113:31112/function/rc-r""\r\n```\r\nand we also try very much args in -n or -c 、-t，but it can not work.\r\nit is apachebench test result：\r\n![image](https://user-images.githubusercontent.com/54056797/223386479-8b09ef59-40c4-42c6-a00e-3bdae8403d38.png)\r\nit is my `faas-cli ls` display Replicas result：\r\n![image](https://user-images.githubusercontent.com/54056797/223386672-137ea5af-643b-4d44-8f7c-9ceaad44fdaa.png)\r\nthis result born in we all test.\r\n\r\nmy hardware：3 * 2vCPU 4GB public cloud server.\r\n\r\nI hope OpenFaaS group give me some suggestion，such as setup、hardware or software，and ask me why it Replicas  could not extend？\r\nthank you！\r\ngive you best wish！\r\n', 'comments': ['/set title: How does autoscaling work', ""Hi @QWQyyy it looks like you've got confused and are trying to apply OpenFaaS Pro auto-scaling to OpenFaaS CE\r\n\r\nFor OpenFaaS CE see: https://github.com/openfaas/workshop\r\n\r\nLab 9 covers autoscaling for CE https://github.com/openfaas/workshop#lab-9---advanced-feature---auto-scaling\r\n\r\nThanks for your interest, I'll get this closed now.\r\n\r\nAlex""]}"
1789,can't find openfaas/queue-worker:0.11.2 and openfaas/basic-auth-plugin:0.20.1,https://github.com/openfaas/faas/issues/1789,"{'description': ""Why are they not available in https://hub.docker.com/u/openfaas?\r\n\r\n<!-- Due dilligence -->\r\n## My actions before raising this issue\r\n- [x] Followed the [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting/)\r\n- [x] Read/searched [the docs](https://docs.openfaas.com/)\r\n- [x] Searched [past issues](/issues)\r\n\r\n<!-- How is this affecting you? What task are you trying to accomplish? -->\r\n## Why do you need this?\r\nour jobs are failing because these images are unavailable\r\n\r\n## Who is this for?\r\n\r\nWhat company is this for? Are you listed in the [ADOPTERS.md](https://github.com/openfaas/faas/blob/master/ADOPTERS.md) file?\r\n\r\n<!--- Provide a general summary of the issue in the Title above -->\r\n## Expected Behaviour\r\n<!--- If you're describing a bug, tell us what should happen -->\r\n<!--- If you're suggesting a change/improvement, tell us how it should work -->\r\n\r\n\r\n## Current Behaviour\r\n<!--- If describing a bug, tell us what happens instead of the expected behavior -->\r\n<!--- If suggesting a change/improvement, explain the difference from current behavior -->\r\n\r\n\r\n## Are you a GitHub Sponsor (Yes/No?)\r\n<!-- Issues created by customers or monthly sponsors get priority -->\r\n\r\nCheck at: https://github.com/sponsors/openfaas\r\n- [ ] Yes\r\n- [x] No\r\n\r\n## List All Possible Solutions and Workarounds\r\n<!--- Suggest a fix/reason for the bug, or ideas how to implement  -->\r\n<!--- the addition or change -->\r\n<!--- Is there a workaround which could avoid making changes? -->\r\n\r\n## Which Solution Do You Recommend?\r\n<!--- Pick your preferred solution, if you were to implement and maintain this change -->\r\n\r\n\r\n## Steps to Reproduce (for bugs)\r\n<!--- Provide a link to a live example, or an unambiguous set of steps to -->\r\n<!--- reproduce this bug. Include code to reproduce, if relevant -->\r\n1.\r\n2.\r\n3.\r\n4.\r\n\r\n## Context\r\n<!-- Any additional context such as how this is affecting you or could affect other users --> \r\n\r\n\r\n## Your Environment\r\n<!--- Include as many relevant details about the environment you experienced the bug in -->\r\n* FaaS-CLI version ( Full output from: `faas-cli version` ):\r\n\r\n* Docker version `docker version` (e.g. Docker 17.0.05 ):\r\n\r\n* Are you using OpenFaaS on Kubernetes or [faasd](https://github.com/openfaas/faasd)?\r\nOpenFaaS on Kubernetes\r\n\r\n* Operating System and version (e.g. Linux, Windows, MacOS):\r\nLinux\r\n\r\n* Code example or link to GitHub repo or gist to reproduce problem:\r\n\r\n* Other diagnostic information / logs from [troubleshooting guide](https://docs.openfaas.com/deployment/troubleshooting)\r\n\r\n"", 'comments': [""Hi\r\n\r\nOpenFaaS is hosted on ghcr.io [not on the Docker Hub](https://www.openfaas.com/blog/how-does-docker-hub-affect-openfaas/) and it's been that way for ~ 2 years.\r\n\r\nIt sounds like you need to update your Helm chart... why are you using such ancient versions of things?\r\n\r\nAlex"", '/add label: support,question,wontfix', '/lock: inactive ']}"
